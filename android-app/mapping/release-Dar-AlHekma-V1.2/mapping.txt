com.navibees.sdk.AppManager -> com.navibees.sdk.a:
    com.navibees.sdk.AppManager ourInstance -> c
    com.navibees.sdk.model.metadata.MetaDataManager metaDataManager -> d
    com.navibees.sdk.model.postioning.PositionManager positionManager -> e
    com.navibees.sdk.model.server.ServerManager serverManager -> a
    com.navibees.sdk.util.AssetsManager assetsManager -> f
    com.navibees.sdk.model.postioning.NaviBeesBeaconManager naviBeesBeaconManager -> b
    com.navibees.sdk.AppManager$OnInitializedListener mInitializationListener -> g
    android.content.Context mContext -> h
    android.app.ProgressDialog mProgressBar -> i
    boolean isInitializing -> j
    com.navibees.sdk.AppManager getInstance() -> a
    com.navibees.sdk.model.metadata.MetaDataManager getMetaDataManager() -> b
    com.navibees.sdk.model.postioning.PositionManager getPositionManager(android.app.Activity,com.navibees.sdk.model.postioning.IndoorLocationListener) -> a
    void recycle() -> c
    void initialize(android.content.Context,com.navibees.sdk.AppManager$OnInitializedListener) -> a
    void assetsCopyCallback$171db248() -> d
    void allMetaDataFilesAreReady(java.lang.Boolean) -> a
com.navibees.sdk.AppManager$OnInitializedListener -> com.navibees.sdk.b:
    void onInitialized(boolean) -> a
com.navibees.sdk.ApplicationConstants -> com.navibees.sdk.c:
    java.lang.String mapResourcesImagesPath -> a
    java.lang.String mapResourcesMetadataPath -> b
    java.lang.String mapResourcesNetworkDatasetsPath -> c
    java.lang.String mapResourcesTiledLayerPath -> d
com.navibees.sdk.CustomPushBroadcastReceiver -> com.navibees.sdk.CustomPushBroadcastReceiver:
    com.google.gson.Gson gson -> a
    void onPushOpen(android.content.Context,android.content.Intent) -> onPushOpen
    void onPushDismiss(android.content.Context,android.content.Intent) -> onPushDismiss
    void onPushReceive(android.content.Context,android.content.Intent) -> onPushReceive
    android.app.Notification buildNotification(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap,android.app.PendingIntent,android.app.PendingIntent) -> b
    android.app.Notification access$000$6b66e61c(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap,android.app.PendingIntent,android.app.PendingIntent) -> a
com.navibees.sdk.CustomPushBroadcastReceiver$1 -> com.navibees.sdk.d:
    com.navibees.sdk.CustomPushBroadcastReceiver this$0 -> a
com.navibees.sdk.CustomPushBroadcastReceiver$2 -> com.navibees.sdk.e:
    com.navibees.sdk.CustomPushBroadcastReceiver this$0 -> a
com.navibees.sdk.CustomPushBroadcastReceiver$3 -> com.navibees.sdk.f:
    android.content.Context val$context -> a
    java.lang.String val$finalTitle -> b
    java.lang.String val$finalMessage -> c
    android.app.PendingIntent val$pContentIntent -> d
    android.app.PendingIntent val$pDeleteIntent -> e
    android.graphics.Bitmap val$defaultLargeIcon -> f
    com.navibees.sdk.CustomPushBroadcastReceiver this$0 -> g
    void onNewResultImpl(android.graphics.Bitmap) -> onNewResultImpl
    void onFailureImpl(com.facebook.datasource.DataSource) -> onFailureImpl
com.navibees.sdk.NaviBeesApplication -> com.navibees.sdk.NaviBeesApplication:
    org.altbeacon.beacon.startup.RegionBootstrap regionBootstrap -> a
    org.altbeacon.beacon.powersave.BackgroundPowerSaver backgroundPowerSaver -> b
    android.content.SharedPreferences sp -> c
    android.content.SharedPreferences$Editor editor -> d
    void onCreate() -> onCreate
    void didEnterRegion(org.altbeacon.beacon.Region) -> didEnterRegion
    void didExitRegion(org.altbeacon.beacon.Region) -> didExitRegion
    void didDetermineStateForRegion(int,org.altbeacon.beacon.Region) -> didDetermineStateForRegion
    void setAppInForeground(java.lang.Boolean) -> setAppInForeground
    java.lang.String getClientID() -> getClientID
    java.lang.String getLicenseCode() -> getLicenseCode
com.navibees.sdk.NaviBeesApplication$1 -> com.navibees.sdk.g:
    com.navibees.sdk.NaviBeesApplication this$0 -> a
com.navibees.sdk.activity.AboutActivity -> com.navibees.sdk.activity.AboutActivity:
    int resourceID -> a
    void onCreate(android.os.Bundle) -> onCreate
    void setContentViewRes(int) -> setContentViewRes
    void onResume() -> onResume
    void onPause() -> onPause
    int getActionBarLayoutRes() -> getActionBarLayoutRes
    int getActionBarLayoutBackgroundRes() -> getActionBarLayoutBackgroundRes
    void customiseActionBarTitle(android.widget.TextView) -> customiseActionBarTitle
com.navibees.sdk.activity.AboutActivity$1 -> com.navibees.sdk.activity.AboutActivity$1:
    com.navibees.sdk.activity.AboutActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.navibees.sdk.activity.ActivitiesActivity -> com.navibees.sdk.activity.ActivitiesActivity:
    android.support.v7.widget.SearchView searchView -> a
    android.widget.TextView actionBarTitle -> b
    void onCreate(android.os.Bundle) -> onCreate
    int getActionBarLayoutRes() -> getActionBarLayoutRes
    int getActionBarLayoutBackgroundRes() -> getActionBarLayoutBackgroundRes
    void customiseActionBarTitle(android.widget.TextView) -> customiseActionBarTitle
    void onInitialized(boolean) -> a
    void openFragment(android.support.v4.app.Fragment,boolean) -> a
    void customiseActivityInfoIcon(android.widget.ImageView) -> customiseActivityInfoIcon
    void onResume() -> onResume
    void onPause() -> onPause
com.navibees.sdk.activity.ActivitiesActivity$1 -> com.navibees.sdk.activity.ActivitiesActivity$1:
    com.navibees.sdk.activity.ActivitiesActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.navibees.sdk.activity.MapActivity -> com.navibees.sdk.activity.MapActivity:
    boolean isTrackerOn -> b
    android.widget.ImageView myLocation -> c
    android.widget.ImageView direction -> d
    com.esri.android.map.MapView mapView -> e
    com.esri.android.map.GraphicsLayer currentLocationGraphicsLayer -> f
    com.esri.android.map.GraphicsLayer routesGraphicsLayer -> g
    com.esri.android.map.GraphicsLayer restrictionsGraphicsLayer -> h
    com.esri.android.map.GraphicsLayer poisGraphicsLayer -> i
    android.widget.FrameLayout mapOverlay -> j
    java.util.ArrayList floorsName -> k
    com.esri.core.map.Graphic currentLocationGraphic -> l
    com.esri.core.map.Graphic currentLocationHoverLowConfidenceGraphic -> m
    com.esri.core.map.Graphic currentLocationHoveMediumConfidenceGraphic -> n
    com.esri.core.symbol.PictureMarkerSymbol currentLocationSymbol -> o
    com.esri.core.symbol.SimpleMarkerSymbol currentLocationWithoutSmoothingSymbol -> p
    com.esri.core.symbol.PictureMarkerSymbol currentLocationHoverLowConfidenceSymbol -> q
    com.esri.core.symbol.PictureMarkerSymbol currentLocationHoverMediumConfidenceSymbol -> r
    com.navibees.sdk.model.metadata.json.IndoorLocation defaultLocation -> s
    com.navibees.sdk.model.metadata.json.IndoorLocation mCurrentLocation -> t
    com.navibees.sdk.model.metadata.MetaDataManager metaDataManager -> u
    com.navibees.sdk.model.metadata.json.Floor floor -> v
    java.util.List categories -> w
    java.util.List allPOIs -> x
    java.util.Map currentFloorPOIsPerCategory -> y
    int[][] currentFloorPOIsPerCategoryIDs -> z
    android.view.View mCallout -> A
    android.view.View mMultiFloorCallout -> B
    android.widget.TextView floorNameTV -> C
    java.util.List floorList -> D
    int endPointGraphicIDSourceFloor -> E
    int startPointGraphicIDTargetFloor -> F
    int mMultiRouteSourceFloorIndex -> G
    int mMultiRouteTargetPOIFloorIndex -> H
    com.esri.core.geometry.Point mSourceCalloutLocation -> I
    com.esri.core.geometry.Point mTargetCalloutLocation -> J
    android.util.SparseArray routeGraphicPerFloor -> K
    int[] currentFloorRestrictionsGraphicsIDs -> L
    int screenDPI -> a
    com.navibees.sdk.model.metadata.json.ApplicationConfiguration applicationConfiguration -> M
    android.widget.TextView numberOfBeacons -> N
    boolean isAutomaticModeEnabled -> O
    int previousFloorIndex -> P
    int changeFloorCounter -> Q
    java.lang.String CURRENT_LOCATION_KEY -> R
    java.lang.String SOURCE_FLOOR_KEY -> S
    java.lang.String TARGET_FLOOR_KEY -> T
    java.lang.String SOURCE_CALLOUT_LOCATION_KEY -> U
    java.lang.String TARGET_CALLOUT_LOCATION_KEY -> V
    java.lang.String ROUTE_GRAPHIC_PER_FLOOR_KEY -> W
    android.widget.TextView mNavigationTextView -> X
    int segmentGraphicId -> Y
    android.animation.Animator$AnimatorListener showListener -> Z
    android.animation.Animator$AnimatorListener hideListener -> aa
    void onCreate(android.os.Bundle) -> onCreate
    void onInitialized(boolean) -> a
    boolean clickOnEntryPointsOfPortals(float,float) -> a
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onStop() -> onStop
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void setupActionBar() -> a
    void locationCallback$19e9d1b2(com.navibees.sdk.model.metadata.json.IndoorLocation) -> a
    void removeSegmentGraphic() -> b
    void startTracking() -> c
    void centerMapOnCurrentLocation() -> d
    void changeToFloor(int,boolean) -> a
    void drawRouteGraphicsOfCurrentFloor(boolean) -> b
    void drawCurrentLocationGraphics() -> e
    void drawCurrentFloorMap() -> f
    void onStatusChanged(java.lang.Object,com.esri.android.map.event.OnStatusChangedListener$STATUS) -> onStatusChanged
    void onSingleTap(float,float) -> onSingleTap
    void prePointerMove(float,float,float,float) -> prePointerMove
    void postPointerMove(float,float,float,float) -> postPointerMove
    void prePointerUp(float,float,float,float) -> prePointerUp
    void postPointerUp(float,float,float,float) -> postPointerUp
    void preAction(float,float,double) -> preAction
    void postAction(float,float,double) -> postAction
    void showOrHidePoisWrtZoomLevel() -> g
    com.navibees.sdk.model.metadata.json.POICategory getCategory(com.navibees.sdk.model.metadata.json.POI) -> a
    void showMultiFloorRouteCallout(java.lang.String,com.esri.core.geometry.Point,boolean) -> a
    void onRoutingFinished(android.util.SparseArray,int,int,com.esri.core.geometry.Point,com.esri.core.geometry.Point) -> a
    void initiateTurnByTurnNavigation(android.util.SparseArray,int) -> a
    void resetRouteGraphicsVariables() -> h
    void myLocationOnClickListener() -> myLocationOnClickListener
    void directionOnClickListener() -> directionOnClickListener
    void floorsActionItemOnClickListener() -> floorsActionItemOnClickListener
    void floorsOnMenuItemClick(android.view.MenuItem) -> floorsOnMenuItemClick
    void moreActionItemOnClickListener() -> moreActionItemOnClickListener
    void mapFilterMenuItemOnClickListener() -> mapFilterMenuItemOnClickListener
    void aboutMenuItemOnClickListener() -> aboutMenuItemOnClickListener
    void activitiesMenuItemOnClickListener() -> activitiesMenuItemOnClickListener
    void settingsMenuItemOnClickListener() -> settingsMenuItemOnClickListener
    void moreActionExtraMenuItemOnClickListener(android.view.MenuItem) -> moreActionExtraMenuItemOnClickListener
    int getActionBarLayoutRes() -> getActionBarLayoutRes
    int getActionBarLayoutBackgroundRes() -> getActionBarLayoutBackgroundRes
    void customizeActionBarTitle(android.widget.TextView) -> customizeActionBarTitle
    int getMoreActionsMenuRes() -> getMoreActionsMenuRes
    void customizeActionBarMoreActionsView(android.view.View) -> customizeActionBarMoreActionsView
    void customizeActionBarFloorsSelectionIcon(android.widget.ImageView) -> customizeActionBarFloorsSelectionIcon
    void customizeActionBarFloorName(android.widget.TextView) -> customizeActionBarFloorName
    android.widget.ImageView getMyLocationImageView() -> getMyLocationImageView
    int getCurrentLocationOnDrawableRes() -> getCurrentLocationOnDrawableRes
    int getCurrentLocationOffDrawableRes() -> getCurrentLocationOffDrawableRes
    android.widget.ImageView getRouteToImageView() -> getRouteToImageView
    int getCalloutLayoutRes() -> getCalloutLayoutRes
    int getCalloutLayoutBackgroundRes() -> getCalloutLayoutBackgroundRes
    void customizeCalloutPOIName(android.widget.TextView) -> customizeCalloutPOIName
    void customizeCalloutLeftIcon(android.widget.ImageView) -> customizeCalloutLeftIcon
    void customizeCalloutRightIcon(android.widget.ImageView) -> customizeCalloutRightIcon
    void calloutOnClickListener() -> calloutOnClickListener
    int getCurrentLocationPinRes() -> getCurrentLocationPinRes
    int getLowConfidenceRes() -> getLowConfidenceRes
    int getMediumConfidenceRes() -> getMediumConfidenceRes
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    java.lang.Class getAboutActivity() -> getAboutActivity
    java.lang.Class getRouteToActivity() -> getRouteToActivity
    java.lang.Class getActivitiesActivity() -> getActivitiesActivity
    java.lang.Class getPOIsCategoriesFilterActivity() -> getPOIsCategoriesFilterActivity
    com.navibees.sdk.util.NaviBeesAlphanumComparator$ComparatorType getRouteToCategorySortType() -> getRouteToCategorySortType
    com.navibees.sdk.util.NaviBeesAlphanumComparator$ComparatorType getRouteToPOISortType() -> getRouteToPOISortType
    com.navibees.sdk.util.NaviBeesAlphanumComparator$ComparatorType getRouteToFacilitySortType() -> getRouteToFacilitySortType
    java.lang.Class getSettingsActivity() -> getSettingsActivity
    com.navibees.sdk.model.metadata.MetaDataManager access$000(com.navibees.sdk.activity.MapActivity) -> a
    void access$100(com.navibees.sdk.activity.MapActivity,android.view.View) -> a
    void access$200(com.navibees.sdk.activity.MapActivity,android.view.View) -> b
    android.widget.TextView access$300(com.navibees.sdk.activity.MapActivity) -> b
    android.animation.Animator$AnimatorListener access$400(com.navibees.sdk.activity.MapActivity) -> c
    android.animation.Animator$AnimatorListener access$500(com.navibees.sdk.activity.MapActivity) -> d
    com.esri.android.map.MapView access$600(com.navibees.sdk.activity.MapActivity) -> e
    android.widget.TextView access$700(com.navibees.sdk.activity.MapActivity) -> f
    com.navibees.sdk.model.metadata.json.Floor access$800(com.navibees.sdk.activity.MapActivity) -> g
    boolean access$902$5850974a(com.navibees.sdk.activity.MapActivity) -> h
    int access$1000(com.navibees.sdk.activity.MapActivity) -> i
    void access$1100$4e36a613(com.navibees.sdk.activity.MapActivity,int) -> a
    int access$1200(com.navibees.sdk.activity.MapActivity) -> j
    com.navibees.sdk.model.metadata.json.IndoorLocation access$1300(com.navibees.sdk.activity.MapActivity) -> k
    void access$1400(com.navibees.sdk.activity.MapActivity) -> l
    void access$1500(com.navibees.sdk.activity.MapActivity) -> m
    void access$1600(com.navibees.sdk.activity.MapActivity) -> n
    void access$1700(com.navibees.sdk.activity.MapActivity) -> o
com.navibees.sdk.activity.MapActivity$1 -> com.navibees.sdk.activity.MapActivity$1:
    com.navibees.sdk.activity.MapActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.navibees.sdk.activity.MapActivity$10 -> com.navibees.sdk.activity.MapActivity$10:
    com.navibees.sdk.activity.MapActivity this$0 -> a
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
com.navibees.sdk.activity.MapActivity$11 -> com.navibees.sdk.activity.MapActivity$11:
    com.navibees.sdk.activity.MapActivity this$0 -> a
    void run() -> run
com.navibees.sdk.activity.MapActivity$12 -> com.navibees.sdk.activity.MapActivity$12:
    com.navibees.sdk.activity.MapActivity this$0 -> a
    void run() -> run
com.navibees.sdk.activity.MapActivity$13 -> com.navibees.sdk.activity.MapActivity$13:
    boolean val$isSourceFloor -> a
    com.navibees.sdk.activity.MapActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.navibees.sdk.activity.MapActivity$14 -> com.navibees.sdk.activity.MapActivity$14:
    com.navibees.sdk.model.metadata.json.POI val$selectedPOI -> a
    com.navibees.sdk.activity.MapActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.navibees.sdk.activity.MapActivity$15 -> com.navibees.sdk.activity.MapActivity$15:
    android.support.v7.widget.PopupMenu val$popMenu -> a
    com.navibees.sdk.activity.MapActivity this$0 -> b
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.navibees.sdk.activity.MapActivity$16 -> com.navibees.sdk.activity.MapActivity$16:
    android.support.v7.widget.PopupMenu val$popMenu -> a
    com.navibees.sdk.activity.MapActivity this$0 -> b
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.navibees.sdk.activity.MapActivity$2 -> com.navibees.sdk.activity.MapActivity$2:
    com.navibees.sdk.activity.MapActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.navibees.sdk.activity.MapActivity$3 -> com.navibees.sdk.activity.MapActivity$3:
    android.view.View val$customView -> a
    com.navibees.sdk.activity.MapActivity this$0 -> b
    void run() -> run
com.navibees.sdk.activity.MapActivity$4 -> com.navibees.sdk.activity.MapActivity$4:
    com.navibees.sdk.activity.MapActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.navibees.sdk.activity.MapActivity$5 -> com.navibees.sdk.activity.MapActivity$5:
    com.navibees.sdk.activity.MapActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.navibees.sdk.activity.MapActivity$7 -> com.navibees.sdk.activity.MapActivity$7:
    com.navibees.sdk.model.routing.TurnByTurnNavigation$NavigationResult val$result -> a
    com.navibees.sdk.activity.MapActivity this$0 -> b
    void run() -> run
com.navibees.sdk.activity.MapActivity$8 -> com.navibees.sdk.activity.MapActivity$8:
    com.navibees.sdk.activity.MapActivity this$0 -> a
    void run() -> run
com.navibees.sdk.activity.MapActivity$9 -> com.navibees.sdk.activity.MapActivity$9:
    com.navibees.sdk.activity.MapActivity this$0 -> a
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
com.navibees.sdk.activity.NotificationHandlerActivity -> com.navibees.sdk.activity.NotificationHandlerActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.navibees.sdk.activity.POIsCategoriesFilterActivity -> com.navibees.sdk.activity.POIsCategoriesFilterActivity:
    android.widget.ListView listView -> a
    com.navibees.sdk.activity.POIsCategoriesFilterActivity$POICategoryFilterListAdapter adapter -> b
    android.content.SharedPreferences sp -> c
    android.content.SharedPreferences$Editor editor -> d
    int resourceID -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onInitialized(boolean) -> a
    int getActionBarLayoutRes() -> getActionBarLayoutRes
    int getActionBarLayoutBackgroundRes() -> getActionBarLayoutBackgroundRes
    void customiseActionBarTitle(android.widget.TextView) -> customiseActionBarTitle
    void onResume() -> onResume
    void onPause() -> onPause
    void access$000(com.navibees.sdk.activity.POIsCategoriesFilterActivity,com.navibees.sdk.model.metadata.json.POICategory) -> a
com.navibees.sdk.activity.POIsCategoriesFilterActivity$1 -> com.navibees.sdk.activity.POIsCategoriesFilterActivity$1:
    com.navibees.sdk.activity.POIsCategoriesFilterActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.navibees.sdk.activity.POIsCategoriesFilterActivity$POICategoryFilterListAdapter -> com.navibees.sdk.activity.POIsCategoriesFilterActivity$POICategoryFilterListAdapter:
    java.util.List categoriesList -> b
    com.navibees.sdk.activity.POIsCategoriesFilterActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void onClick(android.view.View) -> onClick
com.navibees.sdk.activity.RouteToActivity -> com.navibees.sdk.activity.RouteToActivity:
    android.widget.ExpandableListView listView -> a
    com.navibees.sdk.adapter.POIExpandableListAdapter adapter -> b
    int resourceID -> c
    int previousExpandedGroup -> d
    boolean isComingFromSearch -> e
    android.support.v7.widget.SearchView searchView -> f
    com.navibees.sdk.activity.RouteToActivity$SearchTask searchTask -> g
    android.app.ProgressDialog progressDialog -> h
    com.navibees.sdk.util.NaviBeesAlphanumComparator$ComparatorType categorySortType -> i
    com.navibees.sdk.util.NaviBeesAlphanumComparator$ComparatorType poiSortType -> j
    com.navibees.sdk.util.NaviBeesAlphanumComparator$ComparatorType facilitySortType -> k
    void onCreate(android.os.Bundle) -> onCreate
    void onInitialized(boolean) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    int getActionBarLayoutRes() -> getActionBarLayoutRes
    int getActionBarLayoutBackgroundRes() -> getActionBarLayoutBackgroundRes
    void customiseActionBarTitle(android.widget.TextView) -> customiseActionBarTitle
    boolean access$000(com.navibees.sdk.activity.RouteToActivity) -> a
    int access$100(com.navibees.sdk.activity.RouteToActivity) -> b
    android.widget.ExpandableListView access$200(com.navibees.sdk.activity.RouteToActivity) -> c
    int access$102(com.navibees.sdk.activity.RouteToActivity,int) -> a
    com.navibees.sdk.adapter.POIExpandableListAdapter access$300(com.navibees.sdk.activity.RouteToActivity) -> d
    boolean access$002(com.navibees.sdk.activity.RouteToActivity,boolean) -> a
    void access$400(com.navibees.sdk.activity.RouteToActivity) -> e
    com.navibees.sdk.activity.RouteToActivity$SearchTask access$500(com.navibees.sdk.activity.RouteToActivity) -> f
    android.app.ProgressDialog access$600(com.navibees.sdk.activity.RouteToActivity) -> g
    com.navibees.sdk.activity.RouteToActivity$SearchTask access$502(com.navibees.sdk.activity.RouteToActivity,com.navibees.sdk.activity.RouteToActivity$SearchTask) -> a
    void access$800(com.navibees.sdk.activity.RouteToActivity) -> h
com.navibees.sdk.activity.RouteToActivity$1 -> com.navibees.sdk.activity.RouteToActivity$1:
    com.navibees.sdk.activity.RouteToActivity this$0 -> a
    void onGroupExpand(int) -> onGroupExpand
com.navibees.sdk.activity.RouteToActivity$2 -> com.navibees.sdk.activity.RouteToActivity$2:
    com.navibees.sdk.activity.RouteToActivity this$0 -> a
    void onGroupCollapse(int) -> onGroupCollapse
com.navibees.sdk.activity.RouteToActivity$3 -> com.navibees.sdk.activity.RouteToActivity$3:
    com.navibees.sdk.activity.RouteToActivity this$0 -> a
    boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
com.navibees.sdk.activity.RouteToActivity$4 -> com.navibees.sdk.activity.RouteToActivity$4:
    com.navibees.sdk.activity.RouteToActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.navibees.sdk.activity.RouteToActivity$5 -> com.navibees.sdk.activity.RouteToActivity$5:
    android.widget.TextView val$title -> a
    com.navibees.sdk.activity.RouteToActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.navibees.sdk.activity.RouteToActivity$6 -> com.navibees.sdk.activity.RouteToActivity$6:
    android.widget.TextView val$title -> a
    com.navibees.sdk.activity.RouteToActivity this$0 -> b
    boolean onClose() -> onClose
com.navibees.sdk.activity.RouteToActivity$7 -> com.navibees.sdk.activity.RouteToActivity$7:
    com.navibees.sdk.activity.RouteToActivity this$0 -> a
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
com.navibees.sdk.activity.RouteToActivity$SearchTask -> com.navibees.sdk.activity.RouteToActivity$SearchTask:
    com.navibees.sdk.activity.RouteToActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.Map doInBackground(java.lang.String[]) -> doInBackground
    void onProgressUpdate(java.lang.String[]) -> onProgressUpdate
    void onPostExecute(java.util.Map) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.navibees.sdk.activity.SettingActivity -> com.navibees.sdk.activity.SettingActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    int getActionBarLayoutRes() -> getActionBarLayoutRes
    int getActionBarLayoutBackgroundRes() -> getActionBarLayoutBackgroundRes
    void customiseActionBarTitle(android.widget.TextView) -> customiseActionBarTitle
com.navibees.sdk.activity.SettingActivity$1 -> com.navibees.sdk.activity.SettingActivity$1:
    com.navibees.sdk.activity.SettingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.navibees.sdk.adapter.ActivitiesPagerAdapter -> com.navibees.sdk.adapter.a:
    android.content.Context mContext -> a
    android.support.v4.app.Fragment getItem(int) -> getItem
    int getCount() -> getCount
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
com.navibees.sdk.adapter.ActivitiesRecyclerAdapter -> com.navibees.sdk.adapter.b:
    java.util.List originalActivities -> a
    android.util.SparseArray originalActivityGroupName -> e
    java.util.List originalActivityGroups -> b
    java.util.List searchResultActivities -> c
    int mGroupType -> f
    android.content.Context mParentActivity -> g
    java.lang.String query -> d
    long getHeaderId(int) -> getHeaderId
    int getItemCount() -> getItemCount
    void resetToOriginal() -> a
    void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    void onBindHeaderViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onBindHeaderViewHolder
    android.support.v7.widget.RecyclerView$ViewHolder onCreateHeaderViewHolder(android.view.ViewGroup) -> onCreateHeaderViewHolder
    android.content.Context access$000(com.navibees.sdk.adapter.ActivitiesRecyclerAdapter) -> a
com.navibees.sdk.adapter.ActivitiesRecyclerAdapter$ActivityHeaderViewHolder -> com.navibees.sdk.adapter.c:
    android.widget.TextView mHeaderNameTextView -> a
    com.navibees.sdk.adapter.ActivitiesRecyclerAdapter this$0 -> b
com.navibees.sdk.adapter.ActivitiesRecyclerAdapter$ActivityViewHolder -> com.navibees.sdk.adapter.d:
    android.widget.TextView mActivityNameTextView -> a
    android.widget.TextView mActivityStartEndDateTextView -> b
    android.widget.ImageView mActivityInfoImageView -> c
    com.navibees.sdk.adapter.ActivitiesRecyclerAdapter this$0 -> d
    void onClick(android.view.View) -> onClick
com.navibees.sdk.adapter.POIExpandableListAdapter -> com.navibees.sdk.adapter.e:
    java.util.List originalCategories -> a
    java.util.Map originalPOIsOrFacilitiesPerCategory -> b
    java.util.Map filteredPOIsOrFacilitiesPerCategory -> c
    java.util.List facilities -> g
    android.content.Context context -> h
    int[] POI_CATEGORIES_MAP_ACTIVE -> d
    int[] POI_CATEGORIES_MAP_INACTIVE -> e
    java.lang.String query -> f
    int getGroupCount() -> getGroupCount
    int getChildrenCount(int) -> getChildrenCount
    com.navibees.sdk.model.metadata.json.POICategory getGroup(int) -> a
    java.lang.Object getChild(int,int) -> getChild
    long getGroupId(int) -> getGroupId
    long getChildId(int,int) -> getChildId
    boolean hasStableIds() -> hasStableIds
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    boolean isChildSelectable(int,int) -> isChildSelectable
    void resetToOriginal() -> a
    void highlightText(android.widget.TextView,java.lang.String) -> a
    java.lang.Object getGroup(int) -> getGroup
com.navibees.sdk.fragment.ActivitiesListFragment -> com.navibees.sdk.fragment.a:
    com.navibees.sdk.fragment.ActivitiesListFragment$SearchTask searchTask -> a
    android.support.v7.widget.SearchView searchView -> b
    android.widget.TextView actionBarTitle -> c
    com.navibees.sdk.adapter.ActivitiesRecyclerAdapter adapter -> d
    com.navibees.sdk.fragment.ActivitiesListFragment getInstance(boolean) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
    android.widget.TextView access$000(com.navibees.sdk.fragment.ActivitiesListFragment) -> a
    com.navibees.sdk.adapter.ActivitiesRecyclerAdapter access$100(com.navibees.sdk.fragment.ActivitiesListFragment) -> b
com.navibees.sdk.fragment.ActivitiesListFragment$1 -> com.navibees.sdk.fragment.b:
    com.navibees.sdk.fragment.ActivitiesListFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.navibees.sdk.fragment.ActivitiesListFragment$2 -> com.navibees.sdk.fragment.c:
    com.navibees.sdk.fragment.ActivitiesListFragment this$0 -> a
    boolean onClose() -> onClose
com.navibees.sdk.fragment.ActivitiesListFragment$SearchTask -> com.navibees.sdk.fragment.d:
    com.navibees.sdk.fragment.ActivitiesListFragment this$0 -> a
    void onPreExecute() -> onPreExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.navibees.sdk.fragment.ActivitiesPagerFragment -> com.navibees.sdk.fragment.e:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.navibees.sdk.fragment.ActivityDescriptionFragment -> com.navibees.sdk.fragment.f:
    com.navibees.sdk.fragment.ActivityDescriptionFragment getInstance(com.navibees.sdk.model.metadata.json.Activity) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
com.navibees.sdk.fragment.SettingFragment -> com.navibees.sdk.fragment.g:
    void onCreate(android.os.Bundle) -> onCreate
com.navibees.sdk.model.metadata.BeaconNode -> com.navibees.sdk.model.metadata.a:
    int major -> a
    int minor -> b
    com.navibees.sdk.model.metadata.json.IndoorLocation location -> c
    int txPower -> f
    java.util.List states -> d
    double meanRSSI -> g
    double meanAccuracy -> h
    int batteryStatus -> e
    java.lang.String toString() -> toString
    double meanRSSI() -> a
com.navibees.sdk.model.metadata.BeaconNodeState -> com.navibees.sdk.model.metadata.b:
    java.util.Date timestamp -> a
    int rssi -> b
    double accuracy -> c
    double estimatedDistance -> d
com.navibees.sdk.model.metadata.CircleIndoorLocationRestriction -> com.navibees.sdk.model.metadata.c:
    com.navibees.sdk.model.metadata.json.IndoorLocation center -> a
    double radius -> b
    com.navibees.sdk.model.metadata.json.IndoorLocation calculateNewCoordinates(com.navibees.sdk.model.metadata.json.IndoorLocation) -> a
    double calculateDistance(com.navibees.sdk.model.metadata.json.IndoorLocation) -> b
com.navibees.sdk.model.metadata.DataChangeListener -> com.navibees.sdk.model.metadata.d:
    void appConfigurationChangeCallback(com.navibees.sdk.model.metadata.json.ApplicationConfiguration,long) -> a
    void poiCategoriesChangeCallback$22875ae2(java.util.List) -> a
    void poisChangeCallback$22875ae2(java.util.List) -> b
    void beaconNodeConfigurtionChangeCallback(java.util.List,long) -> a
    void floorsChangeCallback$22875ae2(java.util.List) -> c
    void portalsChangeCallback$22875ae2(java.util.List) -> d
    void facilitiesChangeCallback$22875ae2(java.util.List) -> e
    void restrictionsChangeCallback$22c9fc98(java.util.List,java.lang.String) -> a
    void monitoredRegionsChangeCallback$22875ae2(java.util.List) -> f
    void activitiesChangeCallback$22875ae2(java.util.List) -> g
com.navibees.sdk.model.metadata.IndoorLocationRestriction -> com.navibees.sdk.model.metadata.e:
    int id -> c
    int floor -> d
    com.navibees.sdk.model.metadata.json.IndoorLocation calculateNewCoordinates(com.navibees.sdk.model.metadata.json.IndoorLocation) -> a
    double calculateDistance(com.navibees.sdk.model.metadata.json.IndoorLocation) -> b
com.navibees.sdk.model.metadata.LineIndoorLocationRestriction -> com.navibees.sdk.model.metadata.f:
    com.navibees.sdk.model.metadata.json.IndoorLocation start -> a
    com.navibees.sdk.model.metadata.json.IndoorLocation end -> b
    com.navibees.sdk.model.metadata.json.IndoorLocation calculateNewCoordinates(com.navibees.sdk.model.metadata.json.IndoorLocation) -> a
    double calculateDistance(com.navibees.sdk.model.metadata.json.IndoorLocation) -> b
com.navibees.sdk.model.metadata.LocalMetaData -> com.navibees.sdk.model.metadata.g:
    com.google.gson.Gson gson -> a
    java.lang.String mapResourcesMetaDataPOIsCategoriesPath -> b
    java.lang.String mapResourcesMetaDataPOIsPath -> c
    java.lang.String mapResourcesMetaDataTagsPath -> d
    java.lang.String mapResourcesMetaDataFloorsPath -> e
    java.lang.String mapResourcesMetaDataPortalsPath -> f
    java.lang.String mapResourcesMetaDataFacilitiesPath -> g
    java.lang.String mapResourcesMetaDataRestrictionsPath -> h
    java.lang.String mapResourcesMetaDataMonitoredRegionsPath -> i
    java.lang.String mapResourcesMetaDataActivityCategoriesPath -> j
    com.navibees.sdk.model.metadata.json.ApplicationConfiguration applicationConfiguration -> k
    java.util.List categories -> l
    java.util.List pois -> m
    java.util.List locations -> n
    java.util.List floors -> o
    java.util.List portals -> p
    java.util.List facilities -> q
    java.util.List restrictions -> r
    java.util.List monitoredRegions -> s
    java.util.List activityCategories -> t
    com.navibees.sdk.model.metadata.json.ApplicationConfiguration getApplicationConfiguration(android.content.Context) -> a
    java.util.List getPOIsCategories(android.content.Context) -> b
    java.util.List getPOIs(android.content.Context) -> c
    java.util.List getTagsLocations(android.content.Context) -> d
    java.util.List getFloors(android.content.Context) -> e
    java.util.List getPortals(android.content.Context) -> f
    java.util.List getFacilities(android.content.Context) -> g
    java.util.List getActivityCategories(android.content.Context) -> h
    java.util.List getRestrictions(android.content.Context) -> i
    java.lang.String ReadFromfile(java.lang.String) -> a
    boolean writeToFile(java.lang.String,java.lang.String) -> a
com.navibees.sdk.model.metadata.LocalMetaData$1 -> com.navibees.sdk.model.metadata.h:
    com.navibees.sdk.model.metadata.LocalMetaData this$0 -> a
com.navibees.sdk.model.metadata.LocalMetaData$10 -> com.navibees.sdk.model.metadata.i:
    com.navibees.sdk.model.metadata.LocalMetaData this$0 -> a
com.navibees.sdk.model.metadata.LocalMetaData$2 -> com.navibees.sdk.model.metadata.j:
    com.navibees.sdk.model.metadata.LocalMetaData this$0 -> a
com.navibees.sdk.model.metadata.LocalMetaData$3 -> com.navibees.sdk.model.metadata.k:
    com.navibees.sdk.model.metadata.LocalMetaData this$0 -> a
com.navibees.sdk.model.metadata.LocalMetaData$4 -> com.navibees.sdk.model.metadata.l:
    com.navibees.sdk.model.metadata.LocalMetaData this$0 -> a
com.navibees.sdk.model.metadata.LocalMetaData$5 -> com.navibees.sdk.model.metadata.m:
    com.navibees.sdk.model.metadata.LocalMetaData this$0 -> a
com.navibees.sdk.model.metadata.LocalMetaData$6 -> com.navibees.sdk.model.metadata.n:
    com.navibees.sdk.model.metadata.LocalMetaData this$0 -> a
com.navibees.sdk.model.metadata.LocalMetaData$7 -> com.navibees.sdk.model.metadata.o:
    com.navibees.sdk.model.metadata.LocalMetaData this$0 -> a
com.navibees.sdk.model.metadata.LocalMetaData$8 -> com.navibees.sdk.model.metadata.p:
    com.navibees.sdk.model.metadata.LocalMetaData this$0 -> a
com.navibees.sdk.model.metadata.LocalMetaData$9 -> com.navibees.sdk.model.metadata.q:
    com.navibees.sdk.model.metadata.LocalMetaData this$0 -> a
com.navibees.sdk.model.metadata.MetaDataManager -> com.navibees.sdk.model.metadata.r:
    com.navibees.sdk.model.metadata.LocalMetaData localMetaData -> a
    com.navibees.sdk.model.server.ServerManager serverManager -> b
    android.content.Context context -> c
    android.content.SharedPreferences sp -> d
    android.content.SharedPreferences$Editor editor -> e
    java.util.List floors -> f
    java.util.List poisCategories -> g
    java.util.List pois -> h
    java.util.List portals -> i
    java.util.List facilities -> j
    java.util.List restrictions -> k
    java.lang.String restrictionWrappersAsJSON -> l
    com.navibees.sdk.model.metadata.MetaDataManager$LocalMetaDataListener localMetaDataListener -> m
    java.util.List beaconNodeConfigurtionList -> n
    long beaconsFileLastModifiedDate -> o
    java.util.List monitoredRegions -> p
    java.util.List activityCategories -> q
    com.navibees.sdk.model.metadata.json.ApplicationConfiguration getApplicationConfiguration(android.content.Context) -> a
    java.util.List getPOIsCategories(android.content.Context) -> b
    java.util.List getPOIs(android.content.Context) -> c
    java.util.List getTagsLocations(android.content.Context) -> d
    java.util.List getFloors(android.content.Context) -> e
    java.util.List getPortals(android.content.Context) -> f
    java.util.List getFacilities(android.content.Context) -> g
    java.util.List getMonitoredRegions(android.content.Context) -> h
    java.util.List getRestrictions(android.content.Context) -> i
    java.util.List getActivityCategories(android.content.Context) -> j
    void appConfigurationChangeCallback(com.navibees.sdk.model.metadata.json.ApplicationConfiguration,long) -> a
    void poiCategoriesChangeCallback$22875ae2(java.util.List) -> a
    void poisChangeCallback$22875ae2(java.util.List) -> b
    void floorsChangeCallback$22875ae2(java.util.List) -> c
    void portalsChangeCallback$22875ae2(java.util.List) -> d
    void facilitiesChangeCallback$22875ae2(java.util.List) -> e
    void restrictionsChangeCallback$22c9fc98(java.util.List,java.lang.String) -> a
    void monitoredRegionsChangeCallback$22875ae2(java.util.List) -> f
    void activitiesChangeCallback$22875ae2(java.util.List) -> g
    void beaconNodeConfigurtionChangeCallback(java.util.List,long) -> a
    java.util.Date getLastModifiedDateForBeaconsNodeConfigurations() -> a
    void updateBuildingMetaDataFiles(long) -> a
com.navibees.sdk.model.metadata.MetaDataManager$LoadAllMetaDataJSONFilesTask -> com.navibees.sdk.model.metadata.s:
    com.navibees.sdk.model.metadata.MetaDataManager this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.navibees.sdk.model.metadata.MetaDataManager$LocalMetaDataListener -> com.navibees.sdk.model.metadata.t:
    void allMetaDataFilesAreReady(java.lang.Boolean) -> a
com.navibees.sdk.model.metadata.MetaDataManager$SaveBeaconsFileTask -> com.navibees.sdk.model.metadata.u:
    com.navibees.sdk.model.metadata.MetaDataManager this$0 -> a
    java.lang.Boolean doInBackground$5f8445a4() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.navibees.sdk.model.metadata.MetaDataManager$SaveBuildingMetaDataJSONFilesTask -> com.navibees.sdk.model.metadata.v:
    com.navibees.sdk.model.metadata.MetaDataManager this$0 -> a
    java.lang.Boolean doInBackground(java.lang.Long[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.navibees.sdk.model.metadata.NaviBeesBeacon -> com.navibees.sdk.model.metadata.NaviBeesBeacon:
    byte batteryStatus -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.navibees.sdk.model.metadata.NaviBeesBeacon$1 -> com.navibees.sdk.model.metadata.w:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.navibees.sdk.model.metadata.PointIndoorLocationRestriction -> com.navibees.sdk.model.metadata.x:
    com.navibees.sdk.model.metadata.json.IndoorLocation point -> a
    com.navibees.sdk.model.metadata.json.IndoorLocation calculateNewCoordinates(com.navibees.sdk.model.metadata.json.IndoorLocation) -> a
    double calculateDistance(com.navibees.sdk.model.metadata.json.IndoorLocation) -> b
com.navibees.sdk.model.metadata.PolygonIndoorLocationRestriction -> com.navibees.sdk.model.metadata.y:
    com.navibees.sdk.model.metadata.json.IndoorLocation[] vertices -> a
    com.navibees.sdk.model.metadata.json.IndoorLocation calculateNewCoordinates(com.navibees.sdk.model.metadata.json.IndoorLocation) -> a
    double calculateDistance(com.navibees.sdk.model.metadata.json.IndoorLocation) -> b
com.navibees.sdk.model.metadata.json.Activity -> com.navibees.sdk.model.metadata.json.Activity:
    int id -> id
    java.lang.String name -> name
    java.lang.String nameAr -> nameAr
    int poiId -> poiId
    java.lang.String startDate -> startDate
    java.lang.String endDate -> endDate
    java.lang.String owner -> owner
    java.lang.String ownerAr -> ownerAr
    java.lang.String description -> description
    java.lang.String descriptionAr -> descriptionAr
    int groupId -> groupId
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean isHappeningNow() -> isHappeningNow
    java.lang.String getNameWRTLang() -> getNameWRTLang
    java.lang.String getDescriptionWRTLang() -> getDescriptionWRTLang
    java.lang.String getOwnerWRTLang() -> getOwnerWRTLang
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.navibees.sdk.model.metadata.json.Activity$1 -> com.navibees.sdk.model.metadata.json.Activity$1:
    com.navibees.sdk.model.metadata.json.Activity createFromParcel(android.os.Parcel) -> createFromParcel
    com.navibees.sdk.model.metadata.json.Activity[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.navibees.sdk.model.metadata.json.ActivityGroup -> com.navibees.sdk.model.metadata.json.ActivityGroup:
    int id -> id
    java.lang.String name -> name
    java.lang.String nameAr -> nameAr
    java.util.List activities -> activities
    java.lang.String getNameWRTLang() -> getNameWRTLang
com.navibees.sdk.model.metadata.json.ApplicationConfiguration -> com.navibees.sdk.model.metadata.json.ApplicationConfiguration:
    java.lang.String projectId -> projectId
    java.lang.String venueId -> venueId
    java.lang.String buildingId -> buildingId
    java.lang.String applicationId -> applicationId
    int defaultZoomLevel -> defaultZoomLevel
    int minimumPOIVisiableZoomLevel -> minimumPOIVisiableZoomLevel
    com.navibees.sdk.model.metadata.json.IndoorLocation initialLocation -> initialLocation
    boolean trackingEnabledByDefault -> trackingEnabledByDefault
    java.lang.String beaconsUUID -> beaconsUUID
    java.lang.String name -> name
    java.lang.String nameAr -> nameAr
    java.lang.String getProjectId() -> getProjectId
    void setProjectId(java.lang.String) -> setProjectId
    java.lang.String getVenueId() -> getVenueId
    void setVenueId(java.lang.String) -> setVenueId
    java.lang.String getBuildingId() -> getBuildingId
    void setBuildingId(java.lang.String) -> setBuildingId
    java.lang.String getApplicationId() -> getApplicationId
    void setApplicationId(java.lang.String) -> setApplicationId
    int getDefaultZoomLevel() -> getDefaultZoomLevel
    void setDefaultZoomLevel(int) -> setDefaultZoomLevel
    com.navibees.sdk.model.metadata.json.IndoorLocation getInitialLocation() -> getInitialLocation
    void setInitialLocation(com.navibees.sdk.model.metadata.json.IndoorLocation) -> setInitialLocation
    boolean isTrackingEnabledByDefault() -> isTrackingEnabledByDefault
    void setTrackingEnabledByDefault(boolean) -> setTrackingEnabledByDefault
    java.lang.String getBeaconsUUID() -> getBeaconsUUID
    void setBeaconsUUID(java.lang.String) -> setBeaconsUUID
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getNameAr() -> getNameAr
    java.lang.String getNameWRTLang() -> getNameWRTLang
    void setNameAr(java.lang.String) -> setNameAr
    int getMinimumPOIVisiableZoomLevel() -> getMinimumPOIVisiableZoomLevel
    void setMinimumPOIVisiableZoomLevel(int) -> setMinimumPOIVisiableZoomLevel
com.navibees.sdk.model.metadata.json.BeaconNodeConfigurtion -> com.navibees.sdk.model.metadata.json.BeaconNodeConfigurtion:
    java.lang.String objectId -> objectId
    int major -> major
    int minor -> minor
    double x -> x
    double y -> y
    int floorIndex -> floorIndex
    int power -> power
    int rate -> rate
    java.lang.String modelId -> modelId
    int batteryStatus -> batteryStatus
    long lastTimeBatteryReported -> lastTimeBatteryReported
    int getMajor() -> getMajor
    void setMajor(int) -> setMajor
    int getMinor() -> getMinor
    void setMinor(int) -> setMinor
    double getX() -> getX
    void setX(double) -> setX
    double getY() -> getY
    void setY(double) -> setY
    int getFloorIndex() -> getFloorIndex
    void setFloorIndex(int) -> setFloorIndex
    int getPower() -> getPower
    void setPower(int) -> setPower
    int getRate() -> getRate
    void setRate(int) -> setRate
    java.lang.String getModelId() -> getModelId
    void setModelId(java.lang.String) -> setModelId
    int getBatteryStatus() -> getBatteryStatus
    void setBatteryStatus(int) -> setBatteryStatus
    java.lang.String getObjectId() -> getObjectId
    void setObjectId(java.lang.String) -> setObjectId
    long getLastTimeBatteryReported() -> getLastTimeBatteryReported
    void setLastTimeBatteryReported(long) -> setLastTimeBatteryReported
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.navibees.sdk.model.metadata.json.Facility -> com.navibees.sdk.model.metadata.json.Facility:
    java.lang.Integer id -> id
    java.lang.Integer categoryId -> categoryId
    java.lang.String name -> name
    java.lang.String nameAr -> nameAr
    com.navibees.sdk.model.metadata.json.Icon icons -> icons
    java.lang.Boolean isShownOnMap -> isShownOnMap
    java.lang.Boolean isExpandable -> isExpandable
    java.util.List pois -> pois
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.Integer getCategoryId() -> getCategoryId
    void setCategoryId(java.lang.Integer) -> setCategoryId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getNameAr() -> getNameAr
    java.lang.String getNameWRTLang() -> getNameWRTLang
    void setNameAr(java.lang.String) -> setNameAr
    com.navibees.sdk.model.metadata.json.Icon getIcons() -> getIcons
    void setIcons(com.navibees.sdk.model.metadata.json.Icon) -> setIcons
    boolean isShownOnMap() -> isShownOnMap
    void setIsShownOnMap(boolean) -> setIsShownOnMap
    boolean isExpandable() -> isExpandable
    void setIsExpandable(boolean) -> setIsExpandable
    java.util.List getPois() -> getPois
    void setPois(java.util.List) -> setPois
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean isValid() -> isValid
    java.util.List locationsAtFloor(java.lang.Integer) -> locationsAtFloor
    java.util.List entryPointsAtFloor(java.lang.Integer) -> entryPointsAtFloor
com.navibees.sdk.model.metadata.json.Facility$1 -> com.navibees.sdk.model.metadata.json.Facility$1:
    com.navibees.sdk.model.metadata.json.Facility createFromParcel(android.os.Parcel) -> createFromParcel
    com.navibees.sdk.model.metadata.json.Facility[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.navibees.sdk.model.metadata.json.Floor -> com.navibees.sdk.model.metadata.json.Floor:
    int index -> index
    java.lang.String name -> name
    java.lang.String nameAr -> nameAr
    java.lang.String basemap -> basemap
    java.lang.String geodatabase -> geodatabase
    java.lang.String networkDataset -> networkDataset
    java.lang.String tilePackage -> tilePackage
    int getIndex() -> getIndex
    void setIndex(int) -> setIndex
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getNameAr() -> getNameAr
    void setNameAr(java.lang.String) -> setNameAr
    java.lang.String getNameWRTLang() -> getNameWRTLang
    java.lang.String getBasemap() -> getBasemap
    void setBasemap(java.lang.String) -> setBasemap
    java.lang.String getGeodatabase() -> getGeodatabase
    void setGeodatabase(java.lang.String) -> setGeodatabase
    java.lang.String getNetworkDataset() -> getNetworkDataset
    void setNetworkDataset(java.lang.String) -> setNetworkDataset
    java.lang.String getTilePackage() -> getTilePackage
    void setTilePackage(java.lang.String) -> setTilePackage
com.navibees.sdk.model.metadata.json.Icon -> com.navibees.sdk.model.metadata.json.Icon:
    java.lang.String dark -> dark
    java.lang.String light -> light
    java.lang.String mapActive -> mapActive
    java.lang.String mapInactive -> mapInactive
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getDark() -> getDark
    void setDark(java.lang.String) -> setDark
    java.lang.String getLight() -> getLight
    void setLight(java.lang.String) -> setLight
    java.lang.String getMapActive() -> getMapActive
    void setMapActive(java.lang.String) -> setMapActive
    java.lang.String getMapInactive() -> getMapInactive
    void setMapInactive(java.lang.String) -> setMapInactive
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.navibees.sdk.model.metadata.json.Icon$1 -> com.navibees.sdk.model.metadata.json.Icon$1:
    com.navibees.sdk.model.metadata.json.Icon createFromParcel(android.os.Parcel) -> createFromParcel
    com.navibees.sdk.model.metadata.json.Icon[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.navibees.sdk.model.metadata.json.IndoorLocation -> com.navibees.sdk.model.metadata.json.IndoorLocation:
    java.lang.Double x -> x
    java.lang.Double y -> y
    java.lang.Integer floor -> floor
    com.navibees.sdk.model.metadata.json.IndoorLocationConfidence confidence -> confidence
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.Double getX() -> getX
    void setX(java.lang.Double) -> setX
    java.lang.Double getY() -> getY
    void setY(java.lang.Double) -> setY
    java.lang.Integer getFloor() -> getFloor
    void setFloor(java.lang.Integer) -> setFloor
    com.navibees.sdk.model.metadata.json.IndoorLocationConfidence getConfidence() -> getConfidence
    void setConfidence(com.navibees.sdk.model.metadata.json.IndoorLocationConfidence) -> setConfidence
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.navibees.sdk.model.metadata.json.IndoorLocation$1 -> com.navibees.sdk.model.metadata.json.IndoorLocation$1:
    com.navibees.sdk.model.metadata.json.IndoorLocation createFromParcel(android.os.Parcel) -> createFromParcel
    com.navibees.sdk.model.metadata.json.IndoorLocation[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.navibees.sdk.model.metadata.json.IndoorLocationConfidence -> com.navibees.sdk.model.metadata.json.IndoorLocationConfidence:
    com.navibees.sdk.model.metadata.json.IndoorLocationConfidence High -> High
    com.navibees.sdk.model.metadata.json.IndoorLocationConfidence Average -> Average
    com.navibees.sdk.model.metadata.json.IndoorLocationConfidence Low -> Low
    com.navibees.sdk.model.metadata.json.IndoorLocationConfidence[] $VALUES -> $VALUES
    com.navibees.sdk.model.metadata.json.IndoorLocationConfidence[] values() -> values
    com.navibees.sdk.model.metadata.json.IndoorLocationConfidence valueOf(java.lang.String) -> valueOf
com.navibees.sdk.model.metadata.json.IndoorLocationRestrictionWrapper -> com.navibees.sdk.model.metadata.json.IndoorLocationRestrictionWrapper:
    java.lang.String[] RESTRICTION_TYPE -> RESTRICTION_TYPE
    int id -> id
    int floor -> floor
    java.lang.String type -> type
    com.navibees.sdk.model.metadata.json.IndoorLocation[] points -> points
    com.navibees.sdk.model.metadata.json.IndoorLocation[] vertices -> vertices
    double radius -> radius
    com.navibees.sdk.model.metadata.json.IndoorLocation center -> center
    com.navibees.sdk.model.metadata.json.IndoorLocation point -> point
    int getId() -> getId
    void setId(int) -> setId
    java.lang.String[] getRestrictionType() -> getRestrictionType
    int getFloor() -> getFloor
    void setFloor(int) -> setFloor
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    com.navibees.sdk.model.metadata.json.IndoorLocation[] getPoints() -> getPoints
    void setPoints(com.navibees.sdk.model.metadata.json.IndoorLocation[]) -> setPoints
    com.navibees.sdk.model.metadata.json.IndoorLocation[] getVertices() -> getVertices
    void setVertices(com.navibees.sdk.model.metadata.json.IndoorLocation[]) -> setVertices
    double getRadius() -> getRadius
    void setRadius(double) -> setRadius
    com.navibees.sdk.model.metadata.json.IndoorLocation getCenter() -> getCenter
    void setCenter(com.navibees.sdk.model.metadata.json.IndoorLocation) -> setCenter
    com.navibees.sdk.model.metadata.json.IndoorLocation getPoint() -> getPoint
    void setPoint(com.navibees.sdk.model.metadata.json.IndoorLocation) -> setPoint
com.navibees.sdk.model.metadata.json.MonitoredRegion -> com.navibees.sdk.model.metadata.json.MonitoredRegion:
    java.lang.String identifier -> identifier
    java.lang.String type -> type
    java.lang.String message -> message
    java.lang.String messageAr -> messageAr
    java.lang.String UUID -> UUID
    int major -> major
    int minor -> minor
    int interval -> interval
    int timeSinceLastFireInSeconds -> timeSinceLastFireInSeconds
    java.lang.String[] MONITORED_REGIONS_TYPE -> MONITORED_REGIONS_TYPE
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getIdentifier() -> getIdentifier
    void setIdentifier(java.lang.String) -> setIdentifier
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    java.lang.String getMessageAr() -> getMessageAr
    void setMessageAr(java.lang.String) -> setMessageAr
    java.lang.String getUUID() -> getUUID
    void setUUID(java.lang.String) -> setUUID
    int getMajor() -> getMajor
    void setMajor(int) -> setMajor
    int getMinor() -> getMinor
    void setMinor(int) -> setMinor
    int getInterval() -> getInterval
    void setInterval(int) -> setInterval
    int getTimeSinceLastFireInSeconds() -> getTimeSinceLastFireInSeconds
    void setTimeSinceLastFireInSeconds(int) -> setTimeSinceLastFireInSeconds
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean isValid() -> isValid
    java.lang.String getMessageWRTLang() -> getMessageWRTLang
com.navibees.sdk.model.metadata.json.MonitoredRegion$1 -> com.navibees.sdk.model.metadata.json.MonitoredRegion$1:
    com.navibees.sdk.model.metadata.json.MonitoredRegion createFromParcel(android.os.Parcel) -> createFromParcel
    com.navibees.sdk.model.metadata.json.MonitoredRegion[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.navibees.sdk.model.metadata.json.NaviBeesNotification -> com.navibees.sdk.model.metadata.json.NaviBeesNotification:
    java.lang.String title -> title
    java.lang.String message -> message
    java.lang.String icon -> icon
    java.lang.String photo -> photo
    java.lang.String video -> video
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    java.lang.String getIcon() -> getIcon
    void setIcon(java.lang.String) -> setIcon
    java.lang.String getPhoto() -> getPhoto
    void setPhoto(java.lang.String) -> setPhoto
    java.lang.String getVideo() -> getVideo
    void setVideo(java.lang.String) -> setVideo
com.navibees.sdk.model.metadata.json.POI -> com.navibees.sdk.model.metadata.json.POI:
    java.lang.Integer id -> id
    java.lang.Integer categoryId -> categoryId
    java.lang.String name -> name
    java.lang.String nameAr -> nameAr
    java.lang.Double minimumVisibleScale -> minimumVisibleScale
    java.util.List locations -> locations
    java.util.List entryPoints -> entryPoints
    com.navibees.sdk.model.metadata.json.Icon icons -> icons
    java.util.List tags -> tags
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.Integer getCategoryId() -> getCategoryId
    void setCategoryId(java.lang.Integer) -> setCategoryId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getNameAr() -> getNameAr
    java.lang.String getNameWRTLang() -> getNameWRTLang
    void setNameAr(java.lang.String) -> setNameAr
    java.lang.Double getMinimumVisibleScale() -> getMinimumVisibleScale
    void setMinimumVisibleScale(java.lang.Double) -> setMinimumVisibleScale
    java.util.List getLocations() -> getLocations
    void setLocations(java.util.List) -> setLocations
    java.util.List getEntryPoints() -> getEntryPoints
    void setEntryPoints(java.util.List) -> setEntryPoints
    com.navibees.sdk.model.metadata.json.Icon getIcons() -> getIcons
    void setIcons(com.navibees.sdk.model.metadata.json.Icon) -> setIcons
    java.util.List getTags() -> getTags
    void setTags(java.util.List) -> setTags
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.util.List locationsAtFloor(java.lang.Integer) -> locationsAtFloor
    java.util.List entryPointsAtFloor(java.lang.Integer) -> entryPointsAtFloor
    boolean isValid() -> isValid
com.navibees.sdk.model.metadata.json.POI$1 -> com.navibees.sdk.model.metadata.json.POI$1:
    com.navibees.sdk.model.metadata.json.POI createFromParcel(android.os.Parcel) -> createFromParcel
    com.navibees.sdk.model.metadata.json.POI[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.navibees.sdk.model.metadata.json.POICategory -> com.navibees.sdk.model.metadata.json.POICategory:
    java.lang.Integer id -> id
    java.lang.String name -> name
    java.lang.String nameAr -> nameAr
    com.navibees.sdk.model.metadata.json.Icon icons -> icons
    boolean filterEnable -> filterEnable
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean isFilterEnable() -> isFilterEnable
    void setFilterEnable(boolean) -> setFilterEnable
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getNameAr() -> getNameAr
    java.lang.String getNameWRTLang() -> getNameWRTLang
    void setNameAr(java.lang.String) -> setNameAr
    com.navibees.sdk.model.metadata.json.Icon getIcons() -> getIcons
    void setIcons(com.navibees.sdk.model.metadata.json.Icon) -> setIcons
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean isValid() -> isValid
com.navibees.sdk.model.metadata.json.POICategory$1 -> com.navibees.sdk.model.metadata.json.POICategory$1:
    com.navibees.sdk.model.metadata.json.POICategory createFromParcel(android.os.Parcel) -> createFromParcel
    com.navibees.sdk.model.metadata.json.POICategory[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.navibees.sdk.model.metadata.json.Portal -> com.navibees.sdk.model.metadata.json.Portal:
    java.lang.String[] PORTAL_TYPE -> PORTAL_TYPE
    java.util.Map COST -> COST
    java.lang.String type -> type
    int indexInList -> indexInList
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
com.navibees.sdk.model.postioning.BeaconNodeListener -> com.navibees.sdk.model.postioning.a:
    void beaconNodeCallback(java.util.List) -> a
com.navibees.sdk.model.postioning.IndoorLocationListener -> com.navibees.sdk.model.postioning.b:
    void locationCallback$19e9d1b2(com.navibees.sdk.model.metadata.json.IndoorLocation) -> a
com.navibees.sdk.model.postioning.MonitoringRegionsReceiver -> com.navibees.sdk.model.postioning.MonitoringRegionsReceiver:
    android.content.Context context -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean isAppInForeground(android.content.Context) -> isAppInForeground
    void didEnterRegionForeground(com.navibees.sdk.model.metadata.json.MonitoredRegion) -> didEnterRegionForeground
    void didExitRegionForeground(com.navibees.sdk.model.metadata.json.MonitoredRegion) -> didExitRegionForeground
    void didEnterRegionBackground(com.navibees.sdk.model.metadata.json.MonitoredRegion) -> didEnterRegionBackground
    void didExitRegionBackground(com.navibees.sdk.model.metadata.json.MonitoredRegion) -> didExitRegionBackground
    void didEnterRegionAll(com.navibees.sdk.model.metadata.json.MonitoredRegion) -> didEnterRegionAll
    void didExitRegionAll(com.navibees.sdk.model.metadata.json.MonitoredRegion) -> didExitRegionAll
com.navibees.sdk.model.postioning.NaviBeesBeaconManager -> com.navibees.sdk.model.postioning.c:
    android.content.Context context -> e
    com.navibees.sdk.model.postioning.BeaconNodeListener beaconNodeListener -> f
    org.altbeacon.beacon.BeaconManager beaconManager -> a
    java.lang.String UUID -> g
    java.lang.String RegionIdentifer -> h
    org.altbeacon.beacon.Region rangingRegion -> i
    java.util.List backgroundMonitoredRegions -> b
    java.util.List foregroundMonitoredRegions -> j
    com.navibees.sdk.model.metadata.MetaDataManager metaDataManager -> k
    android.app.Activity activity -> c
    java.util.List beaconsToBeUpadtedOnServer -> d
    char[] HEX_ARRAY -> l
    void classifyMonitoredRegions(java.util.List) -> a
    android.content.Context getApplicationContext() -> getApplicationContext
    boolean bindService(android.content.Intent,android.content.ServiceConnection,int) -> bindService
    void unbindService(android.content.ServiceConnection) -> unbindService
    void onBeaconServiceConnect() -> onBeaconServiceConnect
    com.navibees.sdk.model.metadata.BeaconNode convert(com.navibees.sdk.model.metadata.NaviBeesBeacon) -> a
    double getDistance(int,int) -> a
    void didRangeBeaconsInRegion(java.util.Collection,org.altbeacon.beacon.Region) -> didRangeBeaconsInRegion
    void didEnterRegion(org.altbeacon.beacon.Region) -> didEnterRegion
    void didExitRegion(org.altbeacon.beacon.Region) -> didExitRegion
    void didDetermineStateForRegion(int,org.altbeacon.beacon.Region) -> didDetermineStateForRegion
    java.util.List access$000(com.navibees.sdk.model.postioning.NaviBeesBeaconManager) -> a
    android.content.Context access$100(com.navibees.sdk.model.postioning.NaviBeesBeaconManager) -> b
    com.navibees.sdk.model.metadata.MetaDataManager access$200(com.navibees.sdk.model.postioning.NaviBeesBeaconManager) -> c
com.navibees.sdk.model.postioning.NaviBeesBeaconManager$1 -> com.navibees.sdk.model.postioning.d:
    com.navibees.sdk.model.postioning.NaviBeesBeaconManager this$0 -> a
    void done(com.parse.ParseException) -> done
    void done(java.lang.Throwable) -> done
com.navibees.sdk.model.postioning.NaviBeesBeaconParser -> com.navibees.sdk.model.postioning.e:
    org.altbeacon.beacon.Beacon fromScanData(byte[],int,android.bluetooth.BluetoothDevice) -> fromScanData
com.navibees.sdk.model.postioning.NaviBeesMath -> com.navibees.sdk.model.postioning.f:
    com.navibees.sdk.model.postioning.NaviBeesMath$IndoorLocationDelta calculateVector(com.navibees.sdk.model.metadata.json.IndoorLocation,com.navibees.sdk.model.metadata.json.IndoorLocation) -> b
    double eculideanDistance(double[],double[]) -> a
    double eculideanDistance(com.navibees.sdk.model.metadata.json.IndoorLocation,com.navibees.sdk.model.metadata.json.IndoorLocation) -> a
    com.navibees.sdk.model.postioning.NaviBeesMath$Intersection intersectionBetweenTwoLines(com.navibees.sdk.model.metadata.LineIndoorLocationRestriction,com.navibees.sdk.model.metadata.LineIndoorLocationRestriction) -> a
    com.navibees.sdk.model.metadata.json.IndoorLocation closestPointOnLine(com.navibees.sdk.model.metadata.LineIndoorLocationRestriction,com.navibees.sdk.model.metadata.json.IndoorLocation) -> a
    boolean liesOnLine(com.navibees.sdk.model.metadata.LineIndoorLocationRestriction,com.navibees.sdk.model.metadata.json.IndoorLocation) -> b
    com.navibees.sdk.model.metadata.json.IndoorLocation calculateCentroidOfPolygon(com.navibees.sdk.model.metadata.PolygonIndoorLocationRestriction) -> a
com.navibees.sdk.model.postioning.NaviBeesMath$IndoorLocationDelta -> com.navibees.sdk.model.postioning.g:
    double indoorDeltaX -> a
    double indoorDeltaY -> b
com.navibees.sdk.model.postioning.NaviBeesMath$Intersection -> com.navibees.sdk.model.postioning.h:
    com.navibees.sdk.model.metadata.json.IndoorLocation intersectionPoint -> a
    boolean parallel -> b
com.navibees.sdk.model.postioning.NaviBeesMath$Slope -> com.navibees.sdk.model.postioning.i:
    double degree -> a
    boolean infinity -> b
com.navibees.sdk.model.postioning.PositionLocator -> com.navibees.sdk.model.postioning.j:
    com.navibees.sdk.model.metadata.json.IndoorLocation calculateLocation(java.util.List) -> a
    int getTagFloor(com.navibees.sdk.model.metadata.BeaconNode) -> a
    java.util.List filterTagsByFloor(java.util.List,int) -> a
com.navibees.sdk.model.postioning.PositionLocator$LOCALIZER_ALGORTHIM -> com.navibees.sdk.model.postioning.k:
    int WEIGHTED_CENTROID$703d454d -> a
    int TRILLATERATION$703d454d -> b
    int[] $VALUES$3f346f6e -> c
    int[] values$3ca5836d() -> a
com.navibees.sdk.model.postioning.PositionManager -> com.navibees.sdk.model.postioning.l:
    android.content.Context context -> e
    com.navibees.sdk.model.postioning.IndoorLocationListener indoorLocationListener -> f
    com.navibees.sdk.model.postioning.NaviBeesBeaconManager naviBeesBeaconManager -> a
    com.navibees.sdk.model.postioning.kalman.KalmanFilterHandler kalmanFilter -> b
    java.util.List allRestrictions -> c
    boolean reportLocationEnabled -> d
    void beaconNodeCallback(java.util.List) -> a
    void alignLocation(com.navibees.sdk.model.metadata.json.IndoorLocation,java.util.List) -> a
    java.util.List filterRestrictionsByFloor(java.util.List,int) -> a
com.navibees.sdk.model.postioning.PositionManager$1 -> com.navibees.sdk.model.postioning.m:
    int[] $SwitchMap$com$navibees$sdk$model$postioning$PositionLocator$LOCALIZER_ALGORTHIM -> a
com.navibees.sdk.model.postioning.SensorFusionManager -> com.navibees.sdk.model.postioning.n:
    com.navibees.sdk.model.postioning.SensorFusionManager instance -> a
    android.hardware.SensorManager mSensorManager -> b
    android.hardware.Sensor mAccelerometerSensor -> c
    android.hardware.Sensor mMagnetSensor -> d
    android.hardware.Sensor mGyroSensor -> e
    boolean mAccelerometerSet -> f
    boolean mMagnetometerSet -> g
    float[] mLastAccelerometer -> h
    float[] mLastMagnetometer -> i
    float[] mInitialRotationMatrix -> j
    float[] deltaRotationVector -> k
    float[] mCurrentRotationMatrix -> l
    long timestamp -> m
    float NS2S -> n
    float OMEGA_EPSILON -> o
    int NUM_POINTS -> p
    int MIN_POINTS -> q
    int MIN_DISTANCE -> r
    double SLOPE_DIFFERENCE_EPSILON -> s
    com.navibees.sdk.model.metadata.json.IndoorLocation[] lastPoints -> t
    int gyroscopeDirection$604f2e0d -> u
    com.navibees.sdk.model.postioning.SensorFusionManager getInstance() -> a
    void registerSensor(android.content.Context) -> a
    void unregisterSensor() -> b
    double getRotationAngleForMap(com.navibees.sdk.model.metadata.json.IndoorLocation) -> a
    int getDirection$32804920(double) -> a
    double getSlope(com.navibees.sdk.model.metadata.json.IndoorLocation,com.navibees.sdk.model.metadata.json.IndoorLocation) -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    float[] matrixMultiplication(float[],float[]) -> a
com.navibees.sdk.model.postioning.SensorFusionManager$Direction -> com.navibees.sdk.model.postioning.o:
    int N$604f2e0d -> a
    int S$604f2e0d -> b
    int E$604f2e0d -> c
    int W$604f2e0d -> d
    int NE$604f2e0d -> e
    int NW$604f2e0d -> f
    int SE$604f2e0d -> g
    int SW$604f2e0d -> h
    int C$604f2e0d -> i
    int[] $VALUES$1f349112 -> j
com.navibees.sdk.model.postioning.WeightedCentroidPositionLocator -> com.navibees.sdk.model.postioning.p:
    com.navibees.sdk.model.metadata.json.IndoorLocation calculateLocation(java.util.List) -> a
com.navibees.sdk.model.postioning.WeightedCentroidPositionLocator$1 -> com.navibees.sdk.model.postioning.q:
    com.navibees.sdk.model.postioning.WeightedCentroidPositionLocator this$0 -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.navibees.sdk.model.postioning.kalman.KalmanFilter -> com.navibees.sdk.model.postioning.kalman.a:
    int timestep -> a
    int state_dimension -> b
    int observation_dimension -> c
    com.navibees.sdk.model.postioning.kalman.Matrix state_transition -> d
    com.navibees.sdk.model.postioning.kalman.Matrix observation_model -> e
    com.navibees.sdk.model.postioning.kalman.Matrix process_noise_covariance -> f
    com.navibees.sdk.model.postioning.kalman.Matrix observation_noise_covariance -> g
    com.navibees.sdk.model.postioning.kalman.Matrix observation -> h
    com.navibees.sdk.model.postioning.kalman.Matrix predicted_state -> i
    com.navibees.sdk.model.postioning.kalman.Matrix predicted_estimate_covariance -> j
    com.navibees.sdk.model.postioning.kalman.Matrix innovation -> k
    com.navibees.sdk.model.postioning.kalman.Matrix innovation_covariance -> l
    com.navibees.sdk.model.postioning.kalman.Matrix inverse_innovation_covariance -> m
    com.navibees.sdk.model.postioning.kalman.Matrix optimal_gain -> n
    com.navibees.sdk.model.postioning.kalman.Matrix state_estimate -> o
    com.navibees.sdk.model.postioning.kalman.Matrix estimate_covariance -> p
    com.navibees.sdk.model.postioning.kalman.Matrix vertical_scratch -> q
    com.navibees.sdk.model.postioning.kalman.Matrix small_square_scratch -> r
    com.navibees.sdk.model.postioning.kalman.Matrix big_square_scratch -> s
com.navibees.sdk.model.postioning.kalman.KalmanFilterHandler -> com.navibees.sdk.model.postioning.kalman.b:
    com.navibees.sdk.model.postioning.kalman.KalmanFilter kalmanFilter -> a
    double secondsPerTimestep -> c
    double noise -> d
    java.lang.Long previousTime -> b
    void init() -> a
    void set_seconds_per_timestep(double) -> a
com.navibees.sdk.model.postioning.kalman.Matrix -> com.navibees.sdk.model.postioning.kalman.c:
    int rows -> a
    int cols -> b
    double[][] data -> c
    boolean $assertionsDisabled -> d
    void set_matrix(double[]) -> a
    void set_identity_matrix() -> a
    void add_matrix(com.navibees.sdk.model.postioning.kalman.Matrix,com.navibees.sdk.model.postioning.kalman.Matrix,com.navibees.sdk.model.postioning.kalman.Matrix) -> a
    void subtract_matrix(com.navibees.sdk.model.postioning.kalman.Matrix,com.navibees.sdk.model.postioning.kalman.Matrix,com.navibees.sdk.model.postioning.kalman.Matrix) -> b
    void subtract_from_identity_matrix(com.navibees.sdk.model.postioning.kalman.Matrix) -> a
    void multiply_matrix(com.navibees.sdk.model.postioning.kalman.Matrix,com.navibees.sdk.model.postioning.kalman.Matrix,com.navibees.sdk.model.postioning.kalman.Matrix) -> c
    void multiply_by_transpose_matrix(com.navibees.sdk.model.postioning.kalman.Matrix,com.navibees.sdk.model.postioning.kalman.Matrix,com.navibees.sdk.model.postioning.kalman.Matrix) -> d
    void swap_rows(int,int) -> a
    void scale_row(int,double) -> a
    void shear_row(int,int,double) -> a
    boolean destructive_invert_matrix(com.navibees.sdk.model.postioning.kalman.Matrix,com.navibees.sdk.model.postioning.kalman.Matrix) -> a
com.navibees.sdk.model.routing.EsriRouting -> com.navibees.sdk.model.routing.a:
    android.app.Activity mActivity -> a
    com.navibees.sdk.model.routing.EsriRouting$OnRoutingFinishedListener mListener -> b
    java.util.List floorList -> c
    java.util.List portalList -> d
    com.navibees.sdk.model.metadata.json.IndoorLocation mCurrentLocation -> e
    java.lang.Object mTarget -> f
    int mTargetId -> g
    int mTargetFloor -> h
    com.esri.core.geometry.Point mCurrentLocationPoint -> i
    com.esri.core.symbol.SimpleMarkerSymbol startPointSourceSym -> o
    com.esri.core.symbol.SimpleMarkerSymbol endPointSourceSym -> p
    com.esri.core.symbol.SimpleMarkerSymbol startPointTargetSym -> q
    com.esri.core.symbol.SimpleMarkerSymbol endPointTargetSym -> r
    com.esri.core.symbol.SimpleMarkerSymbol startPointSym -> s
    com.esri.core.symbol.SimpleMarkerSymbol endPointSym -> t
    int SQUARE_SIZE -> u
    int CIRCLE_SIZE -> v
    int OUTLINE_SIZE -> w
    int multiRouteSourceFloorIndex -> j
    int multiRouteTargetPOIFloorIndex -> k
    com.esri.core.geometry.Point mSourceCalloutLocation -> l
    com.esri.core.geometry.Point mTargetCalloutLocation -> m
    java.lang.String mErrorMessage -> n
    java.util.Map portalsStatusForUser -> x
    void startRouting(com.navibees.sdk.model.metadata.json.IndoorLocation,java.lang.Object,int,int,boolean) -> a
    java.util.List getLocationsAtFloor(java.lang.Object,int) -> a
    java.util.List getEntryPointsForObject(java.lang.Object,int) -> b
    java.util.Set getConnectedFloors(com.navibees.sdk.model.metadata.json.Floor,java.util.List) -> a
    java.util.List getPortalsBetweenTwoFloors(com.navibees.sdk.model.metadata.json.Floor,com.navibees.sdk.model.metadata.json.Floor) -> a
    java.util.List getPortalsAtFloor(com.navibees.sdk.model.metadata.json.Floor) -> a
    java.lang.Double getRouteDistance(com.esri.core.geometry.Point,com.esri.core.geometry.Point,com.navibees.sdk.model.metadata.json.Floor) -> a
    com.esri.core.tasks.na.Route getRoute(com.esri.core.geometry.Point,com.esri.core.geometry.Point,com.navibees.sdk.model.metadata.json.Floor) -> b
    com.esri.core.geometry.Point getEntryPointForShortestPath(com.navibees.sdk.model.metadata.json.IndoorLocation,java.lang.Object) -> a
    com.navibees.sdk.model.metadata.json.Portal getNearestPortal(com.navibees.sdk.model.metadata.json.IndoorLocation,java.util.List,int) -> a
    android.util.SparseArray routeToEntryPointOfTargetPOIInCurrentFloor(com.esri.core.geometry.Point,com.esri.core.geometry.Point) -> a
    android.util.SparseArray routeMeToPOIInAnotherFloor(java.util.List,java.lang.Object,com.navibees.sdk.model.metadata.json.Floor) -> a
    com.esri.core.geometry.Point[] getShortestPathBetweenPortalAndPOI(java.lang.Object,java.lang.Object,com.navibees.sdk.model.metadata.json.Floor) -> a
    com.esri.core.map.Graphic getRouteGraphic(com.esri.core.geometry.Point,com.esri.core.geometry.Point,com.navibees.sdk.model.metadata.json.Floor) -> c
com.navibees.sdk.model.routing.EsriRouting$EsriRoutingTask -> com.navibees.sdk.model.routing.b:
    android.app.ProgressDialog dialog -> b
    com.navibees.sdk.model.routing.EsriRouting this$0 -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.navibees.sdk.model.routing.EsriRouting$OnRoutingFinishedListener -> com.navibees.sdk.model.routing.c:
    void onRoutingFinished(android.util.SparseArray,int,int,com.esri.core.geometry.Point,com.esri.core.geometry.Point) -> a
com.navibees.sdk.model.routing.TurnByTurnNavigation -> com.navibees.sdk.model.routing.d:
    com.navibees.sdk.model.routing.TurnByTurnNavigation mSingleton -> b
    android.util.SparseArray mSegmentsPerFloor -> a
    int mTargetFloor -> c
    java.lang.String[] mActions -> d
    com.navibees.sdk.model.routing.TurnByTurnNavigation getInstance() -> a
    void updateEsriRoute(android.util.SparseArray,int) -> a
    void reset() -> b
    java.util.List getSegments(com.navibees.sdk.model.metadata.json.IndoorLocation[]) -> a
    java.lang.String getNearbyDestinationMessage(android.content.Context,com.navibees.sdk.model.metadata.json.IndoorLocation,int) -> a
    double getRotationAngle(com.navibees.sdk.model.metadata.json.IndoorLocation,com.navibees.sdk.model.metadata.json.IndoorLocation) -> a
com.navibees.sdk.model.routing.TurnByTurnNavigation$NavigationResult -> com.navibees.sdk.model.routing.e:
    com.navibees.sdk.model.metadata.LineIndoorLocationRestriction mSegment -> a
    java.lang.String mMessage -> b
    double mRotationAngle -> c
    com.navibees.sdk.model.routing.TurnByTurnNavigation this$0 -> d
com.navibees.sdk.model.server.ParseServerManager -> com.navibees.sdk.model.server.a:
    com.google.gson.Gson gson -> a
    com.navibees.sdk.model.metadata.MetaDataManager metaDataManager -> b
    void getApplicationConfiguration(android.content.Context,com.navibees.sdk.model.metadata.DataChangeListener) -> a
    void getBuildingMetaData(android.content.Context,com.navibees.sdk.model.metadata.DataChangeListener) -> b
    boolean isDateAfter(java.util.Date,java.util.Date) -> a
com.navibees.sdk.model.server.ParseServerManager$1 -> com.navibees.sdk.model.server.b:
    android.content.Context val$context -> a
    com.navibees.sdk.model.metadata.DataChangeListener val$listener -> b
    com.navibees.sdk.model.server.ParseServerManager this$0 -> c
    void done(com.parse.ParseUser,com.parse.ParseException) -> done
    void done(java.lang.Object,java.lang.Throwable) -> done
com.navibees.sdk.model.server.ParseServerManager$1$1 -> com.navibees.sdk.model.server.c:
    com.navibees.sdk.model.server.ParseServerManager$1 this$1 -> a
    void done(com.parse.ParseObject,com.parse.ParseException) -> done
    void done(java.lang.Object,java.lang.Throwable) -> done
com.navibees.sdk.model.server.ParseServerManager$1$1$1 -> com.navibees.sdk.model.server.d:
    java.util.Date val$updateAtServer -> a
    com.navibees.sdk.model.server.ParseServerManager$1$1 this$2 -> b
    void done(byte[],com.parse.ParseException) -> done
    void done(java.lang.Object,java.lang.Throwable) -> done
com.navibees.sdk.model.server.ParseServerManager$1$1$1$1 -> com.navibees.sdk.model.server.e:
    com.navibees.sdk.model.server.ParseServerManager$1$1$1 this$3 -> a
com.navibees.sdk.model.server.ParseServerManager$10 -> com.navibees.sdk.model.server.f:
    com.navibees.sdk.model.metadata.DataChangeListener val$listener -> a
    java.util.Date val$beaconNodesConfigurationFileUpdateAtServer -> b
    com.navibees.sdk.model.server.ParseServerManager this$0 -> c
    void done(byte[],com.parse.ParseException) -> done
    void done(java.lang.Object,java.lang.Throwable) -> done
com.navibees.sdk.model.server.ParseServerManager$10$1 -> com.navibees.sdk.model.server.g:
    com.navibees.sdk.model.server.ParseServerManager$10 this$1 -> a
com.navibees.sdk.model.server.ParseServerManager$11 -> com.navibees.sdk.model.server.h:
    com.navibees.sdk.model.metadata.DataChangeListener val$listener -> a
    java.util.Date val$updateAtServer -> b
    com.navibees.sdk.model.server.ParseServerManager this$0 -> c
    void done(byte[],com.parse.ParseException) -> done
    void done(java.lang.Object,java.lang.Throwable) -> done
com.navibees.sdk.model.server.ParseServerManager$11$1 -> com.navibees.sdk.model.server.i:
    com.navibees.sdk.model.server.ParseServerManager$11 this$1 -> a
com.navibees.sdk.model.server.ParseServerManager$2 -> com.navibees.sdk.model.server.j:
    com.navibees.sdk.model.metadata.DataChangeListener val$listener -> a
    com.navibees.sdk.model.server.ParseServerManager this$0 -> b
    void done(com.parse.ParseObject,com.parse.ParseException) -> done
    void done(java.lang.Object,java.lang.Throwable) -> done
com.navibees.sdk.model.server.ParseServerManager$3 -> com.navibees.sdk.model.server.k:
    com.navibees.sdk.model.metadata.DataChangeListener val$listener -> a
    java.util.Date val$updateAtServer -> b
    com.navibees.sdk.model.server.ParseServerManager this$0 -> c
    void done(byte[],com.parse.ParseException) -> done
    void done(java.lang.Object,java.lang.Throwable) -> done
com.navibees.sdk.model.server.ParseServerManager$3$1 -> com.navibees.sdk.model.server.l:
    com.navibees.sdk.model.server.ParseServerManager$3 this$1 -> a
com.navibees.sdk.model.server.ParseServerManager$4 -> com.navibees.sdk.model.server.m:
    com.navibees.sdk.model.metadata.DataChangeListener val$listener -> a
    java.util.Date val$updateAtServer -> b
    com.navibees.sdk.model.server.ParseServerManager this$0 -> c
    void done(byte[],com.parse.ParseException) -> done
    void done(java.lang.Object,java.lang.Throwable) -> done
com.navibees.sdk.model.server.ParseServerManager$4$1 -> com.navibees.sdk.model.server.n:
    com.navibees.sdk.model.server.ParseServerManager$4 this$1 -> a
com.navibees.sdk.model.server.ParseServerManager$5 -> com.navibees.sdk.model.server.o:
    com.navibees.sdk.model.metadata.DataChangeListener val$listener -> a
    java.util.Date val$updateAtServer -> b
    com.navibees.sdk.model.server.ParseServerManager this$0 -> c
    void done(byte[],com.parse.ParseException) -> done
    void done(java.lang.Object,java.lang.Throwable) -> done
com.navibees.sdk.model.server.ParseServerManager$5$1 -> com.navibees.sdk.model.server.p:
    com.navibees.sdk.model.server.ParseServerManager$5 this$1 -> a
com.navibees.sdk.model.server.ParseServerManager$6 -> com.navibees.sdk.model.server.q:
    com.navibees.sdk.model.metadata.DataChangeListener val$listener -> a
    java.util.Date val$updateAtServer -> b
    com.navibees.sdk.model.server.ParseServerManager this$0 -> c
    void done(byte[],com.parse.ParseException) -> done
    void done(java.lang.Object,java.lang.Throwable) -> done
com.navibees.sdk.model.server.ParseServerManager$6$1 -> com.navibees.sdk.model.server.r:
    com.navibees.sdk.model.server.ParseServerManager$6 this$1 -> a
com.navibees.sdk.model.server.ParseServerManager$7 -> com.navibees.sdk.model.server.s:
    com.navibees.sdk.model.metadata.DataChangeListener val$listener -> a
    java.util.Date val$updateAtServer -> b
    com.navibees.sdk.model.server.ParseServerManager this$0 -> c
    void done(byte[],com.parse.ParseException) -> done
    void done(java.lang.Object,java.lang.Throwable) -> done
com.navibees.sdk.model.server.ParseServerManager$7$1 -> com.navibees.sdk.model.server.t:
    com.navibees.sdk.model.server.ParseServerManager$7 this$1 -> a
com.navibees.sdk.model.server.ParseServerManager$8 -> com.navibees.sdk.model.server.u:
    com.navibees.sdk.model.metadata.DataChangeListener val$listener -> a
    java.util.Date val$updateAtServer -> b
    com.navibees.sdk.model.server.ParseServerManager this$0 -> c
    void done(byte[],com.parse.ParseException) -> done
    void done(java.lang.Object,java.lang.Throwable) -> done
com.navibees.sdk.model.server.ParseServerManager$8$1 -> com.navibees.sdk.model.server.v:
    com.navibees.sdk.model.server.ParseServerManager$8 this$1 -> a
com.navibees.sdk.model.server.ParseServerManager$9 -> com.navibees.sdk.model.server.w:
    com.navibees.sdk.model.metadata.DataChangeListener val$listener -> a
    java.util.Date val$updateAtServer -> b
    com.navibees.sdk.model.server.ParseServerManager this$0 -> c
    void done(byte[],com.parse.ParseException) -> done
    void done(java.lang.Object,java.lang.Throwable) -> done
com.navibees.sdk.model.server.ParseServerManager$9$1 -> com.navibees.sdk.model.server.x:
    com.navibees.sdk.model.server.ParseServerManager$9 this$1 -> a
com.navibees.sdk.model.server.ServerManager -> com.navibees.sdk.model.server.y:
    void getApplicationConfiguration(android.content.Context,com.navibees.sdk.model.metadata.DataChangeListener) -> a
    void getBuildingMetaData(android.content.Context,com.navibees.sdk.model.metadata.DataChangeListener) -> b
com.navibees.sdk.util.AlphanumComparator -> com.navibees.sdk.util.a:
    boolean isDigit(char) -> a
    java.lang.String getChunk(java.lang.String,int,int) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.navibees.sdk.util.AssetsManager -> com.navibees.sdk.util.b:
    android.content.Context context -> a
    com.navibees.sdk.util.AssetsManager$AssetManagerListener assetManagerListener -> b
    android.content.SharedPreferences sp -> d
    android.content.SharedPreferences$Editor editor -> c
    java.lang.Boolean copyFileOrDir(java.lang.String) -> a
    void copyFile(java.lang.String) -> b
    void deleteFolder(java.lang.String) -> c
    boolean extractZipFile(java.io.File,java.lang.String) -> a
    void access$100(com.navibees.sdk.util.AssetsManager,java.lang.String) -> a
    void access$300(com.navibees.sdk.util.AssetsManager) -> a
com.navibees.sdk.util.AssetsManager$AssetManagerListener -> com.navibees.sdk.util.c:
    void assetsCopyCallback$171db248() -> d
com.navibees.sdk.util.AssetsManager$ExtractMapResourcesFoldersTask -> com.navibees.sdk.util.d:
    com.navibees.sdk.util.AssetsManager this$0 -> a
    java.lang.Boolean doInBackground$5f8445a4() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.navibees.sdk.util.AssetsManager$ManageAssetFolders -> com.navibees.sdk.util.e:
    com.navibees.sdk.util.AssetsManager this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.navibees.sdk.util.CommonUtils -> com.navibees.sdk.util.f:
    boolean isThereAreInternetConnection(android.content.Context) -> a
    boolean isArabicLang() -> a
    void showPermissionsForMarshmallow(android.content.Context) -> b
    boolean isMarshmallowOrAbove() -> b
    boolean isLocationServicesGranted(android.content.Context) -> d
    boolean isFirstTimeInCurrentVersion(android.content.Context) -> c
    boolean isPOIMatch(java.lang.String,com.navibees.sdk.model.metadata.json.POI) -> a
    boolean searchInString(java.lang.String,java.lang.String) -> a
com.navibees.sdk.util.CommonUtils$1 -> com.navibees.sdk.util.g:
    android.content.Context val$context -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.navibees.sdk.util.CommonUtils$2 -> com.navibees.sdk.util.h:
    android.content.Context val$context -> a
    void onResult(com.google.android.gms.common.api.Result) -> onResult
com.navibees.sdk.util.NaviBeesAlphanumComparator -> com.navibees.sdk.util.i:
    com.navibees.sdk.util.NaviBeesAlphanumComparator$ComparatorType comparatorType -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.navibees.sdk.util.NaviBeesAlphanumComparator$ComparatorType -> com.navibees.sdk.util.j:
    com.navibees.sdk.util.NaviBeesAlphanumComparator$ComparatorType BY_NAME -> a
    com.navibees.sdk.util.NaviBeesAlphanumComparator$ComparatorType BY_ID -> b
    com.navibees.sdk.util.NaviBeesAlphanumComparator$ComparatorType[] $VALUES -> c
    com.navibees.sdk.util.NaviBeesAlphanumComparator$ComparatorType[] values() -> values
    com.navibees.sdk.util.NaviBeesAlphanumComparator$ComparatorType valueOf(java.lang.String) -> valueOf
com.parse.ACRA -> com.parse.ACRA:
    java.lang.String LOG_TAG -> LOG_TAG
    com.parse.ReportsCrashes mReportsCrashes -> mReportsCrashes
    com.parse.ReportField[] ALL_CRASH_REPORT_FIELDS -> ALL_CRASH_REPORT_FIELDS
    com.parse.ReportField[] MINIMAL_REPORT_FIELDS -> MINIMAL_REPORT_FIELDS
    java.lang.String NULL_VALUE -> NULL_VALUE
    com.parse.ErrorReporter init(com.parse.ReportsCrashes,java.lang.String,boolean,com.parse.FileProvider) -> init
    com.parse.ReportsCrashes getConfig() -> getConfig
com.parse.ACRAResponse -> com.parse.ACRAResponse:
    int mStatus -> mStatus
    void setStatusCode(int) -> setStatusCode
    int getStatusCode() -> getStatusCode
com.parse.AbstractQueryController -> com.parse.AbstractQueryController:
    bolts.Task getFirstAsync(com.parse.ParseQuery$State,com.parse.ParseUser,bolts.Task) -> getFirstAsync
com.parse.AbstractQueryController$1 -> com.parse.AbstractQueryController$1:
    com.parse.AbstractQueryController this$0 -> this$0
    com.parse.ParseObject then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.AuthenticationCallback -> com.parse.AuthenticationCallback:
    boolean onRestore(java.util.Map) -> onRestore
com.parse.BaseCrashReporter -> com.parse.BaseCrashReporter:
    android.content.Context mApplicationContext -> mApplicationContext
    boolean includeDropBoxSystemTags() -> includeDropBoxSystemTags
    java.lang.String[] additionalDropBoxTags() -> additionalDropBoxTags
    int dropboxCollectionMinutes() -> dropboxCollectionMinutes
    java.lang.String[] logcatArguments() -> logcatArguments
    java.lang.String formPostFormat() -> formPostFormat
    int socketTimeout() -> socketTimeout
    boolean checkSSLCertsOnCrashReport() -> checkSSLCertsOnCrashReport
    android.content.Context getApplicationContext() -> getApplicationContext
com.parse.BoundedLinkedList -> com.parse.BoundedLinkedList:
    int maxSize -> maxSize
    boolean add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    java.lang.String toString() -> toString
com.parse.CacheQueryController -> com.parse.CacheQueryController:
    com.parse.NetworkQueryController networkController -> networkController
    bolts.Task findAsync(com.parse.ParseQuery$State,com.parse.ParseUser,bolts.Task) -> findAsync
    bolts.Task countAsync(com.parse.ParseQuery$State,com.parse.ParseUser,bolts.Task) -> countAsync
    bolts.Task findFromCacheAsync(com.parse.ParseQuery$State,java.lang.String) -> findFromCacheAsync
    bolts.Task countFromCacheAsync(com.parse.ParseQuery$State,java.lang.String) -> countFromCacheAsync
    bolts.Task runCommandWithPolicyAsync(com.parse.CacheQueryController$CommandDelegate,com.parse.ParseQuery$CachePolicy) -> runCommandWithPolicyAsync
    com.parse.NetworkQueryController access$000(com.parse.CacheQueryController) -> access$000
    bolts.Task access$100(com.parse.CacheQueryController,com.parse.ParseQuery$State,java.lang.String) -> access$100
    bolts.Task access$200(com.parse.CacheQueryController,com.parse.ParseQuery$State,java.lang.String) -> access$200
com.parse.CacheQueryController$1 -> com.parse.CacheQueryController$1:
    com.parse.ParseQuery$State val$state -> val$state
    java.lang.String val$sessionToken -> val$sessionToken
    bolts.Task val$cancellationToken -> val$cancellationToken
    com.parse.CacheQueryController this$0 -> this$0
    bolts.Task runOnNetworkAsync(boolean) -> runOnNetworkAsync
    bolts.Task runFromCacheAsync() -> runFromCacheAsync
com.parse.CacheQueryController$2 -> com.parse.CacheQueryController$2:
    com.parse.ParseQuery$State val$state -> val$state
    java.lang.String val$sessionToken -> val$sessionToken
    bolts.Task val$cancellationToken -> val$cancellationToken
    com.parse.CacheQueryController this$0 -> this$0
    bolts.Task runOnNetworkAsync(boolean) -> runOnNetworkAsync
    bolts.Task runFromCacheAsync() -> runFromCacheAsync
com.parse.CacheQueryController$3 -> com.parse.CacheQueryController$3:
    java.lang.String val$cacheKey -> val$cacheKey
    com.parse.ParseQuery$State val$state -> val$state
    com.parse.CacheQueryController this$0 -> this$0
    java.util.List call() -> call
    java.lang.Object call() -> call
com.parse.CacheQueryController$4 -> com.parse.CacheQueryController$4:
    java.lang.String val$cacheKey -> val$cacheKey
    com.parse.ParseQuery$State val$state -> val$state
    com.parse.CacheQueryController this$0 -> this$0
    java.lang.Integer call() -> call
    java.lang.Object call() -> call
com.parse.CacheQueryController$5 -> com.parse.CacheQueryController$5:
    com.parse.CacheQueryController$CommandDelegate val$c -> val$c
    com.parse.CacheQueryController this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.CacheQueryController$6 -> com.parse.CacheQueryController$6:
    com.parse.CacheQueryController$CommandDelegate val$c -> val$c
    com.parse.CacheQueryController this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.CacheQueryController$7 -> com.parse.CacheQueryController$7:
    int[] $SwitchMap$com$parse$ParseQuery$CachePolicy -> $SwitchMap$com$parse$ParseQuery$CachePolicy
com.parse.CacheQueryController$CommandDelegate -> com.parse.CacheQueryController$CommandDelegate:
    bolts.Task runOnNetworkAsync(boolean) -> runOnNetworkAsync
    bolts.Task runFromCacheAsync() -> runFromCacheAsync
com.parse.CachedCurrentInstallationController -> com.parse.CachedCurrentInstallationController:
    java.lang.String TAG -> TAG
    java.lang.Object mutex -> mutex
    com.parse.TaskQueue taskQueue -> taskQueue
    com.parse.ParseObjectStore store -> store
    com.parse.InstallationId installationId -> installationId
    com.parse.ParseInstallation currentInstallation -> currentInstallation
    bolts.Task setAsync(com.parse.ParseInstallation) -> setAsync
    bolts.Task getAsync() -> getAsync
    bolts.Task existsAsync() -> existsAsync
    void clearFromMemory() -> clearFromMemory
    void clearFromDisk() -> clearFromDisk
    boolean isCurrent(com.parse.ParseInstallation) -> isCurrent
    boolean isCurrent(com.parse.ParseObject) -> isCurrent
    bolts.Task setAsync(com.parse.ParseObject) -> setAsync
    com.parse.InstallationId access$000(com.parse.CachedCurrentInstallationController) -> access$000
    com.parse.ParseObjectStore access$100(com.parse.CachedCurrentInstallationController) -> access$100
    java.lang.Object access$200(com.parse.CachedCurrentInstallationController) -> access$200
com.parse.CachedCurrentInstallationController$1 -> com.parse.CachedCurrentInstallationController$1:
    com.parse.ParseInstallation val$installation -> val$installation
    com.parse.CachedCurrentInstallationController this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.CachedCurrentInstallationController$1$1 -> com.parse.CachedCurrentInstallationController$1$1:
    com.parse.CachedCurrentInstallationController$1 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.CachedCurrentInstallationController$1$2 -> com.parse.CachedCurrentInstallationController$1$2:
    com.parse.CachedCurrentInstallationController$1 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.CachedCurrentInstallationController$2 -> com.parse.CachedCurrentInstallationController$2:
    com.parse.CachedCurrentInstallationController this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.CachedCurrentInstallationController$2$1 -> com.parse.CachedCurrentInstallationController$2$1:
    com.parse.CachedCurrentInstallationController$2 this$1 -> this$1
    com.parse.ParseInstallation then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.CachedCurrentInstallationController$2$2 -> com.parse.CachedCurrentInstallationController$2$2:
    com.parse.CachedCurrentInstallationController$2 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.CachedCurrentInstallationController$3 -> com.parse.CachedCurrentInstallationController$3:
    com.parse.CachedCurrentInstallationController this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.CachedCurrentInstallationController$3$1 -> com.parse.CachedCurrentInstallationController$3$1:
    com.parse.CachedCurrentInstallationController$3 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.CachedCurrentUserController -> com.parse.CachedCurrentUserController:
    java.lang.Object mutex -> mutex
    com.parse.TaskQueue taskQueue -> taskQueue
    com.parse.ParseObjectStore store -> store
    com.parse.ParseUser currentUser -> currentUser
    boolean currentUserMatchesDisk -> currentUserMatchesDisk
    bolts.Task setAsync(com.parse.ParseUser) -> setAsync
    bolts.Task setIfNeededAsync(com.parse.ParseUser) -> setIfNeededAsync
    bolts.Task getAsync() -> getAsync
    bolts.Task existsAsync() -> existsAsync
    boolean isCurrent(com.parse.ParseUser) -> isCurrent
    void clearFromMemory() -> clearFromMemory
    void clearFromDisk() -> clearFromDisk
    bolts.Task getCurrentSessionTokenAsync() -> getCurrentSessionTokenAsync
    bolts.Task logOutAsync() -> logOutAsync
    bolts.Task getAsync(boolean) -> getAsync
    com.parse.ParseUser lazyLogIn() -> lazyLogIn
    com.parse.ParseUser lazyLogIn(java.lang.String,java.util.Map) -> lazyLogIn
    boolean isCurrent(com.parse.ParseObject) -> isCurrent
    bolts.Task setAsync(com.parse.ParseObject) -> setAsync
    java.lang.Object access$000(com.parse.CachedCurrentUserController) -> access$000
    com.parse.ParseObjectStore access$100(com.parse.CachedCurrentUserController) -> access$100
    com.parse.ParseUser access$200(com.parse.CachedCurrentUserController) -> access$200
com.parse.CachedCurrentUserController$1 -> com.parse.CachedCurrentUserController$1:
    com.parse.ParseUser val$user -> val$user
    com.parse.CachedCurrentUserController this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.CachedCurrentUserController$1$1 -> com.parse.CachedCurrentUserController$1$1:
    com.parse.CachedCurrentUserController$1 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.CachedCurrentUserController$1$1$1 -> com.parse.CachedCurrentUserController$1$1$1:
    com.parse.CachedCurrentUserController$1$1 this$2 -> this$2
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.CachedCurrentUserController$1$2 -> com.parse.CachedCurrentUserController$1$2:
    com.parse.CachedCurrentUserController$1 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.CachedCurrentUserController$1$3 -> com.parse.CachedCurrentUserController$1$3:
    com.parse.CachedCurrentUserController$1 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.CachedCurrentUserController$1$3$1 -> com.parse.CachedCurrentUserController$1$3$1:
    com.parse.CachedCurrentUserController$1$3 this$2 -> this$2
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.CachedCurrentUserController$2 -> com.parse.CachedCurrentUserController$2:
    com.parse.CachedCurrentUserController this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.CachedCurrentUserController$2$1 -> com.parse.CachedCurrentUserController$2$1:
    com.parse.CachedCurrentUserController$2 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.CachedCurrentUserController$3 -> com.parse.CachedCurrentUserController$3:
    com.parse.CachedCurrentUserController this$0 -> this$0
    java.lang.String then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.CachedCurrentUserController$4 -> com.parse.CachedCurrentUserController$4:
    com.parse.CachedCurrentUserController this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.CachedCurrentUserController$4$1 -> com.parse.CachedCurrentUserController$4$1:
    bolts.Task val$userTask -> val$userTask
    com.parse.CachedCurrentUserController$4 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.CachedCurrentUserController$4$1$1 -> com.parse.CachedCurrentUserController$4$1$1:
    com.parse.CachedCurrentUserController$4$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.CachedCurrentUserController$4$1$2 -> com.parse.CachedCurrentUserController$4$1$2:
    com.parse.CachedCurrentUserController$4$1 this$2 -> this$2
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.CachedCurrentUserController$5 -> com.parse.CachedCurrentUserController$5:
    boolean val$shouldAutoCreateUser -> val$shouldAutoCreateUser
    com.parse.CachedCurrentUserController this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.CachedCurrentUserController$5$1 -> com.parse.CachedCurrentUserController$5$1:
    com.parse.CachedCurrentUserController$5 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.CachedCurrentUserController$5$1$1 -> com.parse.CachedCurrentUserController$5$1$1:
    com.parse.CachedCurrentUserController$5$1 this$2 -> this$2
    com.parse.ParseUser then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.Compatibility -> com.parse.Compatibility:
    int getAPILevel() -> getAPILevel
    java.lang.String getDropBoxServiceName() -> getDropBoxServiceName
com.parse.ConfigCallback -> com.parse.ConfigCallback:
    void done(com.parse.ParseConfig,com.parse.ParseException) -> done
com.parse.ConfigurationInspector -> com.parse.ConfigurationInspector:
    java.lang.String SUFFIX_MASK -> SUFFIX_MASK
    java.lang.String FIELD_SCREENLAYOUT -> FIELD_SCREENLAYOUT
    java.lang.String FIELD_UIMODE -> FIELD_UIMODE
    java.lang.String FIELD_MNC -> FIELD_MNC
    java.lang.String FIELD_MCC -> FIELD_MCC
    java.lang.String PREFIX_UI_MODE -> PREFIX_UI_MODE
    java.lang.String PREFIX_TOUCHSCREEN -> PREFIX_TOUCHSCREEN
    java.lang.String PREFIX_SCREENLAYOUT -> PREFIX_SCREENLAYOUT
    java.lang.String PREFIX_ORIENTATION -> PREFIX_ORIENTATION
    java.lang.String PREFIX_NAVIGATIONHIDDEN -> PREFIX_NAVIGATIONHIDDEN
    java.lang.String PREFIX_NAVIGATION -> PREFIX_NAVIGATION
    java.lang.String PREFIX_KEYBOARDHIDDEN -> PREFIX_KEYBOARDHIDDEN
    java.lang.String PREFIX_KEYBOARD -> PREFIX_KEYBOARD
    java.lang.String PREFIX_HARDKEYBOARDHIDDEN -> PREFIX_HARDKEYBOARDHIDDEN
    android.util.SparseArray mHardKeyboardHiddenValues -> mHardKeyboardHiddenValues
    android.util.SparseArray mKeyboardValues -> mKeyboardValues
    android.util.SparseArray mKeyboardHiddenValues -> mKeyboardHiddenValues
    android.util.SparseArray mNavigationValues -> mNavigationValues
    android.util.SparseArray mNavigationHiddenValues -> mNavigationHiddenValues
    android.util.SparseArray mOrientationValues -> mOrientationValues
    android.util.SparseArray mScreenLayoutValues -> mScreenLayoutValues
    android.util.SparseArray mTouchScreenValues -> mTouchScreenValues
    android.util.SparseArray mUiModeValues -> mUiModeValues
    java.util.HashMap mValueArrays -> mValueArrays
    java.lang.String toString(android.content.res.Configuration) -> toString
    java.lang.String getFieldValueName(android.content.res.Configuration,java.lang.reflect.Field) -> getFieldValueName
    java.lang.String activeFlags(android.util.SparseArray,int) -> activeFlags
com.parse.ConnectivityNotifier -> com.parse.ConnectivityNotifier:
    java.lang.String TAG -> TAG
    com.parse.ConnectivityNotifier singleton -> singleton
    java.util.Set listeners -> listeners
    boolean hasRegisteredReceiver -> hasRegisteredReceiver
    java.lang.Object lock -> lock
    com.parse.ConnectivityNotifier getNotifier(android.content.Context) -> getNotifier
    boolean isConnected(android.content.Context) -> isConnected
    void addListener(com.parse.ConnectivityNotifier$ConnectivityListener) -> addListener
    void removeListener(com.parse.ConnectivityNotifier$ConnectivityListener) -> removeListener
    boolean tryToRegisterForNetworkStatusNotifications(android.content.Context) -> tryToRegisterForNetworkStatusNotifications
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.parse.ConnectivityNotifier$ConnectivityListener -> com.parse.ConnectivityNotifier$ConnectivityListener:
    void networkConnectivityStatusChanged(android.content.Context,android.content.Intent) -> networkConnectivityStatusChanged
com.parse.CountCallback -> com.parse.CountCallback:
    void done(int,com.parse.ParseException) -> done
com.parse.CrashReportData -> com.parse.CrashReportData:
    long serialVersionUID -> serialVersionUID
    java.lang.String PROP_DTD_NAME -> PROP_DTD_NAME
    com.parse.CrashReportData defaults -> defaults
    int NONE -> NONE
    int SLASH -> SLASH
    int UNICODE -> UNICODE
    int CONTINUE -> CONTINUE
    int KEY_DONE -> KEY_DONE
    int IGNORE -> IGNORE
    java.lang.String lineSeparator -> lineSeparator
    void dumpString(java.lang.Appendable,java.lang.String,boolean) -> dumpString
    java.lang.String getProperty(com.parse.ReportField) -> getProperty
    java.lang.String getProperty(com.parse.ReportField,java.lang.String) -> getProperty
    void list(java.io.PrintStream) -> list
    void list(java.io.PrintWriter) -> list
    void load(java.io.InputStream) -> load
    boolean isEbcdic(java.io.BufferedInputStream) -> isEbcdic
    void load(java.io.Reader) -> load
    java.lang.String put(com.parse.ReportField,java.lang.String,java.io.Writer) -> put
    java.util.Enumeration keys() -> keys
    void save(java.io.OutputStream,java.lang.String) -> save
    java.lang.Object setProperty(com.parse.ReportField,java.lang.String) -> setProperty
    void store(java.io.OutputStream,java.lang.String) -> store
    java.io.Writer getWriter(java.io.OutputStream) -> getWriter
    void store(java.io.Writer,java.lang.String) -> store
    void storeComment(java.io.Writer,java.lang.String) -> storeComment
    void storeKeyValuePair(java.io.Writer,com.parse.ReportField,java.lang.String) -> storeKeyValuePair
    void storeToXML(java.io.OutputStream,java.lang.String) -> storeToXML
    void storeToXML(java.io.OutputStream,java.lang.String,java.lang.String) -> storeToXML
    java.lang.String substitutePredefinedEntries(java.lang.String) -> substitutePredefinedEntries
com.parse.CustomReportDataSupplier -> com.parse.CustomReportDataSupplier:
    java.lang.String getCustomData(java.lang.Throwable) -> getCustomData
com.parse.DeleteCallback -> com.parse.DeleteCallback:
    void done(com.parse.ParseException) -> done
com.parse.DeviceFeaturesCollector -> com.parse.DeviceFeaturesCollector:
    java.lang.String getFeatures(android.content.Context) -> getFeatures
com.parse.DropBoxCollector -> com.parse.DropBoxCollector:
    java.lang.String[] SYSTEM_TAGS -> SYSTEM_TAGS
    java.lang.String read(android.content.Context,java.lang.String[]) -> read
com.parse.DumpSysCollector -> com.parse.DumpSysCollector:
    java.lang.String collectMemInfo(android.content.Context) -> collectMemInfo
    java.lang.String collectLargerMemoryInfo(android.content.Context) -> collectLargerMemoryInfo
com.parse.ErrorReporter -> com.parse.ErrorReporter:
    java.lang.String REPORTFILE_EXTENSION -> REPORTFILE_EXTENSION
    java.lang.String TEMP_REPORTFILE_EXTENSION -> TEMP_REPORTFILE_EXTENSION
    java.lang.String ACRA_DIRNAME -> ACRA_DIRNAME
    long MAX_REPORT_AGE -> MAX_REPORT_AGE
    long DEFAULT_MAX_REPORT_SIZE -> DEFAULT_MAX_REPORT_SIZE
    java.lang.String PREALLOCATED_REPORTFILE -> PREALLOCATED_REPORTFILE
    long PREALLOCATED_FILESIZE -> PREALLOCATED_FILESIZE
    java.lang.String DUMP_DIR -> DUMP_DIR
    java.lang.String CRASH_ATTACHMENT_DUMMY_STACKTRACE -> CRASH_ATTACHMENT_DUMMY_STACKTRACE
    java.lang.String SIGQUIT_DIR -> SIGQUIT_DIR
    java.lang.String DUMPFILE_EXTENSION -> DUMPFILE_EXTENSION
    long NATIVE_MAX_REPORT_SIZE -> NATIVE_MAX_REPORT_SIZE
    long SIGQUIT_MAX_REPORT_SIZE -> SIGQUIT_MAX_REPORT_SIZE
    java.util.regex.Pattern VERSION_CODE_REGEX -> VERSION_CODE_REGEX
    long MIN_TEMP_REPORT_AGE -> MIN_TEMP_REPORT_AGE
    long mMaxReportSize -> mMaxReportSize
    java.lang.String mInternalException -> mInternalException
    java.lang.String IS_PROCESSING_ANOTHER_EXCEPTION -> IS_PROCESSING_ANOTHER_EXCEPTION
    java.lang.String ANDROID_RUNTIME_DALVIK -> ANDROID_RUNTIME_DALVIK
    java.lang.String ANDROID_RUNTIME_ART -> ANDROID_RUNTIME_ART
    java.lang.String ANDROID_RUNTIME_UNKNOWN -> ANDROID_RUNTIME_UNKNOWN
    java.lang.String KNOWN_ART_JAR -> KNOWN_ART_JAR
    java.lang.String KNOWN_DALVIK_JAR -> KNOWN_DALVIK_JAR
    java.lang.String JAVA_BOOT_CLASS_PATH -> JAVA_BOOT_CLASS_PATH
    boolean mHasNativeCrashDumpOnInit -> mHasNativeCrashDumpOnInit
    java.util.ArrayList mReportSenders -> mReportSenders
    java.util.Map mConstantFields -> mConstantFields
    java.util.Map mDeviceSpecificFields -> mDeviceSpecificFields
    com.parse.PackageManagerWrapper mPackageManager -> mPackageManager
    com.parse.ErrorReporter$CrashReportType[] ALL_REPORT_TYPES -> ALL_REPORT_TYPES
    com.parse.FileProvider mFileProvider -> mFileProvider
    int MAX_SEND_REPORTS -> MAX_SEND_REPORTS
    java.util.Map mInstanceCustomParameters -> mInstanceCustomParameters
    java.util.Map mInstanceLazyCustomParameters -> mInstanceLazyCustomParameters
    boolean mCurrentlyProcessingOOM -> mCurrentlyProcessingOOM
    java.lang.Object mShouldContinueProcessingExceptionLock -> mShouldContinueProcessingExceptionLock
    java.lang.Thread$UncaughtExceptionHandler mDfltExceptionHandler -> mDfltExceptionHandler
    com.parse.ErrorReporter mInstanceSingleton -> mInstanceSingleton
    android.content.Context mContext -> mContext
    java.io.File preallocFile -> preallocFile
    int DEFAULT_TRACE_COUNT_LIMIT -> DEFAULT_TRACE_COUNT_LIMIT
    int MAX_TRACE_COUNT_LIMIT -> MAX_TRACE_COUNT_LIMIT
    com.parse.SimpleTraceLogger activityLogger -> activityLogger
    java.lang.String mAppVersionCode -> mAppVersionCode
    java.lang.String mAppVersionName -> mAppVersionName
    java.lang.String mUserId -> mUserId
    boolean sendInMemoryReport -> sendInMemoryReport
    boolean processNameByAmsReady -> processNameByAmsReady
    java.lang.String processNameByAms -> processNameByAms
    android.text.format.Time mAppStartDate -> mAppStartDate
    boolean usePreallocatedFile -> usePreallocatedFile
    boolean mIsInternalBuild -> mIsInternalBuild
    com.parse.LogBridge mLogBridge -> mLogBridge
    java.util.concurrent.atomic.AtomicBoolean mProcessingCrash -> mProcessingCrash
    com.parse.LogBridge getLogBridge() -> getLogBridge
    void setLogBridge(com.parse.LogBridge) -> setLogBridge
    java.lang.String getUserId() -> getUserId
    void setUserId(java.lang.String) -> setUserId
    java.lang.String putCustomData(java.lang.String,java.lang.String) -> putCustomData
    java.lang.String removeCustomData(java.lang.String) -> removeCustomData
    java.lang.String getCustomData(java.lang.String) -> getCustomData
    void putLazyCustomData(java.lang.String,com.parse.CustomReportDataSupplier) -> putLazyCustomData
    java.lang.String dumpCustomDataToString(java.util.Map,java.lang.Throwable) -> dumpCustomDataToString
    void dumpLazyCustomDataMap(java.lang.StringBuilder,java.util.Map,java.lang.Throwable) -> dumpLazyCustomDataMap
    void dumpCustomDataMap(java.lang.StringBuilder,java.util.Map) -> dumpCustomDataMap
    void dumpCustomDataEntry(java.lang.StringBuilder,java.lang.String,java.lang.String) -> dumpCustomDataEntry
    java.lang.String getProcessNameFromAmsOrNull() -> getProcessNameFromAmsOrNull
    void resetProcessNameByAmsCache() -> resetProcessNameByAmsCache
    java.lang.String getProcessNameFromAms() -> getProcessNameFromAms
    java.lang.String getProcessName() -> getProcessName
    java.lang.String getJailStatus() -> getJailStatus
    long getProcessUptime() -> getProcessUptime
    long getDeviceUptime() -> getDeviceUptime
    com.parse.ErrorReporter getInstance() -> getInstance
    void init(android.content.Context,boolean,com.parse.FileProvider) -> init
    java.lang.String formatTimestamp(long) -> formatTimestamp
    void createPreallocatedReportFile() -> createPreallocatedReportFile
    long getAvailableInternalMemorySize() -> getAvailableInternalMemorySize
    long getTotalInternalMemorySize() -> getTotalInternalMemorySize
    void populateConstantDeviceData(com.parse.CrashReportData,java.io.Writer) -> populateConstantDeviceData
    java.util.Map getConstantDeviceData() -> getConstantDeviceData
    java.lang.String getAndroidRuntime() -> getAndroidRuntime
    void retrieveCrashTimeData(android.content.Context,java.lang.Throwable,com.parse.ReportField[],com.parse.CrashReportData,java.io.Writer) -> retrieveCrashTimeData
    java.lang.String toString(android.view.Display) -> toString
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void writeToLogBridge(java.lang.String,java.lang.String,java.lang.Throwable,java.lang.String) -> writeToLogBridge
    java.lang.String throwableToString(java.lang.Throwable) -> throwableToString
    void gatherCrashData(java.lang.String,java.lang.Throwable,com.parse.ReportField[],com.parse.CrashReportData,java.io.Writer,java.util.Map) -> gatherCrashData
    void put(com.parse.ReportField,java.lang.String,com.parse.CrashReportData,java.io.Writer) -> put
    void writeReportToStream(java.lang.Throwable,java.io.OutputStream) -> writeReportToStream
    com.parse.ErrorReporter$ReportsSenderWorker handleException(java.lang.Throwable) -> handleException
    com.parse.ErrorReporter$ReportsSenderWorker handleException(java.lang.Throwable,java.util.Map) -> handleException
    com.parse.ErrorReporter$ReportsSenderWorker handleExceptionInternal(java.lang.Throwable,java.util.Map,java.lang.String,com.parse.ReportField[],boolean) -> handleExceptionInternal
    com.parse.ErrorReporter$ReportsSenderWorker handleException(java.lang.Throwable,java.lang.String,java.util.Map) -> handleException
    void handleExceptionWithCustomFields(java.lang.Exception,java.util.Map,com.parse.ReportField[]) -> handleExceptionWithCustomFields
    void sendCrashReport(com.parse.CrashReportData) -> sendCrashReport
    java.lang.String genCrashReportFileName(java.lang.Class,java.lang.String) -> genCrashReportFileName
    java.lang.String[] getCrashReportFilesList(java.lang.String,java.lang.String[]) -> getCrashReportFilesList
    void checkAndSendReports(android.content.Context,com.parse.ErrorReporter$CrashReportType[]) -> checkAndSendReports
    void checkAndSendAcraReports(android.content.Context) -> checkAndSendAcraReports
    int checkAndSendCrashAttachments(android.content.Context,com.parse.ErrorReporter$CrashReportType) -> checkAndSendCrashAttachments
    void sendInMemoryReport(android.content.Context,com.parse.CrashReportData) -> sendInMemoryReport
    com.parse.CrashReportData loadAcraCrashReport(android.content.Context,java.lang.String) -> loadAcraCrashReport
    com.parse.CrashReportData loadCrashAttachment(android.content.Context,java.lang.String,com.parse.ErrorReporter$CrashReportType) -> loadCrashAttachment
    com.parse.CrashReportData loadCrashReport(android.content.Context,java.lang.String,com.parse.ErrorReporter$CrashReportType,long) -> loadCrashReport
    void backfillCrashReportData(com.parse.CrashReportData) -> backfillCrashReportData
    java.lang.String parseVersionCodeFromFileName(java.lang.String) -> parseVersionCodeFromFileName
    java.lang.String loadAttachment(java.io.InputStream,int) -> loadAttachment
    java.io.File fileForName(com.parse.FileProvider,java.lang.String,java.lang.String) -> fileForName
    void deleteFile(java.lang.String,java.lang.String) -> deleteFile
    com.parse.ErrorReporter$ReportsSenderWorker checkReportsOnApplicationStart() -> checkReportsOnApplicationStart
    com.parse.ErrorReporter$ReportsSenderWorker checkReportsOfType(com.parse.ErrorReporter$CrashReportType[]) -> checkReportsOfType
    boolean isNativeCrashedOnPreviousRun() -> isNativeCrashedOnPreviousRun
    void addReportSender(com.parse.ReportSender) -> addReportSender
    void removeAllReportSenders() -> removeAllReportSenders
    void setMaxReportSize(long) -> setMaxReportSize
    void setReportSender(com.parse.ReportSender) -> setReportSender
    void registerActivity(java.lang.String) -> registerActivity
    com.parse.ReportField[] getReportFieldsForException(java.lang.Throwable) -> getReportFieldsForException
    java.lang.Throwable getMostSignificantCause(java.lang.Throwable) -> getMostSignificantCause
    boolean shouldContinueProcessingException(java.lang.Throwable) -> shouldContinueProcessingException
    android.content.Context access$000(com.parse.ErrorReporter) -> access$000
com.parse.ErrorReporter$1 -> com.parse.ErrorReporter$1:
    java.lang.String[] val$extensions -> val$extensions
    com.parse.ErrorReporter this$0 -> this$0
    boolean accept(java.io.File,java.lang.String) -> accept
com.parse.ErrorReporter$CrashAttachmentException -> com.parse.ErrorReporter$CrashAttachmentException:
    com.parse.ErrorReporter this$0 -> this$0
com.parse.ErrorReporter$CrashReportType -> com.parse.ErrorReporter$CrashReportType:
    com.parse.ErrorReporter$CrashReportType ACRA_CRASH_REPORT -> ACRA_CRASH_REPORT
    com.parse.ErrorReporter$CrashReportType NATIVE_CRASH_REPORT -> NATIVE_CRASH_REPORT
    com.parse.ErrorReporter$CrashReportType ANR_REPORT -> ANR_REPORT
    java.lang.String directory -> directory
    long defaultMaxSize -> defaultMaxSize
    com.parse.ReportField attachmentField -> attachmentField
    java.lang.String[] fileExtensions -> fileExtensions
    com.parse.ErrorReporter$CrashReportType[] $VALUES -> $VALUES
    com.parse.ErrorReporter$CrashReportType[] values() -> values
    com.parse.ErrorReporter$CrashReportType valueOf(java.lang.String) -> valueOf
    java.lang.String access$100(com.parse.ErrorReporter$CrashReportType) -> access$100
    java.lang.String[] access$200(com.parse.ErrorReporter$CrashReportType) -> access$200
    com.parse.ReportField access$400(com.parse.ErrorReporter$CrashReportType) -> access$400
    long access$500(com.parse.ErrorReporter$CrashReportType) -> access$500
com.parse.ErrorReporter$ReportsSenderWorker -> com.parse.ErrorReporter$ReportsSenderWorker:
    java.lang.Throwable exception -> exception
    com.parse.CrashReportData mInMemoryReportToSend -> mInMemoryReportToSend
    com.parse.ErrorReporter$CrashReportType[] mReportTypesToSend -> mReportTypesToSend
    com.parse.ErrorReporter this$0 -> this$0
    void run() -> run
    java.lang.Throwable getException() -> getException
    android.os.PowerManager$WakeLock acquireWakeLock() -> acquireWakeLock
com.parse.EventuallyPin -> com.parse.EventuallyPin:
    java.lang.String PIN_NAME -> PIN_NAME
    int TYPE_SAVE -> TYPE_SAVE
    int TYPE_DELETE -> TYPE_DELETE
    int TYPE_COMMAND -> TYPE_COMMAND
    boolean needsDefaultACL() -> needsDefaultACL
    java.lang.String getUUID() -> getUUID
    int getType() -> getType
    com.parse.ParseObject getObject() -> getObject
    java.lang.String getOperationSetUUID() -> getOperationSetUUID
    java.lang.String getSessionToken() -> getSessionToken
    com.parse.ParseRESTCommand getCommand() -> getCommand
    bolts.Task pinEventuallyCommand(com.parse.ParseObject,com.parse.ParseRESTCommand) -> pinEventuallyCommand
    bolts.Task pinEventuallyCommand(int,com.parse.ParseObject,java.lang.String,java.lang.String,org.json.JSONObject) -> pinEventuallyCommand
    bolts.Task findAllPinned() -> findAllPinned
    bolts.Task findAllPinned(java.util.Collection) -> findAllPinned
com.parse.EventuallyPin$1 -> com.parse.EventuallyPin$1:
    com.parse.EventuallyPin val$pin -> val$pin
    com.parse.EventuallyPin then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.EventuallyPin$2 -> com.parse.EventuallyPin$2:
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.EventuallyPin$2$1 -> com.parse.EventuallyPin$2$1:
    java.util.List val$pins -> val$pins
    com.parse.EventuallyPin$2 this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.FileObjectStore -> com.parse.FileObjectStore:
    java.lang.String className -> className
    java.io.File file -> file
    com.parse.ParseObjectCurrentCoder coder -> coder
    void saveToDisk(com.parse.ParseObjectCurrentCoder,com.parse.ParseObject,java.io.File) -> saveToDisk
    com.parse.ParseObject getFromDisk(com.parse.ParseObjectCurrentCoder,java.io.File,com.parse.ParseObject$State$Init) -> getFromDisk
    bolts.Task setAsync(com.parse.ParseObject) -> setAsync
    bolts.Task getAsync() -> getAsync
    bolts.Task existsAsync() -> existsAsync
    bolts.Task deleteAsync() -> deleteAsync
    com.parse.ParseObjectCurrentCoder access$000(com.parse.FileObjectStore) -> access$000
    java.io.File access$100(com.parse.FileObjectStore) -> access$100
    void access$200(com.parse.ParseObjectCurrentCoder,com.parse.ParseObject,java.io.File) -> access$200
    java.lang.String access$300(com.parse.FileObjectStore) -> access$300
    com.parse.ParseObject access$400(com.parse.ParseObjectCurrentCoder,java.io.File,com.parse.ParseObject$State$Init) -> access$400
com.parse.FileObjectStore$1 -> com.parse.FileObjectStore$1:
    com.parse.ParseObject val$object -> val$object
    com.parse.FileObjectStore this$0 -> this$0
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.parse.FileObjectStore$2 -> com.parse.FileObjectStore$2:
    com.parse.FileObjectStore this$0 -> this$0
    com.parse.ParseObject call() -> call
    java.lang.Object call() -> call
com.parse.FileObjectStore$3 -> com.parse.FileObjectStore$3:
    com.parse.FileObjectStore this$0 -> this$0
    java.lang.Boolean call() -> call
    java.lang.Object call() -> call
com.parse.FileObjectStore$4 -> com.parse.FileObjectStore$4:
    com.parse.FileObjectStore this$0 -> this$0
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.parse.FileProvider -> com.parse.FileProvider:
    java.io.File getFile(java.lang.String) -> getFile
com.parse.FindCallback -> com.parse.FindCallback:
    void done(java.util.List,com.parse.ParseException) -> done
com.parse.FunctionCallback -> com.parse.FunctionCallback:
    void done(java.lang.Object,com.parse.ParseException) -> done
com.parse.GCMService -> com.parse.GCMService:
    java.lang.String TAG -> TAG
    java.lang.String REGISTER_RESPONSE_ACTION -> REGISTER_RESPONSE_ACTION
    java.lang.String RECEIVE_PUSH_ACTION -> RECEIVE_PUSH_ACTION
    java.lang.ref.WeakReference parent -> parent
    java.util.concurrent.ExecutorService executor -> executor
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void handleGcmRegistrationIntent(android.content.Intent) -> handleGcmRegistrationIntent
    void handleGcmPushIntent(android.content.Intent) -> handleGcmPushIntent
    void stopParent(int) -> stopParent
    void access$000(com.parse.GCMService,android.content.Intent) -> access$000
    void access$100(com.parse.GCMService,int) -> access$100
com.parse.GCMService$1 -> com.parse.GCMService$1:
    android.content.Intent val$intent -> val$intent
    int val$startId -> val$startId
    com.parse.GCMService this$0 -> this$0
    void run() -> run
com.parse.GcmBroadcastReceiver -> com.parse.GcmBroadcastReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.parse.GcmRegistrar -> com.parse.GcmRegistrar:
    java.lang.String TAG -> TAG
    java.lang.String REGISTRATION_ID_EXTRA -> REGISTRATION_ID_EXTRA
    java.lang.String ERROR_EXTRA -> ERROR_EXTRA
    java.lang.String PARSE_SENDER_ID -> PARSE_SENDER_ID
    java.lang.String SENDER_ID_EXTRA -> SENDER_ID_EXTRA
    java.lang.String REGISTER_ACTION -> REGISTER_ACTION
    java.lang.String FILENAME_DEVICE_TOKEN_LAST_MODIFIED -> FILENAME_DEVICE_TOKEN_LAST_MODIFIED
    long localDeviceTokenLastModified -> localDeviceTokenLastModified
    java.lang.Object localDeviceTokenLastModifiedMutex -> localDeviceTokenLastModifiedMutex
    java.lang.Object lock -> lock
    com.parse.GcmRegistrar$Request request -> request
    android.content.Context context -> context
    com.parse.GcmRegistrar getInstance() -> getInstance
    java.lang.String actualSenderIDFromExtra(java.lang.Object) -> actualSenderIDFromExtra
    bolts.Task registerAsync() -> registerAsync
    bolts.Task sendRegistrationRequestAsync() -> sendRegistrationRequestAsync
    bolts.Task handleRegistrationIntentAsync(android.content.Intent) -> handleRegistrationIntentAsync
    int getRequestIdentifier() -> getRequestIdentifier
    bolts.Task isLocalDeviceTokenStaleAsync() -> isLocalDeviceTokenStaleAsync
    bolts.Task updateLocalDeviceTokenLastModifiedAsync() -> updateLocalDeviceTokenLastModifiedAsync
    bolts.Task getLocalDeviceTokenLastModifiedAsync() -> getLocalDeviceTokenLastModifiedAsync
    java.io.File getLocalDeviceTokenLastModifiedFile() -> getLocalDeviceTokenLastModifiedFile
    void deleteLocalDeviceTokenLastModifiedFile() -> deleteLocalDeviceTokenLastModifiedFile
    bolts.Task access$000(com.parse.GcmRegistrar) -> access$000
    java.lang.Object access$100(com.parse.GcmRegistrar) -> access$100
    com.parse.GcmRegistrar$Request access$202(com.parse.GcmRegistrar,com.parse.GcmRegistrar$Request) -> access$202
    java.lang.Object access$400(com.parse.GcmRegistrar) -> access$400
    long access$502(com.parse.GcmRegistrar,long) -> access$502
    long access$500(com.parse.GcmRegistrar) -> access$500
com.parse.GcmRegistrar$1 -> com.parse.GcmRegistrar$1:
    com.parse.ParseInstallation val$installation -> val$installation
    com.parse.GcmRegistrar this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.GcmRegistrar$2 -> com.parse.GcmRegistrar$2:
    com.parse.GcmRegistrar this$0 -> this$0
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.GcmRegistrar$3 -> com.parse.GcmRegistrar$3:
    com.parse.GcmRegistrar this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.GcmRegistrar$4 -> com.parse.GcmRegistrar$4:
    com.parse.GcmRegistrar this$0 -> this$0
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.parse.GcmRegistrar$5 -> com.parse.GcmRegistrar$5:
    com.parse.GcmRegistrar this$0 -> this$0
    java.lang.Long call() -> call
    java.lang.Object call() -> call
com.parse.GcmRegistrar$Request -> com.parse.GcmRegistrar$Request:
    java.lang.String RETRY_ACTION -> RETRY_ACTION
    int MAX_RETRIES -> MAX_RETRIES
    int BACKOFF_INTERVAL_MS -> BACKOFF_INTERVAL_MS
    android.content.Context context -> context
    java.lang.String senderId -> senderId
    java.util.Random random -> random
    int identifier -> identifier
    bolts.Task$TaskCompletionSource tcs -> tcs
    android.app.PendingIntent appIntent -> appIntent
    java.util.concurrent.atomic.AtomicInteger tries -> tries
    android.app.PendingIntent retryIntent -> retryIntent
    android.content.BroadcastReceiver retryReceiver -> retryReceiver
    com.parse.GcmRegistrar$Request createAndSend(android.content.Context,java.lang.String) -> createAndSend
    bolts.Task getTask() -> getTask
    void send() -> send
    void onReceiveResponseIntent(android.content.Intent) -> onReceiveResponseIntent
    void finish(java.lang.String,java.lang.String) -> finish
    int access$300(com.parse.GcmRegistrar$Request) -> access$300
    void access$600(com.parse.GcmRegistrar$Request) -> access$600
com.parse.GcmRegistrar$Request$1 -> com.parse.GcmRegistrar$Request$1:
    com.parse.GcmRegistrar$Request this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.parse.GcmRegistrar$Singleton -> com.parse.GcmRegistrar$Singleton:
    com.parse.GcmRegistrar INSTANCE -> INSTANCE
com.parse.GetCallback -> com.parse.GetCallback:
    void done(com.parse.ParseObject,com.parse.ParseException) -> done
com.parse.GetDataCallback -> com.parse.GetDataCallback:
    void done(byte[],com.parse.ParseException) -> done
com.parse.HttpConnectionProvider -> com.parse.HttpConnectionProvider:
    java.net.HttpURLConnection getConnection(java.net.URL) -> getConnection
com.parse.HttpPostSender -> com.parse.HttpPostSender:
    android.net.Uri mFormUri -> mFormUri
    void send(com.parse.CrashReportData) -> send
    java.util.Map remap(java.util.Map) -> remap
com.parse.HttpRequest -> com.parse.HttpRequest:
    com.parse.HttpConnectionProvider mConnectionProvider -> mConnectionProvider
    java.lang.String POST_CONTENT_TYPE_FORM_URLENCODED -> POST_CONTENT_TYPE_FORM_URLENCODED
    java.lang.String POST_CONTENT_TYPE_JSON -> POST_CONTENT_TYPE_JSON
    void sendPost(java.net.URL,java.lang.String,com.parse.ACRAResponse) -> sendPost
    void sendPost(java.net.URL,java.lang.String,com.parse.ACRAResponse,java.lang.String) -> sendPost
com.parse.HttpUtils -> com.parse.HttpUtils:
    void doPost(java.util.Map,java.net.URL) -> doPost
    void doPost(java.util.Map,java.net.URL,java.lang.String) -> doPost
    java.lang.String encodeParametersFormUrlEncoded(java.util.Map) -> encodeParametersFormUrlEncoded
    java.lang.String encodeParametersJson(java.util.Map) -> encodeParametersJson
com.parse.Installation -> com.parse.Installation:
    java.lang.String sID -> sID
    java.lang.String INSTALLATION -> INSTALLATION
    java.lang.String id(com.parse.FileProvider) -> id
    java.lang.String readInstallationFile(java.io.File) -> readInstallationFile
    void writeInstallationFile(java.io.File) -> writeInstallationFile
com.parse.InstallationId -> com.parse.InstallationId:
    java.lang.String TAG -> TAG
    java.lang.Object lock -> lock
    java.io.File file -> file
    java.lang.String installationId -> installationId
    java.lang.String get() -> get
    void set(java.lang.String) -> set
    void setInternal(java.lang.String) -> setInternal
    void clear() -> clear
com.parse.KnownParseObjectDecoder -> com.parse.KnownParseObjectDecoder:
    java.util.Map fetchedObjects -> fetchedObjects
    com.parse.ParseObject decodePointer(java.lang.String,java.lang.String) -> decodePointer
com.parse.Lists -> com.parse.Lists:
    java.util.List partition(java.util.List,int) -> partition
com.parse.Lists$Partition -> com.parse.Lists$Partition:
    java.util.List list -> list
    int size -> size
    java.util.List get(int) -> get
    int size() -> size
    java.lang.Object get(int) -> get
com.parse.LocalIdManager -> com.parse.LocalIdManager:
    java.io.File diskPath -> diskPath
    java.util.Random random -> random
    boolean isLocalId(java.lang.String) -> isLocalId
    com.parse.LocalIdManager$MapEntry getMapEntry(java.lang.String) -> getMapEntry
    void putMapEntry(java.lang.String,com.parse.LocalIdManager$MapEntry) -> putMapEntry
    void removeMapEntry(java.lang.String) -> removeMapEntry
    java.lang.String createLocalId() -> createLocalId
    void retainLocalIdOnDisk(java.lang.String) -> retainLocalIdOnDisk
    void releaseLocalIdOnDisk(java.lang.String) -> releaseLocalIdOnDisk
    java.lang.String getObjectId(java.lang.String) -> getObjectId
    void setObjectId(java.lang.String,java.lang.String) -> setObjectId
    boolean clear() -> clear
com.parse.LocalIdManager$1 -> com.parse.LocalIdManager$1:
com.parse.LocalIdManager$MapEntry -> com.parse.LocalIdManager$MapEntry:
    java.lang.String objectId -> objectId
    int retainCount -> retainCount
com.parse.LocationCallback -> com.parse.LocationCallback:
    void done(com.parse.ParseGeoPoint,com.parse.ParseException) -> done
com.parse.LocationNotifier -> com.parse.LocationNotifier:
    android.location.Location fakeLocation -> fakeLocation
    bolts.Task getCurrentLocationAsync(android.content.Context,long,android.location.Criteria) -> getCurrentLocationAsync
    void setFakeLocation(android.location.Location) -> setFakeLocation
com.parse.LocationNotifier$1 -> com.parse.LocationNotifier$1:
    bolts.Capture val$timeoutFuture -> val$timeoutFuture
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    android.location.LocationManager val$manager -> val$manager
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.parse.LocationNotifier$2 -> com.parse.LocationNotifier$2:
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    android.location.LocationManager val$manager -> val$manager
    android.location.LocationListener val$listener -> val$listener
    void run() -> run
com.parse.LockSet -> com.parse.LockSet:
    java.util.WeakHashMap stableIds -> stableIds
    long nextStableId -> nextStableId
    java.util.Set locks -> locks
    java.lang.Long getStableId(java.util.concurrent.locks.Lock) -> getStableId
    void lock() -> lock
    void unlock() -> unlock
    java.lang.Long access$000(java.util.concurrent.locks.Lock) -> access$000
com.parse.LockSet$1 -> com.parse.LockSet$1:
    com.parse.LockSet this$0 -> this$0
    int compare(java.util.concurrent.locks.Lock,java.util.concurrent.locks.Lock) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.parse.LogBridge -> com.parse.LogBridge:
    void log(java.lang.String,java.lang.String,java.lang.Throwable) -> log
com.parse.LogCatCollector -> com.parse.LogCatCollector:
    int DEFAULT_TAIL_COUNT -> DEFAULT_TAIL_COUNT
    java.lang.String collectLogCat(java.lang.String) -> collectLogCat
com.parse.LogInCallback -> com.parse.LogInCallback:
    void done(com.parse.ParseUser,com.parse.ParseException) -> done
com.parse.LogOutCallback -> com.parse.LogOutCallback:
    void done(com.parse.ParseException) -> done
com.parse.ManifestInfo -> com.parse.ManifestInfo:
    java.lang.String TAG -> TAG
    int NUMBER_OF_PUSH_INTENTS -> NUMBER_OF_PUSH_INTENTS
    java.lang.Object lock -> lock
    long lastModified -> lastModified
    int versionCode -> versionCode
    java.lang.String versionName -> versionName
    int iconId -> iconId
    java.lang.String displayName -> displayName
    com.parse.PushType pushType -> pushType
    long getLastModified() -> getLastModified
    int getVersionCode() -> getVersionCode
    java.lang.String getVersionName() -> getVersionName
    java.lang.String getDisplayName(android.content.Context) -> getDisplayName
    int getIconId() -> getIconId
    boolean hasIntentReceiver(java.lang.String) -> hasIntentReceiver
    java.util.List getIntentReceivers(java.lang.String[]) -> getIntentReceivers
    boolean usesPushBroadcastReceivers() -> usesPushBroadcastReceivers
    void setPushType(com.parse.PushType) -> setPushType
    com.parse.PushType getPushType() -> getPushType
    java.lang.String getNonePushTypeLogMessage() -> getNonePushTypeLogMessage
    android.content.Context getContext() -> getContext
    android.content.pm.PackageManager getPackageManager() -> getPackageManager
    android.content.pm.ApplicationInfo getApplicationInfo(android.content.Context,int) -> getApplicationInfo
    android.os.Bundle getApplicationMetadata(android.content.Context) -> getApplicationMetadata
    android.content.pm.PackageInfo getPackageInfo(java.lang.String) -> getPackageInfo
    android.content.pm.ServiceInfo getServiceInfo(java.lang.Class) -> getServiceInfo
    android.content.pm.ActivityInfo getReceiverInfo(java.lang.Class) -> getReceiverInfo
    boolean hasRequestedPermissions(android.content.Context,java.lang.String[]) -> hasRequestedPermissions
    boolean hasGrantedPermissions(android.content.Context,java.lang.String[]) -> hasGrantedPermissions
    boolean checkResolveInfo(java.lang.Class,java.util.List) -> checkResolveInfo
    boolean checkReceiver(java.lang.Class,java.lang.String,android.content.Intent[]) -> checkReceiver
    boolean hasAnyGcmSpecificDeclaration() -> hasAnyGcmSpecificDeclaration
    boolean isGooglePlayServicesAvailable() -> isGooglePlayServicesAvailable
    com.parse.ManifestInfo$ManifestCheckResult gcmSupportLevel() -> gcmSupportLevel
    com.parse.ManifestInfo$ManifestCheckResult ppnsSupportLevel() -> ppnsSupportLevel
    java.lang.String getGcmManifestMessage() -> getGcmManifestMessage
    java.lang.String getPpnsManifestMessage() -> getPpnsManifestMessage
com.parse.ManifestInfo$ManifestCheckResult -> com.parse.ManifestInfo$ManifestCheckResult:
    com.parse.ManifestInfo$ManifestCheckResult HAS_ALL_DECLARATIONS -> HAS_ALL_DECLARATIONS
    com.parse.ManifestInfo$ManifestCheckResult MISSING_OPTIONAL_DECLARATIONS -> MISSING_OPTIONAL_DECLARATIONS
    com.parse.ManifestInfo$ManifestCheckResult MISSING_REQUIRED_DECLARATIONS -> MISSING_REQUIRED_DECLARATIONS
    com.parse.ManifestInfo$ManifestCheckResult[] $VALUES -> $VALUES
    com.parse.ManifestInfo$ManifestCheckResult[] values() -> values
    com.parse.ManifestInfo$ManifestCheckResult valueOf(java.lang.String) -> valueOf
com.parse.NetworkObjectController -> com.parse.NetworkObjectController:
    com.parse.ParseHttpClient client -> client
    com.parse.ParseObjectCoder coder -> coder
    bolts.Task fetchAsync(com.parse.ParseObject$State,java.lang.String,com.parse.ParseDecoder) -> fetchAsync
    bolts.Task saveAsync(com.parse.ParseObject$State,com.parse.ParseOperationSet,java.lang.String,com.parse.ParseDecoder) -> saveAsync
    java.util.List saveAllAsync(java.util.List,java.util.List,java.lang.String,java.util.List) -> saveAllAsync
    bolts.Task deleteAsync(com.parse.ParseObject$State,java.lang.String) -> deleteAsync
    java.util.List deleteAllAsync(java.util.List,java.lang.String) -> deleteAllAsync
    com.parse.ParseObjectCoder access$000(com.parse.NetworkObjectController) -> access$000
com.parse.NetworkObjectController$1 -> com.parse.NetworkObjectController$1:
    com.parse.ParseObject$State val$state -> val$state
    com.parse.ParseDecoder val$decoder -> val$decoder
    com.parse.NetworkObjectController this$0 -> this$0
    com.parse.ParseObject$State then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.NetworkObjectController$2 -> com.parse.NetworkObjectController$2:
    com.parse.ParseObject$State val$state -> val$state
    com.parse.ParseDecoder val$decoder -> val$decoder
    com.parse.NetworkObjectController this$0 -> this$0
    com.parse.ParseObject$State then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.NetworkObjectController$3 -> com.parse.NetworkObjectController$3:
    com.parse.ParseObject$State val$state -> val$state
    com.parse.ParseDecoder val$decoder -> val$decoder
    com.parse.NetworkObjectController this$0 -> this$0
    com.parse.ParseObject$State then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.NetworkQueryController -> com.parse.NetworkQueryController:
    java.lang.String TAG -> TAG
    com.parse.ParseHttpClient restClient -> restClient
    bolts.Task findAsync(com.parse.ParseQuery$State,com.parse.ParseUser,bolts.Task) -> findAsync
    bolts.Task countAsync(com.parse.ParseQuery$State,com.parse.ParseUser,bolts.Task) -> countAsync
    bolts.Task findAsync(com.parse.ParseQuery$State,java.lang.String,boolean,bolts.Task) -> findAsync
    bolts.Task countAsync(com.parse.ParseQuery$State,java.lang.String,boolean,bolts.Task) -> countAsync
    java.util.List convertFindResponse(com.parse.ParseQuery$State,org.json.JSONObject) -> convertFindResponse
com.parse.NetworkQueryController$1 -> com.parse.NetworkQueryController$1:
    com.parse.ParseQuery$State val$state -> val$state
    com.parse.ParseRESTCommand val$command -> val$command
    long val$querySent -> val$querySent
    long val$queryStart -> val$queryStart
    com.parse.NetworkQueryController this$0 -> this$0
    java.util.List then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.NetworkQueryController$2 -> com.parse.NetworkQueryController$2:
    com.parse.NetworkQueryController this$0 -> this$0
    java.lang.Integer then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.NetworkQueryController$3 -> com.parse.NetworkQueryController$3:
    com.parse.ParseQuery$State val$state -> val$state
    com.parse.ParseRESTCommand val$command -> val$command
    com.parse.NetworkQueryController this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.NetworkSessionController -> com.parse.NetworkSessionController:
    com.parse.ParseHttpClient client -> client
    com.parse.ParseObjectCoder coder -> coder
    bolts.Task getSessionAsync(java.lang.String) -> getSessionAsync
    bolts.Task revokeAsync(java.lang.String) -> revokeAsync
    bolts.Task upgradeToRevocable(java.lang.String) -> upgradeToRevocable
    com.parse.ParseObjectCoder access$000(com.parse.NetworkSessionController) -> access$000
com.parse.NetworkSessionController$1 -> com.parse.NetworkSessionController$1:
    com.parse.NetworkSessionController this$0 -> this$0
    com.parse.ParseObject$State then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.NetworkSessionController$2 -> com.parse.NetworkSessionController$2:
    com.parse.NetworkSessionController this$0 -> this$0
    com.parse.ParseObject$State then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.NetworkUserController -> com.parse.NetworkUserController:
    int STATUS_CODE_CREATED -> STATUS_CODE_CREATED
    com.parse.ParseHttpClient client -> client
    com.parse.ParseObjectCoder coder -> coder
    boolean revocableSession -> revocableSession
    bolts.Task signUpAsync(com.parse.ParseObject$State,com.parse.ParseOperationSet,java.lang.String) -> signUpAsync
    bolts.Task logInAsync(java.lang.String,java.lang.String) -> logInAsync
    bolts.Task logInAsync(com.parse.ParseUser$State,com.parse.ParseOperationSet) -> logInAsync
    bolts.Task logInAsync(java.lang.String,java.util.Map) -> logInAsync
    bolts.Task getUserAsync(java.lang.String) -> getUserAsync
    bolts.Task requestPasswordResetAsync(java.lang.String) -> requestPasswordResetAsync
    com.parse.ParseObjectCoder access$000(com.parse.NetworkUserController) -> access$000
com.parse.NetworkUserController$1 -> com.parse.NetworkUserController$1:
    com.parse.NetworkUserController this$0 -> this$0
    com.parse.ParseUser$State then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.NetworkUserController$2 -> com.parse.NetworkUserController$2:
    com.parse.NetworkUserController this$0 -> this$0
    com.parse.ParseUser$State then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.NetworkUserController$3 -> com.parse.NetworkUserController$3:
    com.parse.ParseRESTUserCommand val$command -> val$command
    com.parse.NetworkUserController this$0 -> this$0
    com.parse.ParseUser$State then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.NetworkUserController$4 -> com.parse.NetworkUserController$4:
    com.parse.ParseRESTUserCommand val$command -> val$command
    java.lang.String val$authType -> val$authType
    java.util.Map val$authData -> val$authData
    com.parse.NetworkUserController this$0 -> this$0
    com.parse.ParseUser$State then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.NetworkUserController$5 -> com.parse.NetworkUserController$5:
    com.parse.NetworkUserController this$0 -> this$0
    com.parse.ParseUser$State then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.NoObjectsEncoder -> com.parse.NoObjectsEncoder:
    com.parse.NoObjectsEncoder INSTANCE -> INSTANCE
    com.parse.NoObjectsEncoder get() -> get
    org.json.JSONObject encodeRelatedObject(com.parse.ParseObject) -> encodeRelatedObject
com.parse.NonCrashException -> com.parse.NonCrashException:
    java.lang.String getExceptionFriendlyName() -> getExceptionFriendlyName
com.parse.NotificationCompat -> com.parse.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    com.parse.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    com.parse.NotificationCompat$NotificationCompatImpl access$000() -> access$000
com.parse.NotificationCompat$Builder -> com.parse.NotificationCompat$Builder:
    int MAX_CHARSEQUENCE_LENGTH -> MAX_CHARSEQUENCE_LENGTH
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    int mPriority -> mPriority
    com.parse.NotificationCompat$Builder$Style mStyle -> mStyle
    android.app.Notification mNotification -> mNotification
    com.parse.NotificationCompat$Builder setWhen(long) -> setWhen
    com.parse.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    com.parse.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    com.parse.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    com.parse.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    com.parse.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    com.parse.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    com.parse.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    com.parse.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    com.parse.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    com.parse.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    com.parse.NotificationCompat$Builder setPriority(int) -> setPriority
    com.parse.NotificationCompat$Builder setStyle(com.parse.NotificationCompat$Builder$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
    java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> limitCharSequenceLength
com.parse.NotificationCompat$Builder$BigTextStyle -> com.parse.NotificationCompat$Builder$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    com.parse.NotificationCompat$Builder$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    com.parse.NotificationCompat$Builder$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    com.parse.NotificationCompat$Builder$BigTextStyle bigText(java.lang.CharSequence) -> bigText
com.parse.NotificationCompat$Builder$Style -> com.parse.NotificationCompat$Builder$Style:
    com.parse.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(com.parse.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
com.parse.NotificationCompat$NotificationCompatImpl -> com.parse.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(com.parse.NotificationCompat$Builder) -> build
com.parse.NotificationCompat$NotificationCompatImplBase -> com.parse.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(com.parse.NotificationCompat$Builder) -> build
com.parse.NotificationCompat$NotificationCompatPostJellyBean -> com.parse.NotificationCompat$NotificationCompatPostJellyBean:
    android.app.Notification$Builder postJellyBeanBuilder -> postJellyBeanBuilder
    android.app.Notification build(com.parse.NotificationCompat$Builder) -> build
com.parse.Numbers -> com.parse.Numbers:
    java.lang.Number add(java.lang.Number,java.lang.Number) -> add
    java.lang.Number subtract(java.lang.Number,java.lang.Number) -> subtract
    int compare(java.lang.Number,java.lang.Number) -> compare
com.parse.OfflineObjectStore -> com.parse.OfflineObjectStore:
    java.lang.String className -> className
    java.lang.String pinName -> pinName
    com.parse.ParseObjectStore legacy -> legacy
    bolts.Task migrate(com.parse.ParseObjectStore,com.parse.ParseObjectStore) -> migrate
    bolts.Task setAsync(com.parse.ParseObject) -> setAsync
    bolts.Task getAsync() -> getAsync
    bolts.Task existsAsync() -> existsAsync
    bolts.Task deleteAsync() -> deleteAsync
    java.lang.String access$000(com.parse.OfflineObjectStore) -> access$000
    com.parse.ParseObjectStore access$100(com.parse.OfflineObjectStore) -> access$100
    bolts.Task access$200(com.parse.ParseObjectStore,com.parse.ParseObjectStore) -> access$200
com.parse.OfflineObjectStore$1 -> com.parse.OfflineObjectStore$1:
    com.parse.ParseObjectStore val$from -> val$from
    com.parse.ParseObjectStore val$to -> val$to
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineObjectStore$1$1 -> com.parse.OfflineObjectStore$1$1:
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineObjectStore$1 this$0 -> this$0
    com.parse.ParseObject then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineObjectStore$2 -> com.parse.OfflineObjectStore$2:
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineObjectStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineObjectStore$3 -> com.parse.OfflineObjectStore$3:
    com.parse.OfflineObjectStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineObjectStore$4 -> com.parse.OfflineObjectStore$4:
    com.parse.OfflineObjectStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineObjectStore$5 -> com.parse.OfflineObjectStore$5:
    com.parse.OfflineObjectStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineObjectStore$6 -> com.parse.OfflineObjectStore$6:
    bolts.Task val$ldsTask -> val$ldsTask
    com.parse.OfflineObjectStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineQueryController -> com.parse.OfflineQueryController:
    com.parse.OfflineStore offlineStore -> offlineStore
    com.parse.ParseQueryController networkController -> networkController
    bolts.Task findAsync(com.parse.ParseQuery$State,com.parse.ParseUser,bolts.Task) -> findAsync
    bolts.Task countAsync(com.parse.ParseQuery$State,com.parse.ParseUser,bolts.Task) -> countAsync
com.parse.OfflineQueryLogic -> com.parse.OfflineQueryLogic:
    com.parse.OfflineStore store -> store
    java.lang.Object getValue(java.lang.Object,java.lang.String) -> getValue
    java.lang.Object getValue(java.lang.Object,java.lang.String,int) -> getValue
    int compareTo(java.lang.Object,java.lang.Object) -> compareTo
    boolean compareList(java.lang.Object,java.util.List,com.parse.OfflineQueryLogic$Decider) -> compareList
    boolean compareArray(java.lang.Object,org.json.JSONArray,com.parse.OfflineQueryLogic$Decider) -> compareArray
    boolean compare(java.lang.Object,java.lang.Object,com.parse.OfflineQueryLogic$Decider) -> compare
    boolean matchesEqualConstraint(java.lang.Object,java.lang.Object) -> matchesEqualConstraint
    boolean matchesNotEqualConstraint(java.lang.Object,java.lang.Object) -> matchesNotEqualConstraint
    boolean matchesLessThanConstraint(java.lang.Object,java.lang.Object) -> matchesLessThanConstraint
    boolean matchesLessThanOrEqualToConstraint(java.lang.Object,java.lang.Object) -> matchesLessThanOrEqualToConstraint
    boolean matchesGreaterThanConstraint(java.lang.Object,java.lang.Object) -> matchesGreaterThanConstraint
    boolean matchesGreaterThanOrEqualToConstraint(java.lang.Object,java.lang.Object) -> matchesGreaterThanOrEqualToConstraint
    boolean matchesInConstraint(java.lang.Object,java.lang.Object) -> matchesInConstraint
    boolean matchesNotInConstraint(java.lang.Object,java.lang.Object) -> matchesNotInConstraint
    boolean matchesAllConstraint(java.lang.Object,java.lang.Object) -> matchesAllConstraint
    boolean matchesRegexConstraint(java.lang.Object,java.lang.Object,java.lang.String) -> matchesRegexConstraint
    boolean matchesExistsConstraint(java.lang.Object,java.lang.Object) -> matchesExistsConstraint
    boolean matchesNearSphereConstraint(java.lang.Object,java.lang.Object,java.lang.Double) -> matchesNearSphereConstraint
    boolean matchesWithinConstraint(java.lang.Object,java.lang.Object) -> matchesWithinConstraint
    boolean matchesStatelessConstraint(java.lang.String,java.lang.Object,java.lang.Object,com.parse.ParseQuery$KeyConstraints) -> matchesStatelessConstraint
    com.parse.OfflineQueryLogic$ConstraintMatcher createInQueryMatcher(com.parse.ParseUser,java.lang.Object,java.lang.String) -> createInQueryMatcher
    com.parse.OfflineQueryLogic$ConstraintMatcher createNotInQueryMatcher(com.parse.ParseUser,java.lang.Object,java.lang.String) -> createNotInQueryMatcher
    com.parse.OfflineQueryLogic$ConstraintMatcher createSelectMatcher(com.parse.ParseUser,java.lang.Object,java.lang.String) -> createSelectMatcher
    com.parse.OfflineQueryLogic$ConstraintMatcher createDontSelectMatcher(com.parse.ParseUser,java.lang.Object,java.lang.String) -> createDontSelectMatcher
    com.parse.OfflineQueryLogic$ConstraintMatcher createMatcher(com.parse.ParseUser,java.lang.String,java.lang.Object,java.lang.String,com.parse.ParseQuery$KeyConstraints) -> createMatcher
    com.parse.OfflineQueryLogic$ConstraintMatcher createOrMatcher(com.parse.ParseUser,java.util.ArrayList) -> createOrMatcher
    com.parse.OfflineQueryLogic$ConstraintMatcher createMatcher(com.parse.ParseUser,com.parse.ParseQuery$QueryConstraints) -> createMatcher
    boolean hasReadAccess(com.parse.ParseUser,com.parse.ParseObject) -> hasReadAccess
    boolean hasWriteAccess(com.parse.ParseUser,com.parse.ParseObject) -> hasWriteAccess
    com.parse.OfflineQueryLogic$ConstraintMatcher createMatcher(com.parse.ParseQuery$State,com.parse.ParseUser) -> createMatcher
    void sort(java.util.List,com.parse.ParseQuery$State) -> sort
    bolts.Task fetchIncludeAsync(java.lang.Object,java.lang.String,com.parse.ParseSQLiteDatabase) -> fetchIncludeAsync
    bolts.Task fetchIncludesAsync(com.parse.ParseObject,com.parse.ParseQuery$State,com.parse.ParseSQLiteDatabase) -> fetchIncludesAsync
    int access$000(java.lang.Object,java.lang.Object) -> access$000
    com.parse.OfflineStore access$100(com.parse.OfflineQueryLogic) -> access$100
    java.lang.Object access$200(java.lang.Object,java.lang.String) -> access$200
    boolean access$300(java.lang.Object,java.lang.Object) -> access$300
    boolean access$400(java.lang.Object,java.lang.Object) -> access$400
    boolean access$500(java.lang.String,java.lang.Object,java.lang.Object,com.parse.ParseQuery$KeyConstraints) -> access$500
    bolts.Task access$600(com.parse.OfflineQueryLogic,java.lang.Object,java.lang.String,com.parse.ParseSQLiteDatabase) -> access$600
com.parse.OfflineQueryLogic$1 -> com.parse.OfflineQueryLogic$1:
    boolean decide(java.lang.Object,java.lang.Object) -> decide
com.parse.OfflineQueryLogic$10 -> com.parse.OfflineQueryLogic$10:
    java.lang.String val$key -> val$key
    java.lang.String val$operator -> val$operator
    java.lang.Object val$constraint -> val$constraint
    com.parse.ParseQuery$KeyConstraints val$allKeyConstraints -> val$allKeyConstraints
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task matchesAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> matchesAsync
com.parse.OfflineQueryLogic$11 -> com.parse.OfflineQueryLogic$11:
    java.util.ArrayList val$matchers -> val$matchers
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task matchesAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> matchesAsync
com.parse.OfflineQueryLogic$11$1 -> com.parse.OfflineQueryLogic$11$1:
    com.parse.OfflineQueryLogic$ConstraintMatcher val$matcher -> val$matcher
    com.parse.ParseObject val$object -> val$object
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineQueryLogic$11 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineQueryLogic$12 -> com.parse.OfflineQueryLogic$12:
    com.parse.ParseQuery$RelationConstraint val$relation -> val$relation
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task matchesAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> matchesAsync
com.parse.OfflineQueryLogic$13 -> com.parse.OfflineQueryLogic$13:
    java.lang.String val$key -> val$key
    java.lang.Object val$queryConstraintValue -> val$queryConstraintValue
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task matchesAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> matchesAsync
com.parse.OfflineQueryLogic$14 -> com.parse.OfflineQueryLogic$14:
    java.util.ArrayList val$matchers -> val$matchers
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task matchesAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> matchesAsync
com.parse.OfflineQueryLogic$14$1 -> com.parse.OfflineQueryLogic$14$1:
    com.parse.OfflineQueryLogic$ConstraintMatcher val$matcher -> val$matcher
    com.parse.ParseObject val$object -> val$object
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineQueryLogic$14 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineQueryLogic$15 -> com.parse.OfflineQueryLogic$15:
    boolean val$ignoreACLs -> val$ignoreACLs
    com.parse.OfflineQueryLogic$ConstraintMatcher val$constraintMatcher -> val$constraintMatcher
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task matchesAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> matchesAsync
com.parse.OfflineQueryLogic$16 -> com.parse.OfflineQueryLogic$16:
    java.lang.String val$nearSphereKey -> val$nearSphereKey
    com.parse.ParseGeoPoint val$nearSphereValue -> val$nearSphereValue
    java.util.List val$keys -> val$keys
    int compare(com.parse.ParseObject,com.parse.ParseObject) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.parse.OfflineQueryLogic$17 -> com.parse.OfflineQueryLogic$17:
    java.lang.Object val$item -> val$item
    java.lang.String val$path -> val$path
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineQueryLogic$18 -> com.parse.OfflineQueryLogic$18:
    org.json.JSONArray val$array -> val$array
    int val$index -> val$index
    java.lang.String val$path -> val$path
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineQueryLogic$19 -> com.parse.OfflineQueryLogic$19:
    java.lang.String val$rest -> val$rest
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineQueryLogic$2 -> com.parse.OfflineQueryLogic$2:
    boolean decide(java.lang.Object,java.lang.Object) -> decide
com.parse.OfflineQueryLogic$20 -> com.parse.OfflineQueryLogic$20:
    java.lang.Object val$container -> val$container
    com.parse.ParseSQLiteDatabase val$db -> val$db
    java.lang.String val$key -> val$key
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineQueryLogic$20$1 -> com.parse.OfflineQueryLogic$20$1:
    com.parse.OfflineQueryLogic$20 this$1 -> this$1
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineQueryLogic$21 -> com.parse.OfflineQueryLogic$21:
    com.parse.ParseObject val$object -> val$object
    java.lang.String val$include -> val$include
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineQueryLogic$3 -> com.parse.OfflineQueryLogic$3:
    boolean decide(java.lang.Object,java.lang.Object) -> decide
com.parse.OfflineQueryLogic$4 -> com.parse.OfflineQueryLogic$4:
    boolean decide(java.lang.Object,java.lang.Object) -> decide
com.parse.OfflineQueryLogic$5 -> com.parse.OfflineQueryLogic$5:
    boolean decide(java.lang.Object,java.lang.Object) -> decide
com.parse.OfflineQueryLogic$6 -> com.parse.OfflineQueryLogic$6:
    java.lang.String val$key -> val$key
    com.parse.OfflineQueryLogic this$0 -> this$0
    boolean matches(com.parse.ParseObject,java.util.List) -> matches
com.parse.OfflineQueryLogic$7 -> com.parse.OfflineQueryLogic$7:
    com.parse.OfflineQueryLogic$ConstraintMatcher val$inQueryMatcher -> val$inQueryMatcher
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task matchesAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> matchesAsync
com.parse.OfflineQueryLogic$7$1 -> com.parse.OfflineQueryLogic$7$1:
    com.parse.OfflineQueryLogic$7 this$1 -> this$1
    java.lang.Boolean then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineQueryLogic$8 -> com.parse.OfflineQueryLogic$8:
    java.lang.String val$key -> val$key
    java.lang.String val$resultKey -> val$resultKey
    com.parse.OfflineQueryLogic this$0 -> this$0
    boolean matches(com.parse.ParseObject,java.util.List) -> matches
com.parse.OfflineQueryLogic$9 -> com.parse.OfflineQueryLogic$9:
    com.parse.OfflineQueryLogic$ConstraintMatcher val$selectMatcher -> val$selectMatcher
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task matchesAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> matchesAsync
com.parse.OfflineQueryLogic$9$1 -> com.parse.OfflineQueryLogic$9$1:
    com.parse.OfflineQueryLogic$9 this$1 -> this$1
    java.lang.Boolean then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineQueryLogic$ConstraintMatcher -> com.parse.OfflineQueryLogic$ConstraintMatcher:
    com.parse.ParseUser user -> user
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task matchesAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> matchesAsync
com.parse.OfflineQueryLogic$Decider -> com.parse.OfflineQueryLogic$Decider:
    boolean decide(java.lang.Object,java.lang.Object) -> decide
com.parse.OfflineQueryLogic$SubQueryMatcher -> com.parse.OfflineQueryLogic$SubQueryMatcher:
    com.parse.ParseQuery$State subQuery -> subQuery
    bolts.Task subQueryResults -> subQueryResults
    com.parse.OfflineQueryLogic this$0 -> this$0
    bolts.Task matchesAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> matchesAsync
    boolean matches(com.parse.ParseObject,java.util.List) -> matches
com.parse.OfflineQueryLogic$SubQueryMatcher$1 -> com.parse.OfflineQueryLogic$SubQueryMatcher$1:
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineQueryLogic$SubQueryMatcher this$1 -> this$1
    java.lang.Boolean then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineSQLiteOpenHelper -> com.parse.OfflineSQLiteOpenHelper:
    java.lang.String TABLE_OBJECTS -> TABLE_OBJECTS
    java.lang.String KEY_UUID -> KEY_UUID
    java.lang.String KEY_CLASS_NAME -> KEY_CLASS_NAME
    java.lang.String KEY_OBJECT_ID -> KEY_OBJECT_ID
    java.lang.String KEY_JSON -> KEY_JSON
    java.lang.String KEY_IS_DELETING_EVENTUALLY -> KEY_IS_DELETING_EVENTUALLY
    java.lang.String TABLE_DEPENDENCIES -> TABLE_DEPENDENCIES
    java.lang.String KEY_KEY -> KEY_KEY
    java.lang.String DATABASE_NAME -> DATABASE_NAME
    int DATABASE_VERSION -> DATABASE_VERSION
    void createSchema(android.database.sqlite.SQLiteDatabase) -> createSchema
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void clearDatabase(android.content.Context) -> clearDatabase
com.parse.OfflineStore -> com.parse.OfflineStore:
    int MAX_SQL_VARIABLES -> MAX_SQL_VARIABLES
    java.lang.Object lock -> lock
    com.parse.OfflineSQLiteOpenHelper helper -> helper
    com.parse.WeakValueHashMap uuidToObjectMap -> uuidToObjectMap
    java.util.WeakHashMap objectToUuidMap -> objectToUuidMap
    java.util.WeakHashMap fetchedObjects -> fetchedObjects
    com.parse.WeakValueHashMap classNameAndObjectIdToObjectMap -> classNameAndObjectIdToObjectMap
    bolts.Task getOrCreateUUIDAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> getOrCreateUUIDAsync
    bolts.Task getPointerAsync(java.lang.String,com.parse.ParseSQLiteDatabase) -> getPointerAsync
    bolts.Task findAsync(com.parse.ParseQuery$State,com.parse.ParseUser,com.parse.ParsePin,com.parse.ParseSQLiteDatabase) -> findAsync
    bolts.Task findAsync(com.parse.ParseQuery$State,com.parse.ParseUser,com.parse.ParsePin,boolean,com.parse.ParseSQLiteDatabase) -> findAsync
    bolts.Task fetchLocallyAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> fetchLocallyAsync
    bolts.Task fetchLocallyAsync(com.parse.ParseObject) -> fetchLocallyAsync
    bolts.Task saveLocallyAsync(java.lang.String,com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> saveLocallyAsync
    bolts.Task saveLocallyAsync(com.parse.ParseObject,boolean,com.parse.ParseSQLiteDatabase) -> saveLocallyAsync
    bolts.Task saveLocallyAsync(com.parse.ParseObject,java.util.List,com.parse.ParseSQLiteDatabase) -> saveLocallyAsync
    bolts.Task unpinAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> unpinAsync
    bolts.Task unpinAsync(java.lang.String,com.parse.ParseSQLiteDatabase) -> unpinAsync
    bolts.Task deleteObjects(java.util.List,com.parse.ParseSQLiteDatabase) -> deleteObjects
    bolts.Task updateDataForObjectAsync(com.parse.ParseObject) -> updateDataForObjectAsync
    bolts.Task updateDataForObjectAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> updateDataForObjectAsync
    bolts.Task updateDataForObjectAsync(java.lang.String,com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> updateDataForObjectAsync
    bolts.Task deleteDataForObjectAsync(com.parse.ParseObject) -> deleteDataForObjectAsync
    bolts.Task deleteDataForObjectAsync(com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> deleteDataForObjectAsync
    bolts.Task getParsePin(java.lang.String,com.parse.ParseSQLiteDatabase) -> getParsePin
    bolts.Task pinAllObjectsAsync(java.lang.String,java.util.List,boolean) -> pinAllObjectsAsync
    bolts.Task pinAllObjectsAsync(java.lang.String,java.util.List,boolean,com.parse.ParseSQLiteDatabase) -> pinAllObjectsAsync
    bolts.Task unpinAllObjectsAsync(java.lang.String,java.util.List) -> unpinAllObjectsAsync
    bolts.Task unpinAllObjectsAsync(java.lang.String,java.util.List,com.parse.ParseSQLiteDatabase) -> unpinAllObjectsAsync
    bolts.Task unpinAllObjectsAsync(java.lang.String) -> unpinAllObjectsAsync
    bolts.Task unpinAllObjectsAsync(java.lang.String,com.parse.ParseSQLiteDatabase) -> unpinAllObjectsAsync
    bolts.Task findFromPinAsync(java.lang.String,com.parse.ParseQuery$State,com.parse.ParseUser) -> findFromPinAsync
    bolts.Task findFromPinAsync(java.lang.String,com.parse.ParseQuery$State,com.parse.ParseUser,com.parse.ParseSQLiteDatabase) -> findFromPinAsync
    bolts.Task countFromPinAsync(java.lang.String,com.parse.ParseQuery$State,com.parse.ParseUser) -> countFromPinAsync
    bolts.Task countFromPinAsync(java.lang.String,com.parse.ParseQuery$State,com.parse.ParseUser,com.parse.ParseSQLiteDatabase) -> countFromPinAsync
    void registerNewObject(com.parse.ParseObject) -> registerNewObject
    void unregisterObject(com.parse.ParseObject) -> unregisterObject
    com.parse.ParseObject getObject(java.lang.String,java.lang.String) -> getObject
    void updateObjectId(com.parse.ParseObject,java.lang.String,java.lang.String) -> updateObjectId
    bolts.Task runWithManagedConnection(com.parse.OfflineStore$SQLiteDatabaseCallable) -> runWithManagedConnection
    bolts.Task runWithManagedTransaction(com.parse.OfflineStore$SQLiteDatabaseCallable) -> runWithManagedTransaction
    void simulateReboot() -> simulateReboot
    void clearDatabase(android.content.Context) -> clearDatabase
    bolts.Task access$200(com.parse.OfflineStore,com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> access$200
    java.lang.Object access$300(com.parse.OfflineStore) -> access$300
    com.parse.WeakValueHashMap access$400(com.parse.OfflineStore) -> access$400
    java.util.WeakHashMap access$500(com.parse.OfflineStore) -> access$500
    bolts.Task access$600(com.parse.OfflineStore,java.lang.String,com.parse.ParseSQLiteDatabase) -> access$600
    bolts.Task access$800(com.parse.OfflineStore,java.lang.String,com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> access$800
    bolts.Task access$900(com.parse.OfflineStore,java.lang.String,com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> access$900
    bolts.Task access$1000(com.parse.OfflineStore,java.lang.String,com.parse.ParseSQLiteDatabase) -> access$1000
    bolts.Task access$1100(com.parse.OfflineStore,java.util.List,com.parse.ParseSQLiteDatabase) -> access$1100
    bolts.Task access$1200(com.parse.OfflineStore,com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> access$1200
    com.parse.OfflineSQLiteOpenHelper access$1300(com.parse.OfflineStore) -> access$1300
    bolts.Task access$1400(com.parse.OfflineStore,com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> access$1400
    bolts.Task access$1500(com.parse.OfflineStore,com.parse.ParseObject,boolean,com.parse.ParseSQLiteDatabase) -> access$1500
    java.util.WeakHashMap access$1600(com.parse.OfflineStore) -> access$1600
    bolts.Task access$1700(com.parse.OfflineStore,java.lang.String,java.util.List,boolean,com.parse.ParseSQLiteDatabase) -> access$1700
    bolts.Task access$1800(com.parse.OfflineStore,com.parse.ParseObject,java.util.List,com.parse.ParseSQLiteDatabase) -> access$1800
    bolts.Task access$1900(com.parse.OfflineStore,java.lang.String,java.util.List,com.parse.ParseSQLiteDatabase) -> access$1900
    bolts.Task access$2000(com.parse.OfflineStore,com.parse.ParseObject,com.parse.ParseSQLiteDatabase) -> access$2000
    bolts.Task access$2100(com.parse.OfflineStore,java.lang.String,com.parse.ParseSQLiteDatabase) -> access$2100
    bolts.Task access$2200(com.parse.OfflineStore,java.lang.String,com.parse.ParseQuery$State,com.parse.ParseUser,com.parse.ParseSQLiteDatabase) -> access$2200
    bolts.Task access$2300(com.parse.OfflineStore,com.parse.ParseQuery$State,com.parse.ParseUser,com.parse.ParsePin,boolean,com.parse.ParseSQLiteDatabase) -> access$2300
    bolts.Task access$2400(com.parse.OfflineStore,java.lang.String,com.parse.ParseQuery$State,com.parse.ParseUser,com.parse.ParseSQLiteDatabase) -> access$2400
com.parse.OfflineStore$1 -> com.parse.OfflineStore$1:
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineStore this$0 -> this$0
    com.parse.ParseObject then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$10 -> com.parse.OfflineStore$10:
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$11 -> com.parse.OfflineStore$11:
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$11$1 -> com.parse.OfflineStore$11$1:
    java.util.Map val$offlineObjects -> val$offlineObjects
    com.parse.OfflineStore$11 this$1 -> this$1
    boolean visit(java.lang.Object) -> visit
com.parse.OfflineStore$11$2 -> com.parse.OfflineStore$11$2:
    org.json.JSONObject val$json -> val$json
    java.util.Map val$offlineObjects -> val$offlineObjects
    com.parse.OfflineStore$11 this$1 -> this$1
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$12 -> com.parse.OfflineStore$12:
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task call(com.parse.ParseSQLiteDatabase) -> call
    java.lang.Object call(com.parse.ParseSQLiteDatabase) -> call
com.parse.OfflineStore$13 -> com.parse.OfflineStore$13:
    java.lang.String val$key -> val$key
    bolts.Capture val$uuidCapture -> val$uuidCapture
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$14 -> com.parse.OfflineStore$14:
    bolts.Capture val$uuidCapture -> val$uuidCapture
    com.parse.ParseObject val$object -> val$object
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$15 -> com.parse.OfflineStore$15:
    java.util.ArrayList val$objectsInTree -> val$objectsInTree
    com.parse.OfflineStore this$0 -> this$0
    boolean visit(java.lang.Object) -> visit
com.parse.OfflineStore$16 -> com.parse.OfflineStore$16:
    java.util.List val$objects -> val$objects
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$17 -> com.parse.OfflineStore$17:
    com.parse.ParseObject val$object -> val$object
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$18 -> com.parse.OfflineStore$18:
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$19 -> com.parse.OfflineStore$19:
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$2 -> com.parse.OfflineStore$2:
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    java.lang.String val$newUUID -> val$newUUID
    com.parse.OfflineStore this$0 -> this$0
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$20 -> com.parse.OfflineStore$20:
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$21 -> com.parse.OfflineStore$21:
    java.util.List val$uuidsToDelete -> val$uuidsToDelete
    com.parse.OfflineStore this$0 -> this$0
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$22 -> com.parse.OfflineStore$22:
    java.lang.String val$key -> val$key
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$23 -> com.parse.OfflineStore$23:
    java.util.List val$uuidsToDelete -> val$uuidsToDelete
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$24 -> com.parse.OfflineStore$24:
    java.lang.String val$key -> val$key
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$25 -> com.parse.OfflineStore$25:
    java.util.List val$uuids -> val$uuids
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$26 -> com.parse.OfflineStore$26:
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$26$1 -> com.parse.OfflineStore$26$1:
    com.parse.OfflineStore$26 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$26$1$1 -> com.parse.OfflineStore$26$1$1:
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore$26$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$26$1$1$1 -> com.parse.OfflineStore$26$1$1$1:
    com.parse.OfflineStore$26$1$1 this$3 -> this$3
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$26$1$1$2 -> com.parse.OfflineStore$26$1$1$2:
    com.parse.OfflineStore$26$1$1 this$3 -> this$3
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$27 -> com.parse.OfflineStore$27:
    com.parse.ParseObject val$object -> val$object
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$28 -> com.parse.OfflineStore$28:
    com.parse.ParseObject val$object -> val$object
    org.json.JSONObject val$json -> val$json
    java.lang.String val$uuid -> val$uuid
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$29 -> com.parse.OfflineStore$29:
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$29$1 -> com.parse.OfflineStore$29$1:
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore$29 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$29$1$1 -> com.parse.OfflineStore$29$1$1:
    com.parse.OfflineStore$29$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$29$1$2 -> com.parse.OfflineStore$29$1$2:
    com.parse.OfflineStore$29$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$3 -> com.parse.OfflineStore$3:
    java.lang.String val$uuid -> val$uuid
    com.parse.OfflineStore this$0 -> this$0
    com.parse.ParseObject then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$30 -> com.parse.OfflineStore$30:
    bolts.Capture val$uuid -> val$uuid
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$31 -> com.parse.OfflineStore$31:
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$31$1 -> com.parse.OfflineStore$31$1:
    java.lang.String val$uuid -> val$uuid
    com.parse.OfflineStore$31 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$31$2 -> com.parse.OfflineStore$31$2:
    com.parse.OfflineStore$31 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$32 -> com.parse.OfflineStore$32:
    bolts.Capture val$uuid -> val$uuid
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$33 -> com.parse.OfflineStore$33:
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$34 -> com.parse.OfflineStore$34:
    bolts.Capture val$uuid -> val$uuid
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$35 -> com.parse.OfflineStore$35:
    bolts.Capture val$uuid -> val$uuid
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$36 -> com.parse.OfflineStore$36:
    java.lang.String val$name -> val$name
    com.parse.OfflineStore this$0 -> this$0
    com.parse.ParsePin then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$37 -> com.parse.OfflineStore$37:
    java.lang.String val$name -> val$name
    java.util.List val$objects -> val$objects
    boolean val$includeChildren -> val$includeChildren
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task call(com.parse.ParseSQLiteDatabase) -> call
    java.lang.Object call(com.parse.ParseSQLiteDatabase) -> call
com.parse.OfflineStore$38 -> com.parse.OfflineStore$38:
    java.util.List val$objects -> val$objects
    boolean val$includeChildren -> val$includeChildren
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$39 -> com.parse.OfflineStore$39:
    java.lang.String val$name -> val$name
    java.util.List val$objects -> val$objects
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task call(com.parse.ParseSQLiteDatabase) -> call
    java.lang.Object call(com.parse.ParseSQLiteDatabase) -> call
com.parse.OfflineStore$4 -> com.parse.OfflineStore$4:
    com.parse.ParseQuery$State val$query -> val$query
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$40 -> com.parse.OfflineStore$40:
    java.util.List val$objects -> val$objects
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$41 -> com.parse.OfflineStore$41:
    java.lang.String val$name -> val$name
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task call(com.parse.ParseSQLiteDatabase) -> call
    java.lang.Object call(com.parse.ParseSQLiteDatabase) -> call
com.parse.OfflineStore$42 -> com.parse.OfflineStore$42:
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$43 -> com.parse.OfflineStore$43:
    java.lang.String val$name -> val$name
    com.parse.ParseQuery$State val$state -> val$state
    com.parse.ParseUser val$user -> val$user
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task call(com.parse.ParseSQLiteDatabase) -> call
    java.lang.Object call(com.parse.ParseSQLiteDatabase) -> call
com.parse.OfflineStore$44 -> com.parse.OfflineStore$44:
    com.parse.ParseQuery$State val$state -> val$state
    com.parse.ParseUser val$user -> val$user
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$45 -> com.parse.OfflineStore$45:
    java.lang.String val$name -> val$name
    com.parse.ParseQuery$State val$state -> val$state
    com.parse.ParseUser val$user -> val$user
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task call(com.parse.ParseSQLiteDatabase) -> call
    java.lang.Object call(com.parse.ParseSQLiteDatabase) -> call
com.parse.OfflineStore$46 -> com.parse.OfflineStore$46:
    com.parse.ParseQuery$State val$state -> val$state
    com.parse.ParseUser val$user -> val$user
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$46$1 -> com.parse.OfflineStore$46$1:
    com.parse.OfflineStore$46 this$1 -> this$1
    java.lang.Integer then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$47 -> com.parse.OfflineStore$47:
    com.parse.OfflineStore$SQLiteDatabaseCallable val$callable -> val$callable
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$47$1 -> com.parse.OfflineStore$47$1:
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore$47 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$48 -> com.parse.OfflineStore$48:
    com.parse.OfflineStore$SQLiteDatabaseCallable val$callable -> val$callable
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$48$1 -> com.parse.OfflineStore$48$1:
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore$48 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$48$1$1 -> com.parse.OfflineStore$48$1$1:
    com.parse.OfflineStore$48$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$48$1$2 -> com.parse.OfflineStore$48$1$2:
    com.parse.OfflineStore$48$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$5 -> com.parse.OfflineStore$5:
    java.util.List val$results -> val$results
    com.parse.ParseQuery$State val$query -> val$query
    boolean val$isCount -> val$isCount
    com.parse.OfflineQueryLogic val$queryLogic -> val$queryLogic
    com.parse.ParseSQLiteDatabase val$db -> val$db
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$5$1 -> com.parse.OfflineStore$5$1:
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineStore$5 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$5$2 -> com.parse.OfflineStore$5$2:
    java.util.List val$finalTrimmedResults -> val$finalTrimmedResults
    com.parse.OfflineStore$5 this$1 -> this$1
    java.util.List then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$6 -> com.parse.OfflineStore$6:
    com.parse.OfflineQueryLogic val$queryLogic -> val$queryLogic
    com.parse.ParseQuery$State val$query -> val$query
    com.parse.ParseUser val$user -> val$user
    com.parse.ParseSQLiteDatabase val$db -> val$db
    java.util.List val$results -> val$results
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$6$1 -> com.parse.OfflineStore$6$1:
    bolts.Capture val$object -> val$object
    com.parse.OfflineStore$6 this$1 -> this$1
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$6$2 -> com.parse.OfflineStore$6$2:
    bolts.Capture val$object -> val$object
    com.parse.OfflineQueryLogic$ConstraintMatcher val$matcher -> val$matcher
    com.parse.OfflineStore$6 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$6$3 -> com.parse.OfflineStore$6$3:
    bolts.Capture val$object -> val$object
    com.parse.OfflineStore$6 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$6$4 -> com.parse.OfflineStore$6$4:
    java.lang.String val$uuid -> val$uuid
    com.parse.OfflineStore$6 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$7 -> com.parse.OfflineStore$7:
    bolts.Capture val$uuid -> val$uuid
    com.parse.OfflineStore this$0 -> this$0
    java.lang.String then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$8 -> com.parse.OfflineStore$8:
    bolts.Capture val$uuid -> val$uuid
    com.parse.ParseSQLiteDatabase val$db -> val$db
    java.lang.String[] val$select -> val$select
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$9 -> com.parse.OfflineStore$9:
    com.parse.ParseObject val$object -> val$object
    com.parse.OfflineStore this$0 -> this$0
    java.lang.String then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$OfflineDecoder -> com.parse.OfflineStore$OfflineDecoder:
    java.util.Map offlineObjects -> offlineObjects
    com.parse.OfflineStore this$0 -> this$0
    java.lang.Object decode(java.lang.Object) -> decode
com.parse.OfflineStore$OfflineEncoder -> com.parse.OfflineStore$OfflineEncoder:
    com.parse.ParseSQLiteDatabase db -> db
    java.util.ArrayList tasks -> tasks
    java.lang.Object tasksLock -> tasksLock
    com.parse.OfflineStore this$0 -> this$0
    bolts.Task whenFinished() -> whenFinished
    org.json.JSONObject encodeRelatedObject(com.parse.ParseObject) -> encodeRelatedObject
    java.lang.Object access$000(com.parse.OfflineStore$OfflineEncoder) -> access$000
    java.util.ArrayList access$100(com.parse.OfflineStore$OfflineEncoder) -> access$100
com.parse.OfflineStore$OfflineEncoder$1 -> com.parse.OfflineStore$OfflineEncoder$1:
    com.parse.OfflineStore$OfflineEncoder this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$OfflineEncoder$2 -> com.parse.OfflineStore$OfflineEncoder$2:
    org.json.JSONObject val$result -> val$result
    com.parse.OfflineStore$OfflineEncoder this$1 -> this$1
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.OfflineStore$SQLiteDatabaseCallable -> com.parse.OfflineStore$SQLiteDatabaseCallable:
    java.lang.Object call(com.parse.ParseSQLiteDatabase) -> call
com.parse.PLog -> com.parse.PLog:
    int LOG_LEVEL_NONE -> LOG_LEVEL_NONE
    int logLevel -> logLevel
    void setLogLevel(int) -> setLogLevel
    int getLogLevel() -> getLogLevel
    void log(int,java.lang.String,java.lang.String,java.lang.Throwable) -> log
    void v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    void v(java.lang.String,java.lang.String) -> v
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    void i(java.lang.String,java.lang.String) -> i
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void w(java.lang.String,java.lang.String) -> w
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    void e(java.lang.String,java.lang.String) -> e
com.parse.PPNSUtil -> com.parse.PPNSUtil:
    java.lang.String CLASS_PPNS_SERVICE -> CLASS_PPNS_SERVICE
    boolean isPPNSAvailable() -> isPPNSAvailable
    com.parse.ProxyService newPPNSService(android.app.Service) -> newPPNSService
com.parse.PackageManagerWrapper -> com.parse.PackageManagerWrapper:
    android.content.Context context -> context
    boolean hasPermission(java.lang.String) -> hasPermission
    android.content.pm.PackageInfo getPackageInfo() -> getPackageInfo
com.parse.Parse -> com.parse.Parse:
    java.lang.String PARSE_APPLICATION_ID -> PARSE_APPLICATION_ID
    java.lang.String PARSE_CLIENT_KEY -> PARSE_CLIENT_KEY
    java.lang.Object MUTEX -> MUTEX
    com.parse.ParseEventuallyQueue eventuallyQueue -> eventuallyQueue
    boolean isLocalDatastoreEnabled -> isLocalDatastoreEnabled
    com.parse.OfflineStore offlineStore -> offlineStore
    java.lang.Object MUTEX_CALLBACKS -> MUTEX_CALLBACKS
    java.util.Set callbacks -> callbacks
    int LOG_LEVEL_VERBOSE -> LOG_LEVEL_VERBOSE
    int LOG_LEVEL_DEBUG -> LOG_LEVEL_DEBUG
    int LOG_LEVEL_INFO -> LOG_LEVEL_INFO
    int LOG_LEVEL_WARNING -> LOG_LEVEL_WARNING
    int LOG_LEVEL_ERROR -> LOG_LEVEL_ERROR
    int LOG_LEVEL_NONE -> LOG_LEVEL_NONE
    java.util.List interceptors -> interceptors
    void enableLocalDatastore(android.content.Context) -> enableLocalDatastore
    void disableLocalDatastore() -> disableLocalDatastore
    com.parse.OfflineStore getLocalDatastore() -> getLocalDatastore
    void setLocalDatastore(com.parse.OfflineStore) -> setLocalDatastore
    boolean isLocalDatastoreEnabled() -> isLocalDatastoreEnabled
    void initialize(android.content.Context) -> initialize
    void initialize(android.content.Context,java.lang.String,java.lang.String) -> initialize
    void destroy() -> destroy
    boolean isInitialized() -> isInitialized
    android.content.Context getApplicationContext() -> getApplicationContext
    boolean allParsePushIntentReceiversInternal() -> allParsePushIntentReceiversInternal
    java.io.File getParseDir() -> getParseDir
    java.io.File getParseCacheDir() -> getParseCacheDir
    java.io.File getParseCacheDir(java.lang.String) -> getParseCacheDir
    java.io.File getParseFilesDir() -> getParseFilesDir
    java.io.File getParseFilesDir(java.lang.String) -> getParseFilesDir
    void checkCacheApplicationId() -> checkCacheApplicationId
    com.parse.ParseEventuallyQueue getEventuallyQueue() -> getEventuallyQueue
    void checkInit() -> checkInit
    void checkContext() -> checkContext
    boolean hasPermission(java.lang.String) -> hasPermission
    void requirePermission(java.lang.String) -> requirePermission
    void registerParseCallbacks(com.parse.Parse$ParseCallbacks) -> registerParseCallbacks
    void unregisterParseCallbacks(com.parse.Parse$ParseCallbacks) -> unregisterParseCallbacks
    void dispatchOnParseInitialized() -> dispatchOnParseInitialized
    com.parse.Parse$ParseCallbacks[] collectParseCallbacks() -> collectParseCallbacks
    void setLogLevel(int) -> setLogLevel
    int getLogLevel() -> getLogLevel
    void initializeParseHttpClientsWithParseNetworkInterceptors() -> initializeParseHttpClientsWithParseNetworkInterceptors
    void addParseNetworkInterceptor(com.parse.http.ParseNetworkInterceptor) -> addParseNetworkInterceptor
    void removeParseNetworkInterceptor(com.parse.http.ParseNetworkInterceptor) -> removeParseNetworkInterceptor
    java.lang.String externalVersionName() -> externalVersionName
com.parse.Parse$1 -> com.parse.Parse$1:
    void run() -> run
com.parse.Parse$2 -> com.parse.Parse$2:
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.Parse$3 -> com.parse.Parse$3:
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.Parse$ParseCallbacks -> com.parse.Parse$ParseCallbacks:
    void onParseInitialized() -> onParseInitialized
com.parse.ParseACL -> com.parse.ParseACL:
    java.lang.String PUBLIC_KEY -> PUBLIC_KEY
    java.lang.String UNRESOLVED_KEY -> UNRESOLVED_KEY
    java.lang.String KEY_ROLE_PREFIX -> KEY_ROLE_PREFIX
    java.lang.String UNRESOLVED_USER_JSON_KEY -> UNRESOLVED_USER_JSON_KEY
    boolean shared -> shared
    com.parse.ParseUser unresolvedUser -> unresolvedUser
    java.util.Map permissionsById -> permissionsById
    com.parse.ParseDefaultACLController getDefaultACLController() -> getDefaultACLController
    void setDefaultACL(com.parse.ParseACL,boolean) -> setDefaultACL
    com.parse.ParseACL getDefaultACL() -> getDefaultACL
    com.parse.ParseACL copy() -> copy
    boolean isShared() -> isShared
    void setShared(boolean) -> setShared
    org.json.JSONObject toJSONObject(com.parse.ParseEncoder) -> toJSONObject
    com.parse.ParseACL createACLFromJSONObject(org.json.JSONObject,com.parse.ParseDecoder) -> createACLFromJSONObject
    void resolveUser(com.parse.ParseUser) -> resolveUser
    boolean hasUnresolvedUser() -> hasUnresolvedUser
    com.parse.ParseUser getUnresolvedUser() -> getUnresolvedUser
    void setPermissionsIfNonEmpty(java.lang.String,boolean,boolean) -> setPermissionsIfNonEmpty
    void setPublicReadAccess(boolean) -> setPublicReadAccess
    boolean getPublicReadAccess() -> getPublicReadAccess
    void setPublicWriteAccess(boolean) -> setPublicWriteAccess
    boolean getPublicWriteAccess() -> getPublicWriteAccess
    void setReadAccess(java.lang.String,boolean) -> setReadAccess
    boolean getReadAccess(java.lang.String) -> getReadAccess
    void setWriteAccess(java.lang.String,boolean) -> setWriteAccess
    boolean getWriteAccess(java.lang.String) -> getWriteAccess
    void setReadAccess(com.parse.ParseUser,boolean) -> setReadAccess
    void setUnresolvedReadAccess(com.parse.ParseUser,boolean) -> setUnresolvedReadAccess
    void setUnresolvedWriteAccess(com.parse.ParseUser,boolean) -> setUnresolvedWriteAccess
    void prepareUnresolvedUser(com.parse.ParseUser) -> prepareUnresolvedUser
    boolean getReadAccess(com.parse.ParseUser) -> getReadAccess
    void setWriteAccess(com.parse.ParseUser,boolean) -> setWriteAccess
    boolean getWriteAccess(com.parse.ParseUser) -> getWriteAccess
    boolean getRoleReadAccess(java.lang.String) -> getRoleReadAccess
    void setRoleReadAccess(java.lang.String,boolean) -> setRoleReadAccess
    boolean getRoleWriteAccess(java.lang.String) -> getRoleWriteAccess
    void setRoleWriteAccess(java.lang.String,boolean) -> setRoleWriteAccess
    void validateRoleState(com.parse.ParseRole) -> validateRoleState
    boolean getRoleReadAccess(com.parse.ParseRole) -> getRoleReadAccess
    void setRoleReadAccess(com.parse.ParseRole,boolean) -> setRoleReadAccess
    boolean getRoleWriteAccess(com.parse.ParseRole) -> getRoleWriteAccess
    void setRoleWriteAccess(com.parse.ParseRole,boolean) -> setRoleWriteAccess
    java.util.Map getPermissionsById() -> getPermissionsById
com.parse.ParseACL$Permissions -> com.parse.ParseACL$Permissions:
    java.lang.String READ_PERMISSION -> READ_PERMISSION
    java.lang.String WRITE_PERMISSION -> WRITE_PERMISSION
    boolean readPermission -> readPermission
    boolean writePermission -> writePermission
    org.json.JSONObject toJSONObject() -> toJSONObject
    boolean getReadPermission() -> getReadPermission
    boolean getWritePermission() -> getWritePermission
    com.parse.ParseACL$Permissions createPermissionsFromJSONObject(org.json.JSONObject) -> createPermissionsFromJSONObject
com.parse.ParseACL$UserResolutionListener -> com.parse.ParseACL$UserResolutionListener:
    java.lang.ref.WeakReference parent -> parent
    void done(com.parse.ParseObject,com.parse.ParseException) -> done
    void done(java.lang.Object,java.lang.Throwable) -> done
com.parse.ParseAWSRequest -> com.parse.ParseAWSRequest:
    java.io.File tempFile -> tempFile
    bolts.Task onResponseAsync(com.parse.http.ParseHttpResponse,com.parse.ProgressCallback) -> onResponseAsync
    java.io.File access$000(com.parse.ParseAWSRequest) -> access$000
com.parse.ParseAWSRequest$1 -> com.parse.ParseAWSRequest$1:
    com.parse.http.ParseHttpResponse val$response -> val$response
    com.parse.ProgressCallback val$downloadProgressCallback -> val$downloadProgressCallback
    com.parse.ParseAWSRequest this$0 -> this$0
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.parse.ParseAddOperation -> com.parse.ParseAddOperation:
    java.util.ArrayList objects -> objects
    org.json.JSONObject encode(com.parse.ParseEncoder) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,java.lang.String) -> apply
    java.lang.Object encode(com.parse.ParseEncoder) -> encode
com.parse.ParseAddUniqueOperation -> com.parse.ParseAddUniqueOperation:
    java.util.LinkedHashSet objects -> objects
    org.json.JSONObject encode(com.parse.ParseEncoder) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,java.lang.String) -> apply
    java.lang.Object encode(com.parse.ParseEncoder) -> encode
com.parse.ParseAnalytics -> com.parse.ParseAnalytics:
    java.lang.String TAG -> TAG
    java.util.Map lruSeenPushes -> lruSeenPushes
    com.parse.ParseAnalyticsController getAnalyticsController() -> getAnalyticsController
    bolts.Task trackAppOpenedInBackground(android.content.Intent) -> trackAppOpenedInBackground
    void trackAppOpened(android.content.Intent) -> trackAppOpened
    void trackAppOpenedInBackground(android.content.Intent,com.parse.SaveCallback) -> trackAppOpenedInBackground
    void trackEvent(java.lang.String) -> trackEvent
    void trackEventInBackground(java.lang.String,com.parse.SaveCallback) -> trackEventInBackground
    void trackEvent(java.lang.String,java.util.Map) -> trackEvent
    void trackEventInBackground(java.lang.String,java.util.Map,com.parse.SaveCallback) -> trackEventInBackground
    bolts.Task trackEventInBackground(java.lang.String) -> trackEventInBackground
    bolts.Task trackEventInBackground(java.lang.String,java.util.Map) -> trackEventInBackground
    void clear() -> clear
    java.lang.String getPushHashFromIntent(android.content.Intent) -> getPushHashFromIntent
com.parse.ParseAnalytics$1 -> com.parse.ParseAnalytics$1:
    bolts.Capture val$pushHash -> val$pushHash
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseAnalytics$2 -> com.parse.ParseAnalytics$2:
    java.lang.String val$name -> val$name
    org.json.JSONObject val$jsonDimensions -> val$jsonDimensions
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseAnalytics$3 -> com.parse.ParseAnalytics$3:
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.parse.ParseAnalyticsController -> com.parse.ParseAnalyticsController:
    com.parse.ParseEventuallyQueue eventuallyQueue -> eventuallyQueue
    bolts.Task trackEventInBackground(java.lang.String,org.json.JSONObject,java.lang.String) -> trackEventInBackground
    bolts.Task trackAppOpenedInBackground(java.lang.String,java.lang.String) -> trackAppOpenedInBackground
com.parse.ParseAnonymousUtils -> com.parse.ParseAnonymousUtils:
    java.lang.String AUTH_TYPE -> AUTH_TYPE
    boolean isLinked(com.parse.ParseUser) -> isLinked
    bolts.Task logInInBackground() -> logInInBackground
    void logIn(com.parse.LogInCallback) -> logIn
    java.util.Map getAuthData() -> getAuthData
com.parse.ParseApacheHttpClient -> com.parse.ParseApacheHttpClient:
    org.apache.http.impl.client.DefaultHttpClient apacheClient -> apacheClient
    com.parse.http.ParseHttpResponse executeInternal(com.parse.http.ParseHttpRequest) -> executeInternal
    com.parse.http.ParseHttpResponse getResponse(org.apache.http.HttpResponse) -> getResponse
    org.apache.http.client.methods.HttpUriRequest getRequest(com.parse.http.ParseHttpRequest) -> getRequest
    com.parse.http.ParseHttpResponse getResponse(java.lang.Object) -> getResponse
    java.lang.Object getRequest(com.parse.http.ParseHttpRequest) -> getRequest
com.parse.ParseApacheHttpClient$1 -> com.parse.ParseApacheHttpClient$1:
    int[] $SwitchMap$com$parse$http$ParseHttpRequest$Method -> $SwitchMap$com$parse$http$ParseHttpRequest$Method
com.parse.ParseApacheHttpClient$ParseApacheHttpEntity -> com.parse.ParseApacheHttpClient$ParseApacheHttpEntity:
    com.parse.http.ParseHttpBody parseBody -> parseBody
    void writeTo(java.io.OutputStream) -> writeTo
com.parse.ParseAuthenticationManager -> com.parse.ParseAuthenticationManager:
    java.lang.Object lock -> lock
    java.util.Map callbacks -> callbacks
    com.parse.ParseCurrentUserController controller -> controller
    void register(java.lang.String,com.parse.AuthenticationCallback) -> register
    bolts.Task restoreAuthenticationAsync(java.lang.String,java.util.Map) -> restoreAuthenticationAsync
    bolts.Task deauthenticateAsync(java.lang.String) -> deauthenticateAsync
com.parse.ParseAuthenticationManager$1 -> com.parse.ParseAuthenticationManager$1:
    java.lang.String val$authType -> val$authType
    com.parse.ParseAuthenticationManager this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseAuthenticationManager$2 -> com.parse.ParseAuthenticationManager$2:
    com.parse.AuthenticationCallback val$callback -> val$callback
    java.util.Map val$authData -> val$authData
    com.parse.ParseAuthenticationManager this$0 -> this$0
    java.lang.Boolean call() -> call
    java.lang.Object call() -> call
com.parse.ParseAuthenticationManager$3 -> com.parse.ParseAuthenticationManager$3:
    com.parse.AuthenticationCallback val$callback -> val$callback
    com.parse.ParseAuthenticationManager this$0 -> this$0
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.parse.ParseBroadcastReceiver -> com.parse.ParseBroadcastReceiver:
    java.lang.String TAG -> TAG
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.parse.ParseByteArrayHttpBody -> com.parse.ParseByteArrayHttpBody:
    byte[] content -> content
    java.io.InputStream contentInputStream -> contentInputStream
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
com.parse.ParseCallback1 -> com.parse.ParseCallback1:
    void done(java.lang.Throwable) -> done
com.parse.ParseCallback2 -> com.parse.ParseCallback2:
    void done(java.lang.Object,java.lang.Throwable) -> done
com.parse.ParseClassName -> com.parse.ParseClassName:
    java.lang.String value() -> value
com.parse.ParseCloud -> com.parse.ParseCloud:
    com.parse.ParseCloudCodeController getCloudCodeController() -> getCloudCodeController
    bolts.Task callFunctionInBackground(java.lang.String,java.util.Map) -> callFunctionInBackground
    java.lang.Object callFunction(java.lang.String,java.util.Map) -> callFunction
    void callFunctionInBackground(java.lang.String,java.util.Map,com.parse.FunctionCallback) -> callFunctionInBackground
com.parse.ParseCloud$1 -> com.parse.ParseCloud$1:
    java.lang.String val$name -> val$name
    java.util.Map val$params -> val$params
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseCloudCodeController -> com.parse.ParseCloudCodeController:
    com.parse.ParseHttpClient restClient -> restClient
    bolts.Task callFunctionInBackground(java.lang.String,java.util.Map,java.lang.String) -> callFunctionInBackground
    java.lang.Object convertCloudResponse(java.lang.Object) -> convertCloudResponse
com.parse.ParseCloudCodeController$1 -> com.parse.ParseCloudCodeController$1:
    com.parse.ParseCloudCodeController this$0 -> this$0
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseCommandCache -> com.parse.ParseCommandCache:
    java.lang.String TAG -> TAG
    int filenameCounter -> filenameCounter
    java.lang.Object lock -> lock
    java.io.File cachePath -> cachePath
    int timeoutMaxRetries -> timeoutMaxRetries
    double timeoutRetryWaitSeconds -> timeoutRetryWaitSeconds
    int maxCacheSizeBytes -> maxCacheSizeBytes
    boolean shouldStop -> shouldStop
    boolean unprocessedCommandsExist -> unprocessedCommandsExist
    java.util.HashMap pendingTasks -> pendingTasks
    boolean running -> running
    java.lang.Object runningLock -> runningLock
    java.util.logging.Logger log -> log
    com.parse.ConnectivityNotifier notifier -> notifier
    com.parse.ConnectivityNotifier$ConnectivityListener listener -> listener
    java.io.File getCacheDir() -> getCacheDir
    int getPendingCount() -> getPendingCount
    void onDestroy() -> onDestroy
    void setTimeoutMaxRetries(int) -> setTimeoutMaxRetries
    void setTimeoutRetryWaitSeconds(double) -> setTimeoutRetryWaitSeconds
    void setMaxCacheSizeBytes(int) -> setMaxCacheSizeBytes
    void resume() -> resume
    void pause() -> pause
    void removeFile(java.io.File) -> removeFile
    void simulateReboot() -> simulateReboot
    void fakeObjectUpdate() -> fakeObjectUpdate
    bolts.Task enqueueEventuallyAsync(com.parse.ParseRESTCommand,com.parse.ParseObject) -> enqueueEventuallyAsync
    bolts.Task enqueueEventuallyAsync(com.parse.ParseRESTCommand,boolean,com.parse.ParseObject) -> enqueueEventuallyAsync
    int pendingCount() -> pendingCount
    void clear() -> clear
    void setConnected(boolean) -> setConnected
    java.lang.Object waitForTaskWithoutLock(bolts.Task) -> waitForTaskWithoutLock
    void maybeRunAllCommandsNow(int) -> maybeRunAllCommandsNow
    void runLoop() -> runLoop
    void access$000(com.parse.ParseCommandCache) -> access$000
    java.lang.Object access$100() -> access$100
com.parse.ParseCommandCache$1 -> com.parse.ParseCommandCache$1:
    com.parse.ParseCommandCache this$0 -> this$0
    void networkConnectivityStatusChanged(android.content.Context,android.content.Intent) -> networkConnectivityStatusChanged
com.parse.ParseCommandCache$1$1 -> com.parse.ParseCommandCache$1$1:
    boolean val$connectionLost -> val$connectionLost
    boolean val$isConnected -> val$isConnected
    com.parse.ParseCommandCache$1 this$1 -> this$1
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.parse.ParseCommandCache$2 -> com.parse.ParseCommandCache$2:
    com.parse.ParseCommandCache this$0 -> this$0
    void run() -> run
com.parse.ParseCommandCache$3 -> com.parse.ParseCommandCache$3:
    bolts.Capture val$finished -> val$finished
    com.parse.ParseCommandCache this$0 -> this$0
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseCommandCache$4 -> com.parse.ParseCommandCache$4:
    com.parse.ParseRESTCommand val$command -> val$command
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.ParseCommandCache this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseConfig -> com.parse.ParseConfig:
    com.parse.TaskQueue taskQueue -> taskQueue
    java.util.Map params -> params
    com.parse.ParseConfigController getConfigController() -> getConfigController
    com.parse.ParseConfig getCurrentConfig() -> getCurrentConfig
    com.parse.ParseConfig get() -> get
    void getInBackground(com.parse.ConfigCallback) -> getInBackground
    bolts.Task getInBackground() -> getInBackground
    bolts.Task getAsync(bolts.Task) -> getAsync
    java.util.Map getParams() -> getParams
    java.lang.Object get(java.lang.String) -> get
    java.lang.Object get(java.lang.String,java.lang.Object) -> get
    boolean getBoolean(java.lang.String) -> getBoolean
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    java.util.Date getDate(java.lang.String) -> getDate
    java.util.Date getDate(java.lang.String,java.util.Date) -> getDate
    double getDouble(java.lang.String) -> getDouble
    double getDouble(java.lang.String,double) -> getDouble
    int getInt(java.lang.String) -> getInt
    int getInt(java.lang.String,int) -> getInt
    org.json.JSONArray getJSONArray(java.lang.String) -> getJSONArray
    org.json.JSONArray getJSONArray(java.lang.String,org.json.JSONArray) -> getJSONArray
    org.json.JSONObject getJSONObject(java.lang.String) -> getJSONObject
    org.json.JSONObject getJSONObject(java.lang.String,org.json.JSONObject) -> getJSONObject
    java.util.List getList(java.lang.String) -> getList
    java.util.List getList(java.lang.String,java.util.List) -> getList
    long getLong(java.lang.String) -> getLong
    long getLong(java.lang.String,long) -> getLong
    java.util.Map getMap(java.lang.String) -> getMap
    java.util.Map getMap(java.lang.String,java.util.Map) -> getMap
    java.lang.Number getNumber(java.lang.String) -> getNumber
    java.lang.Number getNumber(java.lang.String,java.lang.Number) -> getNumber
    com.parse.ParseFile getParseFile(java.lang.String) -> getParseFile
    com.parse.ParseFile getParseFile(java.lang.String,com.parse.ParseFile) -> getParseFile
    com.parse.ParseGeoPoint getParseGeoPoint(java.lang.String) -> getParseGeoPoint
    com.parse.ParseGeoPoint getParseGeoPoint(java.lang.String,com.parse.ParseGeoPoint) -> getParseGeoPoint
    java.lang.String getString(java.lang.String) -> getString
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    java.lang.String toString() -> toString
    bolts.Task access$000(bolts.Task) -> access$000
com.parse.ParseConfig$1 -> com.parse.ParseConfig$1:
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseConfig$2 -> com.parse.ParseConfig$2:
    bolts.Task val$toAwait -> val$toAwait
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseConfig$2$1 -> com.parse.ParseConfig$2$1:
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ParseConfig$2 this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseConfigController -> com.parse.ParseConfigController:
    com.parse.ParseCurrentConfigController currentConfigController -> currentConfigController
    com.parse.ParseHttpClient restClient -> restClient
    com.parse.ParseCurrentConfigController getCurrentConfigController() -> getCurrentConfigController
    bolts.Task getAsync(java.lang.String) -> getAsync
    com.parse.ParseCurrentConfigController access$000(com.parse.ParseConfigController) -> access$000
com.parse.ParseConfigController$1 -> com.parse.ParseConfigController$1:
    com.parse.ParseConfigController this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseConfigController$1$1 -> com.parse.ParseConfigController$1$1:
    com.parse.ParseConfig val$config -> val$config
    com.parse.ParseConfigController$1 this$1 -> this$1
    com.parse.ParseConfig then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseCorePlugins -> com.parse.ParseCorePlugins:
    com.parse.ParseCorePlugins INSTANCE -> INSTANCE
    java.lang.String FILENAME_CURRENT_USER -> FILENAME_CURRENT_USER
    java.lang.String PIN_CURRENT_USER -> PIN_CURRENT_USER
    java.lang.String FILENAME_CURRENT_INSTALLATION -> FILENAME_CURRENT_INSTALLATION
    java.lang.String PIN_CURRENT_INSTALLATION -> PIN_CURRENT_INSTALLATION
    java.lang.String FILENAME_CURRENT_CONFIG -> FILENAME_CURRENT_CONFIG
    java.util.concurrent.atomic.AtomicReference objectController -> objectController
    java.util.concurrent.atomic.AtomicReference userController -> userController
    java.util.concurrent.atomic.AtomicReference sessionController -> sessionController
    java.util.concurrent.atomic.AtomicReference currentUserController -> currentUserController
    java.util.concurrent.atomic.AtomicReference currentInstallationController -> currentInstallationController
    java.util.concurrent.atomic.AtomicReference authenticationController -> authenticationController
    java.util.concurrent.atomic.AtomicReference queryController -> queryController
    java.util.concurrent.atomic.AtomicReference fileController -> fileController
    java.util.concurrent.atomic.AtomicReference analyticsController -> analyticsController
    java.util.concurrent.atomic.AtomicReference cloudCodeController -> cloudCodeController
    java.util.concurrent.atomic.AtomicReference configController -> configController
    java.util.concurrent.atomic.AtomicReference pushController -> pushController
    java.util.concurrent.atomic.AtomicReference pushChannelsController -> pushChannelsController
    java.util.concurrent.atomic.AtomicReference defaultACLController -> defaultACLController
    java.util.concurrent.atomic.AtomicReference localIdManager -> localIdManager
    com.parse.ParseCorePlugins getInstance() -> getInstance
    void reset() -> reset
    com.parse.ParseObjectController getObjectController() -> getObjectController
    void registerObjectController(com.parse.ParseObjectController) -> registerObjectController
    com.parse.ParseUserController getUserController() -> getUserController
    void registerUserController(com.parse.ParseUserController) -> registerUserController
    com.parse.ParseSessionController getSessionController() -> getSessionController
    void registerSessionController(com.parse.ParseSessionController) -> registerSessionController
    com.parse.ParseCurrentUserController getCurrentUserController() -> getCurrentUserController
    void registerCurrentUserController(com.parse.ParseCurrentUserController) -> registerCurrentUserController
    com.parse.ParseQueryController getQueryController() -> getQueryController
    void registerQueryController(com.parse.ParseQueryController) -> registerQueryController
    com.parse.ParseFileController getFileController() -> getFileController
    void registerFileController(com.parse.ParseFileController) -> registerFileController
    com.parse.ParseAnalyticsController getAnalyticsController() -> getAnalyticsController
    void registerAnalyticsController(com.parse.ParseAnalyticsController) -> registerAnalyticsController
    com.parse.ParseCloudCodeController getCloudCodeController() -> getCloudCodeController
    void registerCloudCodeController(com.parse.ParseCloudCodeController) -> registerCloudCodeController
    com.parse.ParseConfigController getConfigController() -> getConfigController
    void registerConfigController(com.parse.ParseConfigController) -> registerConfigController
    com.parse.ParsePushController getPushController() -> getPushController
    void registerPushController(com.parse.ParsePushController) -> registerPushController
    com.parse.ParsePushChannelsController getPushChannelsController() -> getPushChannelsController
    void registerPushChannelsController(com.parse.ParsePushChannelsController) -> registerPushChannelsController
    com.parse.ParseCurrentInstallationController getCurrentInstallationController() -> getCurrentInstallationController
    void registerCurrentInstallationController(com.parse.ParseCurrentInstallationController) -> registerCurrentInstallationController
    com.parse.ParseAuthenticationManager getAuthenticationManager() -> getAuthenticationManager
    void registerAuthenticationManager(com.parse.ParseAuthenticationManager) -> registerAuthenticationManager
    com.parse.ParseDefaultACLController getDefaultACLController() -> getDefaultACLController
    void registerDefaultACLController(com.parse.ParseDefaultACLController) -> registerDefaultACLController
    com.parse.LocalIdManager getLocalIdManager() -> getLocalIdManager
    void registerLocalIdManager(com.parse.LocalIdManager) -> registerLocalIdManager
com.parse.ParseCountingByteArrayHttpBody -> com.parse.ParseCountingByteArrayHttpBody:
    int DEFAULT_CHUNK_SIZE -> DEFAULT_CHUNK_SIZE
    com.parse.ProgressCallback progressCallback -> progressCallback
    void writeTo(java.io.OutputStream) -> writeTo
com.parse.ParseCountingFileHttpBody -> com.parse.ParseCountingFileHttpBody:
    int DEFAULT_CHUNK_SIZE -> DEFAULT_CHUNK_SIZE
    int EOF -> EOF
    com.parse.ProgressCallback progressCallback -> progressCallback
    void writeTo(java.io.OutputStream) -> writeTo
com.parse.ParseCrashReportHandler -> com.parse.ParseCrashReportHandler:
    com.parse.ReportField[] CRASH_REPORT_FIELDS -> CRASH_REPORT_FIELDS
    void send(com.parse.CrashReportData) -> send
    org.json.JSONObject getCrashReportEventPayload(com.parse.CrashReportData) -> getCrashReportEventPayload
com.parse.ParseCrashReporter -> com.parse.ParseCrashReporter:
    com.parse.ParseCrashReporter defaultInstance -> defaultInstance
    java.lang.Object defaultInstanceLock -> defaultInstanceLock
    java.lang.String REPORT_ENDPOINT -> REPORT_ENDPOINT
    com.parse.ErrorReporter innerCrashReporter -> innerCrashReporter
    void enableCrashReporting(android.content.Context) -> enableCrashReporting
    boolean isEnabled() -> isEnabled
    com.parse.ParseCrashReporter getCurrent() -> getCurrent
    com.parse.ErrorReporter access$002(com.parse.ParseCrashReporter,com.parse.ErrorReporter) -> access$002
    com.parse.ErrorReporter access$000(com.parse.ParseCrashReporter) -> access$000
com.parse.ParseCrashReporter$1 -> com.parse.ParseCrashReporter$1:
    com.parse.ParseCrashReporter this$0 -> this$0
    java.io.File getFile(java.lang.String) -> getFile
com.parse.ParseCrashReporter$2 -> com.parse.ParseCrashReporter$2:
    android.content.Context val$applicationContext -> val$applicationContext
    com.parse.FileProvider val$fileProvider -> val$fileProvider
    com.parse.ParseCrashReporter this$0 -> this$0
    void onParseInitialized() -> onParseInitialized
com.parse.ParseCrashReporting -> com.parse.ParseCrashReporting:
    java.lang.String CRASH_REPORT -> CRASH_REPORT
    void enable(android.content.Context) -> enable
    boolean isCrashReportingEnabled() -> isCrashReportingEnabled
    void trackCrashReport(org.json.JSONObject) -> trackCrashReport
com.parse.ParseCurrentConfigController -> com.parse.ParseCurrentConfigController:
    java.lang.Object currentConfigMutex -> currentConfigMutex
    com.parse.ParseConfig currentConfig -> currentConfig
    java.io.File currentConfigFile -> currentConfigFile
    bolts.Task setCurrentConfigAsync(com.parse.ParseConfig) -> setCurrentConfigAsync
    bolts.Task getCurrentConfigAsync() -> getCurrentConfigAsync
    com.parse.ParseConfig getFromDisk() -> getFromDisk
    void clearCurrentConfigForTesting() -> clearCurrentConfigForTesting
    void saveToDisk(com.parse.ParseConfig) -> saveToDisk
    java.lang.Object access$000(com.parse.ParseCurrentConfigController) -> access$000
com.parse.ParseCurrentConfigController$1 -> com.parse.ParseCurrentConfigController$1:
    com.parse.ParseConfig val$config -> val$config
    com.parse.ParseCurrentConfigController this$0 -> this$0
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.parse.ParseCurrentConfigController$2 -> com.parse.ParseCurrentConfigController$2:
    com.parse.ParseCurrentConfigController this$0 -> this$0
    com.parse.ParseConfig call() -> call
    java.lang.Object call() -> call
com.parse.ParseCurrentInstallationController -> com.parse.ParseCurrentInstallationController:
com.parse.ParseCurrentUserController -> com.parse.ParseCurrentUserController:
    bolts.Task getAsync(boolean) -> getAsync
    bolts.Task setIfNeededAsync(com.parse.ParseUser) -> setIfNeededAsync
    bolts.Task getCurrentSessionTokenAsync() -> getCurrentSessionTokenAsync
    bolts.Task logOutAsync() -> logOutAsync
com.parse.ParseDateFormat -> com.parse.ParseDateFormat:
    java.lang.String TAG -> TAG
    com.parse.ParseDateFormat INSTANCE -> INSTANCE
    java.lang.Object lock -> lock
    java.text.DateFormat dateFormat -> dateFormat
    com.parse.ParseDateFormat getInstance() -> getInstance
    java.util.Date parse(java.lang.String) -> parse
    java.lang.String format(java.util.Date) -> format
com.parse.ParseDecoder -> com.parse.ParseDecoder:
    com.parse.ParseDecoder INSTANCE -> INSTANCE
    com.parse.ParseDecoder get() -> get
    java.util.List convertJSONArrayToList(org.json.JSONArray) -> convertJSONArrayToList
    java.util.Map convertJSONObjectToMap(org.json.JSONObject) -> convertJSONObjectToMap
    com.parse.ParseObject decodePointer(java.lang.String,java.lang.String) -> decodePointer
    java.lang.Object decode(java.lang.Object) -> decode
com.parse.ParseDecompressInterceptor -> com.parse.ParseDecompressInterceptor:
    java.lang.String CONTENT_ENCODING_HEADER -> CONTENT_ENCODING_HEADER
    java.lang.String CONTENT_LENGTH_HEADER -> CONTENT_LENGTH_HEADER
    java.lang.String GZIP_ENCODING -> GZIP_ENCODING
    com.parse.http.ParseHttpResponse intercept(com.parse.http.ParseNetworkInterceptor$Chain) -> intercept
com.parse.ParseDefaultACLController -> com.parse.ParseDefaultACLController:
    com.parse.ParseACL defaultACL -> defaultACL
    boolean defaultACLUsesCurrentUser -> defaultACLUsesCurrentUser
    java.lang.ref.WeakReference lastCurrentUser -> lastCurrentUser
    com.parse.ParseACL defaultACLWithCurrentUser -> defaultACLWithCurrentUser
    void set(com.parse.ParseACL,boolean) -> set
    com.parse.ParseACL get() -> get
com.parse.ParseDeleteOperation -> com.parse.ParseDeleteOperation:
    com.parse.ParseDeleteOperation defaultInstance -> defaultInstance
    com.parse.ParseDeleteOperation getInstance() -> getInstance
    org.json.JSONObject encode(com.parse.ParseEncoder) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,java.lang.String) -> apply
    java.lang.Object encode(com.parse.ParseEncoder) -> encode
com.parse.ParseDigestUtils -> com.parse.ParseDigestUtils:
    char[] hexArray -> hexArray
    java.lang.String md5(java.lang.String) -> md5
    java.lang.String toHex(byte[]) -> toHex
com.parse.ParseEncoder -> com.parse.ParseEncoder:
    boolean isValidType(java.lang.Object) -> isValidType
    java.lang.Object encode(java.lang.Object) -> encode
    org.json.JSONObject encodeRelatedObject(com.parse.ParseObject) -> encodeRelatedObject
    org.json.JSONObject encodeDate(java.util.Date) -> encodeDate
com.parse.ParseEventuallyQueue -> com.parse.ParseEventuallyQueue:
    boolean isConnected -> isConnected
    com.parse.ParseEventuallyQueue$TestHelper testHelper -> testHelper
    void onDestroy() -> onDestroy
    void setConnected(boolean) -> setConnected
    boolean isConnected() -> isConnected
    int pendingCount() -> pendingCount
    void setTimeoutRetryWaitSeconds(double) -> setTimeoutRetryWaitSeconds
    void setMaxCacheSizeBytes(int) -> setMaxCacheSizeBytes
    com.parse.ParseEventuallyQueue$TestHelper getTestHelper() -> getTestHelper
    void notifyTestHelper(int) -> notifyTestHelper
    void notifyTestHelper(int,java.lang.Throwable) -> notifyTestHelper
    void pause() -> pause
    void resume() -> resume
    bolts.Task enqueueEventuallyAsync(com.parse.ParseRESTCommand,com.parse.ParseObject) -> enqueueEventuallyAsync
    com.parse.ParseRESTCommand commandFromJSON(org.json.JSONObject) -> commandFromJSON
    bolts.Task waitForOperationSetAndEventuallyPin(com.parse.ParseOperationSet,com.parse.EventuallyPin) -> waitForOperationSetAndEventuallyPin
    void simulateReboot() -> simulateReboot
    void clear() -> clear
    void fakeObjectUpdate() -> fakeObjectUpdate
com.parse.ParseEventuallyQueue$1 -> com.parse.ParseEventuallyQueue$1:
com.parse.ParseEventuallyQueue$TestHelper -> com.parse.ParseEventuallyQueue$TestHelper:
    int MAX_EVENTS -> MAX_EVENTS
    int COMMAND_SUCCESSFUL -> COMMAND_SUCCESSFUL
    int COMMAND_FAILED -> COMMAND_FAILED
    int COMMAND_ENQUEUED -> COMMAND_ENQUEUED
    int COMMAND_NOT_ENQUEUED -> COMMAND_NOT_ENQUEUED
    int OBJECT_UPDATED -> OBJECT_UPDATED
    int OBJECT_REMOVED -> OBJECT_REMOVED
    int NETWORK_DOWN -> NETWORK_DOWN
    int COMMAND_OLD_FORMAT_DISCARDED -> COMMAND_OLD_FORMAT_DISCARDED
    android.util.SparseArray events -> events
    java.lang.String getEventString(int) -> getEventString
    void clear() -> clear
    int unexpectedEvents() -> unexpectedEvents
    java.util.List getUnexpectedEvents() -> getUnexpectedEvents
    void notify(int) -> notify
    void notify(int,java.lang.Throwable) -> notify
    boolean waitFor(int) -> waitFor
    boolean waitFor(int,int) -> waitFor
com.parse.ParseException -> com.parse.ParseException:
    long serialVersionUID -> serialVersionUID
    int code -> code
    int OTHER_CAUSE -> OTHER_CAUSE
    int INTERNAL_SERVER_ERROR -> INTERNAL_SERVER_ERROR
    int CONNECTION_FAILED -> CONNECTION_FAILED
    int OBJECT_NOT_FOUND -> OBJECT_NOT_FOUND
    int INVALID_QUERY -> INVALID_QUERY
    int INVALID_CLASS_NAME -> INVALID_CLASS_NAME
    int MISSING_OBJECT_ID -> MISSING_OBJECT_ID
    int INVALID_KEY_NAME -> INVALID_KEY_NAME
    int INVALID_POINTER -> INVALID_POINTER
    int INVALID_JSON -> INVALID_JSON
    int COMMAND_UNAVAILABLE -> COMMAND_UNAVAILABLE
    int NOT_INITIALIZED -> NOT_INITIALIZED
    int INCORRECT_TYPE -> INCORRECT_TYPE
    int INVALID_CHANNEL_NAME -> INVALID_CHANNEL_NAME
    int PUSH_MISCONFIGURED -> PUSH_MISCONFIGURED
    int OBJECT_TOO_LARGE -> OBJECT_TOO_LARGE
    int OPERATION_FORBIDDEN -> OPERATION_FORBIDDEN
    int CACHE_MISS -> CACHE_MISS
    int INVALID_NESTED_KEY -> INVALID_NESTED_KEY
    int INVALID_FILE_NAME -> INVALID_FILE_NAME
    int INVALID_ACL -> INVALID_ACL
    int TIMEOUT -> TIMEOUT
    int INVALID_EMAIL_ADDRESS -> INVALID_EMAIL_ADDRESS
    int DUPLICATE_VALUE -> DUPLICATE_VALUE
    int INVALID_ROLE_NAME -> INVALID_ROLE_NAME
    int EXCEEDED_QUOTA -> EXCEEDED_QUOTA
    int SCRIPT_ERROR -> SCRIPT_ERROR
    int VALIDATION_ERROR -> VALIDATION_ERROR
    int FILE_DELETE_ERROR -> FILE_DELETE_ERROR
    int REQUEST_LIMIT_EXCEEDED -> REQUEST_LIMIT_EXCEEDED
    int INVALID_EVENT_NAME -> INVALID_EVENT_NAME
    int USERNAME_MISSING -> USERNAME_MISSING
    int PASSWORD_MISSING -> PASSWORD_MISSING
    int USERNAME_TAKEN -> USERNAME_TAKEN
    int EMAIL_TAKEN -> EMAIL_TAKEN
    int EMAIL_MISSING -> EMAIL_MISSING
    int EMAIL_NOT_FOUND -> EMAIL_NOT_FOUND
    int SESSION_MISSING -> SESSION_MISSING
    int MUST_CREATE_USER_THROUGH_SIGNUP -> MUST_CREATE_USER_THROUGH_SIGNUP
    int ACCOUNT_ALREADY_LINKED -> ACCOUNT_ALREADY_LINKED
    int INVALID_SESSION_TOKEN -> INVALID_SESSION_TOKEN
    int LINKED_ID_MISSING -> LINKED_ID_MISSING
    int INVALID_LINKED_SESSION -> INVALID_LINKED_SESSION
    int UNSUPPORTED_SERVICE -> UNSUPPORTED_SERVICE
    int getCode() -> getCode
com.parse.ParseExecutors -> com.parse.ParseExecutors:
    java.util.concurrent.ScheduledExecutorService scheduledExecutor -> scheduledExecutor
    java.lang.Object SCHEDULED_EXECUTOR_LOCK -> SCHEDULED_EXECUTOR_LOCK
    java.util.concurrent.ScheduledExecutorService scheduled() -> scheduled
    java.util.concurrent.Executor main() -> main
    java.util.concurrent.Executor io() -> io
com.parse.ParseFieldOperation -> com.parse.ParseFieldOperation:
    java.lang.Object encode(com.parse.ParseEncoder) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,java.lang.String) -> apply
com.parse.ParseFieldOperations -> com.parse.ParseFieldOperations:
    java.util.Map opDecoderMap -> opDecoderMap
    void registerDecoder(java.lang.String,com.parse.ParseFieldOperations$ParseFieldOperationFactory) -> registerDecoder
    void registerDefaultDecoders() -> registerDefaultDecoders
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
    java.util.ArrayList jsonArrayAsArrayList(org.json.JSONArray) -> jsonArrayAsArrayList
com.parse.ParseFieldOperations$1 -> com.parse.ParseFieldOperations$1:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$2 -> com.parse.ParseFieldOperations$2:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$3 -> com.parse.ParseFieldOperations$3:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$4 -> com.parse.ParseFieldOperations$4:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$5 -> com.parse.ParseFieldOperations$5:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$6 -> com.parse.ParseFieldOperations$6:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$7 -> com.parse.ParseFieldOperations$7:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$8 -> com.parse.ParseFieldOperations$8:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFieldOperations$ParseFieldOperationFactory -> com.parse.ParseFieldOperations$ParseFieldOperationFactory:
    com.parse.ParseFieldOperation decode(org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseFile -> com.parse.ParseFile:
    int MAX_FILE_SIZE -> MAX_FILE_SIZE
    com.parse.ParseFile$State state -> state
    byte[] data -> data
    com.parse.TaskQueue taskQueue -> taskQueue
    java.util.Set currentTasks -> currentTasks
    com.parse.ParseFileController getFileController() -> getFileController
    com.parse.ProgressCallback progressCallbackOnMainThread(com.parse.ProgressCallback) -> progressCallbackOnMainThread
    com.parse.ParseFile$State getState() -> getState
    java.lang.String getName() -> getName
    boolean isDirty() -> isDirty
    boolean isDataAvailable() -> isDataAvailable
    java.lang.String getUrl() -> getUrl
    void save() -> save
    bolts.Task saveAsync(java.lang.String,com.parse.ProgressCallback,bolts.Task,bolts.Task) -> saveAsync
    bolts.Task saveInBackground(com.parse.ProgressCallback) -> saveInBackground
    bolts.Task saveAsync(java.lang.String,com.parse.ProgressCallback,bolts.Task) -> saveAsync
    bolts.Task saveInBackground() -> saveInBackground
    void saveInBackground(com.parse.SaveCallback,com.parse.ProgressCallback) -> saveInBackground
    void saveInBackground(com.parse.SaveCallback) -> saveInBackground
    byte[] getData() -> getData
    bolts.Task getDataAsync(com.parse.ProgressCallback,bolts.Task,bolts.Task) -> getDataAsync
    bolts.Task getDataInBackground(com.parse.ProgressCallback) -> getDataInBackground
    bolts.Task getDataInBackground() -> getDataInBackground
    void getDataInBackground(com.parse.GetDataCallback,com.parse.ProgressCallback) -> getDataInBackground
    void getDataInBackground(com.parse.GetDataCallback) -> getDataInBackground
    void cancel() -> cancel
    org.json.JSONObject encode() -> encode
    com.parse.ParseFile$State access$402(com.parse.ParseFile,com.parse.ParseFile$State) -> access$402
    com.parse.ParseFile$State access$400(com.parse.ParseFile) -> access$400
    com.parse.ProgressCallback access$500(com.parse.ProgressCallback) -> access$500
    java.util.Set access$600(com.parse.ParseFile) -> access$600
    bolts.Task access$700(com.parse.ParseFile,java.lang.String,com.parse.ProgressCallback,bolts.Task,bolts.Task) -> access$700
    bolts.Task access$800(com.parse.ParseFile,com.parse.ProgressCallback,bolts.Task,bolts.Task) -> access$800
com.parse.ParseFile$1 -> com.parse.ParseFile$1:
    com.parse.ProgressCallback val$progressCallback -> val$progressCallback
    void done(java.lang.Integer) -> done
com.parse.ParseFile$1$1 -> com.parse.ParseFile$1$1:
    java.lang.Integer val$percentDone -> val$percentDone
    com.parse.ParseFile$1 this$0 -> this$0
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.parse.ParseFile$2 -> com.parse.ParseFile$2:
    bolts.Task val$cancellationToken -> val$cancellationToken
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ProgressCallback val$uploadProgressCallback -> val$uploadProgressCallback
    com.parse.ParseFile this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFile$2$1 -> com.parse.ParseFile$2$1:
    com.parse.ParseFile$2 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFile$3 -> com.parse.ParseFile$3:
    bolts.Task$TaskCompletionSource val$cts -> val$cts
    com.parse.ParseFile this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFile$4 -> com.parse.ParseFile$4:
    com.parse.ProgressCallback val$uploadProgressCallback -> val$uploadProgressCallback
    bolts.Task$TaskCompletionSource val$cts -> val$cts
    com.parse.ParseFile this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFile$5 -> com.parse.ParseFile$5:
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ProgressCallback val$uploadProgressCallback -> val$uploadProgressCallback
    bolts.Task val$cancellationToken -> val$cancellationToken
    com.parse.ParseFile this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFile$6 -> com.parse.ParseFile$6:
    bolts.Task val$cancellationToken -> val$cancellationToken
    com.parse.ProgressCallback val$progressCallback -> val$progressCallback
    com.parse.ParseFile this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFile$6$1 -> com.parse.ParseFile$6$1:
    com.parse.ParseFile$6 this$1 -> this$1
    byte[] then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFile$7 -> com.parse.ParseFile$7:
    bolts.Task$TaskCompletionSource val$cts -> val$cts
    com.parse.ParseFile this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFile$8 -> com.parse.ParseFile$8:
    com.parse.ProgressCallback val$progressCallback -> val$progressCallback
    bolts.Task$TaskCompletionSource val$cts -> val$cts
    com.parse.ParseFile this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFile$State -> com.parse.ParseFile$State:
    java.lang.String name -> name
    java.lang.String contentType -> contentType
    java.lang.String url -> url
    java.lang.String name() -> name
    java.lang.String mimeType() -> mimeType
    java.lang.String url() -> url
com.parse.ParseFile$State$Builder -> com.parse.ParseFile$State$Builder:
    java.lang.String name -> name
    java.lang.String mimeType -> mimeType
    java.lang.String url -> url
    com.parse.ParseFile$State$Builder name(java.lang.String) -> name
    com.parse.ParseFile$State$Builder mimeType(java.lang.String) -> mimeType
    com.parse.ParseFile$State$Builder url(java.lang.String) -> url
    com.parse.ParseFile$State build() -> build
    java.lang.String access$100(com.parse.ParseFile$State$Builder) -> access$100
    java.lang.String access$200(com.parse.ParseFile$State$Builder) -> access$200
    java.lang.String access$300(com.parse.ParseFile$State$Builder) -> access$300
com.parse.ParseFileController -> com.parse.ParseFileController:
    java.lang.Object lock -> lock
    com.parse.ParseHttpClient restClient -> restClient
    java.io.File cachePath -> cachePath
    com.parse.ParseHttpClient awsClient -> awsClient
    com.parse.ParseHttpClient awsClient() -> awsClient
    com.parse.ParseFileController awsClient(com.parse.ParseHttpClient) -> awsClient
    java.io.File getCacheFile(com.parse.ParseFile$State) -> getCacheFile
    java.io.File getTempFile(com.parse.ParseFile$State) -> getTempFile
    boolean isDataAvailable(com.parse.ParseFile$State) -> isDataAvailable
    void clearCache() -> clearCache
    bolts.Task saveAsync(com.parse.ParseFile$State,byte[],java.lang.String,com.parse.ProgressCallback,bolts.Task) -> saveAsync
    bolts.Task saveAsync(com.parse.ParseFile$State,java.io.File,java.lang.String,com.parse.ProgressCallback,bolts.Task) -> saveAsync
    bolts.Task fetchAsync(com.parse.ParseFile$State,java.lang.String,com.parse.ProgressCallback,bolts.Task) -> fetchAsync
com.parse.ParseFileController$1 -> com.parse.ParseFileController$1:
    com.parse.ParseFile$State val$state -> val$state
    byte[] val$data -> val$data
    com.parse.ParseFileController this$0 -> this$0
    com.parse.ParseFile$State then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFileController$2 -> com.parse.ParseFileController$2:
    com.parse.ParseFile$State val$state -> val$state
    java.io.File val$file -> val$file
    com.parse.ParseFileController this$0 -> this$0
    com.parse.ParseFile$State then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFileController$3 -> com.parse.ParseFileController$3:
    java.io.File val$cacheFile -> val$cacheFile
    bolts.Task val$cancellationToken -> val$cancellationToken
    com.parse.ParseFile$State val$state -> val$state
    com.parse.ProgressCallback val$downloadProgressCallback -> val$downloadProgressCallback
    com.parse.ParseFileController this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFileController$3$1 -> com.parse.ParseFileController$3$1:
    java.io.File val$tempFile -> val$tempFile
    com.parse.ParseFileController$3 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseFileController$4 -> com.parse.ParseFileController$4:
    java.io.File val$cacheFile -> val$cacheFile
    com.parse.ParseFileController this$0 -> this$0
    java.lang.Boolean call() -> call
    java.lang.Object call() -> call
com.parse.ParseFileHttpBody -> com.parse.ParseFileHttpBody:
    java.io.File file -> file
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
com.parse.ParseFileUtils -> com.parse.ParseFileUtils:
    long ONE_KB -> ONE_KB
    long ONE_MB -> ONE_MB
    long FILE_COPY_BUFFER_SIZE -> FILE_COPY_BUFFER_SIZE
    byte[] readFileToByteArray(java.io.File) -> readFileToByteArray
    java.io.FileInputStream openInputStream(java.io.File) -> openInputStream
    void writeByteArrayToFile(java.io.File,byte[]) -> writeByteArrayToFile
    java.io.FileOutputStream openOutputStream(java.io.File) -> openOutputStream
    void moveFile(java.io.File,java.io.File) -> moveFile
    void copyFile(java.io.File,java.io.File) -> copyFile
    void copyFile(java.io.File,java.io.File,boolean) -> copyFile
    void doCopyFile(java.io.File,java.io.File,boolean) -> doCopyFile
    void deleteDirectory(java.io.File) -> deleteDirectory
    boolean deleteQuietly(java.io.File) -> deleteQuietly
    void cleanDirectory(java.io.File) -> cleanDirectory
    void forceDelete(java.io.File) -> forceDelete
    boolean isSymlink(java.io.File) -> isSymlink
    java.lang.String readFileToString(java.io.File,java.nio.charset.Charset) -> readFileToString
    java.lang.String readFileToString(java.io.File,java.lang.String) -> readFileToString
    void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset) -> writeStringToFile
    void writeStringToFile(java.io.File,java.lang.String,java.lang.String) -> writeStringToFile
    org.json.JSONObject readFileToJSONObject(java.io.File) -> readFileToJSONObject
    void writeJSONObjectToFile(java.io.File,org.json.JSONObject) -> writeJSONObjectToFile
com.parse.ParseGeoPoint -> com.parse.ParseGeoPoint:
    double EARTH_MEAN_RADIUS_KM -> EARTH_MEAN_RADIUS_KM
    double EARTH_MEAN_RADIUS_MILE -> EARTH_MEAN_RADIUS_MILE
    double latitude -> latitude
    double longitude -> longitude
    void setLatitude(double) -> setLatitude
    double getLatitude() -> getLatitude
    void setLongitude(double) -> setLongitude
    double getLongitude() -> getLongitude
    double distanceInRadiansTo(com.parse.ParseGeoPoint) -> distanceInRadiansTo
    double distanceInKilometersTo(com.parse.ParseGeoPoint) -> distanceInKilometersTo
    double distanceInMilesTo(com.parse.ParseGeoPoint) -> distanceInMilesTo
    bolts.Task getCurrentLocationInBackground(long) -> getCurrentLocationInBackground
    void getCurrentLocationInBackground(long,com.parse.LocationCallback) -> getCurrentLocationInBackground
    bolts.Task getCurrentLocationInBackground(long,android.location.Criteria) -> getCurrentLocationInBackground
    void getCurrentLocationInBackground(long,android.location.Criteria,com.parse.LocationCallback) -> getCurrentLocationInBackground
    java.lang.String toString() -> toString
com.parse.ParseGeoPoint$1 -> com.parse.ParseGeoPoint$1:
    com.parse.ParseGeoPoint then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseGeoPoint$2 -> com.parse.ParseGeoPoint$2:
    com.parse.ParseGeoPoint then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseHttpClient -> com.parse.ParseHttpClient:
    java.lang.String TAG -> TAG
    java.lang.String APACHE_HTTPCLIENT_NAME -> APACHE_HTTPCLIENT_NAME
    java.lang.String URLCONNECTION_NAME -> URLCONNECTION_NAME
    java.lang.String OKHTTP_NAME -> OKHTTP_NAME
    java.lang.String OKHTTPCLIENT_PATH -> OKHTTPCLIENT_PATH
    java.lang.String MAX_CONNECTIONS_PROPERTY_NAME -> MAX_CONNECTIONS_PROPERTY_NAME
    java.lang.String KEEP_ALIVE_PROPERTY_NAME -> KEEP_ALIVE_PROPERTY_NAME
    boolean hasExecuted -> hasExecuted
    java.util.List internalInterceptors -> internalInterceptors
    java.util.List externalInterceptors -> externalInterceptors
    com.parse.ParseHttpClient createClient(int,android.net.SSLSessionCache) -> createClient
    void setMaxConnections(int) -> setMaxConnections
    void setKeepAlive(boolean) -> setKeepAlive
    boolean hasOkHttpOnClasspath() -> hasOkHttpOnClasspath
    com.parse.http.ParseHttpResponse executeInternal(com.parse.http.ParseHttpRequest) -> executeInternal
    java.lang.Object getRequest(com.parse.http.ParseHttpRequest) -> getRequest
    com.parse.http.ParseHttpResponse getResponse(java.lang.Object) -> getResponse
    void addInternalInterceptor(com.parse.http.ParseNetworkInterceptor) -> addInternalInterceptor
    void addExternalInterceptor(com.parse.http.ParseNetworkInterceptor) -> addExternalInterceptor
    com.parse.http.ParseHttpResponse execute(com.parse.http.ParseHttpRequest) -> execute
    boolean disableHttpLibraryAutoDecompress() -> disableHttpLibraryAutoDecompress
    java.util.List access$000(com.parse.ParseHttpClient) -> access$000
    java.util.List access$100(com.parse.ParseHttpClient) -> access$100
com.parse.ParseHttpClient$ParseNetworkInterceptorChain -> com.parse.ParseHttpClient$ParseNetworkInterceptorChain:
    int internalIndex -> internalIndex
    int externalIndex -> externalIndex
    com.parse.http.ParseHttpRequest request -> request
    com.parse.ParseHttpClient this$0 -> this$0
    com.parse.http.ParseHttpRequest getRequest() -> getRequest
    com.parse.http.ParseHttpResponse proceed(com.parse.http.ParseHttpRequest) -> proceed
com.parse.ParseIOUtils -> com.parse.ParseIOUtils:
    int EOF -> EOF
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    int SKIP_BUFFER_SIZE -> SKIP_BUFFER_SIZE
    byte[] SKIP_BYTE_BUFFER -> SKIP_BYTE_BUFFER
    byte[] toByteArray(java.io.InputStream) -> toByteArray
    int copy(java.io.InputStream,java.io.OutputStream) -> copy
    long copyLarge(java.io.InputStream,java.io.OutputStream) -> copyLarge
    long copyLarge(java.io.InputStream,java.io.OutputStream,byte[]) -> copyLarge
    long copyLarge(java.io.InputStream,java.io.OutputStream,long,long) -> copyLarge
    long skip(java.io.InputStream,long) -> skip
    long copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[]) -> copyLarge
    void skipFully(java.io.InputStream,long) -> skipFully
    void closeQuietly(java.io.InputStream) -> closeQuietly
    void closeQuietly(java.io.OutputStream) -> closeQuietly
    void closeQuietly(java.io.Closeable) -> closeQuietly
com.parse.ParseImpreciseDateFormat -> com.parse.ParseImpreciseDateFormat:
    java.lang.String TAG -> TAG
    com.parse.ParseImpreciseDateFormat INSTANCE -> INSTANCE
    java.lang.Object lock -> lock
    java.text.DateFormat dateFormat -> dateFormat
    com.parse.ParseImpreciseDateFormat getInstance() -> getInstance
    java.util.Date parse(java.lang.String) -> parse
    java.lang.String format(java.util.Date) -> format
com.parse.ParseIncrementOperation -> com.parse.ParseIncrementOperation:
    java.lang.Number amount -> amount
    org.json.JSONObject encode(com.parse.ParseEncoder) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,java.lang.String) -> apply
    java.lang.Object encode(com.parse.ParseEncoder) -> encode
com.parse.ParseInstallation -> com.parse.ParseInstallation:
    java.lang.String TAG -> TAG
    java.lang.String KEY_INSTALLATION_ID -> KEY_INSTALLATION_ID
    java.lang.String KEY_DEVICE_TYPE -> KEY_DEVICE_TYPE
    java.lang.String KEY_APP_NAME -> KEY_APP_NAME
    java.lang.String KEY_APP_IDENTIFIER -> KEY_APP_IDENTIFIER
    java.lang.String KEY_PARSE_VERSION -> KEY_PARSE_VERSION
    java.lang.String KEY_DEVICE_TOKEN -> KEY_DEVICE_TOKEN
    java.lang.String KEY_PUSH_TYPE -> KEY_PUSH_TYPE
    java.lang.String KEY_TIME_ZONE -> KEY_TIME_ZONE
    java.lang.String KEY_LOCALE -> KEY_LOCALE
    java.lang.String KEY_APP_VERSION -> KEY_APP_VERSION
    java.lang.String KEY_CHANNELS -> KEY_CHANNELS
    java.util.List READ_ONLY_FIELDS -> READ_ONLY_FIELDS
    com.parse.ParseCurrentInstallationController getCurrentInstallationController() -> getCurrentInstallationController
    com.parse.ParseInstallation getCurrentInstallation() -> getCurrentInstallation
    com.parse.ParseQuery getQuery() -> getQuery
    java.lang.String getInstallationId() -> getInstallationId
    boolean needsDefaultACL() -> needsDefaultACL
    boolean isKeyMutable(java.lang.String) -> isKeyMutable
    void updateBeforeSave() -> updateBeforeSave
    bolts.Task fetchAsync(java.lang.String,bolts.Task) -> fetchAsync
    bolts.Task handleSaveResultAsync(com.parse.ParseObject$State,com.parse.ParseOperationSet) -> handleSaveResultAsync
    bolts.Task handleFetchResultAsync(com.parse.ParseObject$State) -> handleFetchResultAsync
    void updateTimezone() -> updateTimezone
    void updateVersionInfo() -> updateVersionInfo
    void updateLocaleIdentifier() -> updateLocaleIdentifier
    void updateDeviceInfo() -> updateDeviceInfo
    void updateDeviceInfo(com.parse.InstallationId) -> updateDeviceInfo
    com.parse.PushType getPushType() -> getPushType
    void setPushType(com.parse.PushType) -> setPushType
    void removePushType() -> removePushType
    java.lang.String getDeviceToken() -> getDeviceToken
    void setDeviceToken(java.lang.String) -> setDeviceToken
    void removeDeviceToken() -> removeDeviceToken
    bolts.Task access$001(com.parse.ParseInstallation,java.lang.String,bolts.Task) -> access$001
com.parse.ParseInstallation$1 -> com.parse.ParseInstallation$1:
    java.lang.String val$sessionToken -> val$sessionToken
    bolts.Task val$toAwait -> val$toAwait
    com.parse.ParseInstallation this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseInstallation$2 -> com.parse.ParseInstallation$2:
    com.parse.ParseInstallation this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseInstallation$3 -> com.parse.ParseInstallation$3:
    com.parse.ParseInstallation this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseJSONCacheItem -> com.parse.ParseJSONCacheItem:
    org.json.JSONObject json -> json
    java.lang.String hashValue -> hashValue
    boolean equals(com.parse.ParseJSONCacheItem) -> equals
    java.lang.String getHashValue() -> getHashValue
    java.lang.Object getJSONObject() -> getJSONObject
com.parse.ParseJSONUtils -> com.parse.ParseJSONUtils:
    org.json.JSONObject create(org.json.JSONObject,java.util.Collection) -> create
    java.lang.Iterable keys(org.json.JSONObject) -> keys
    int getInt(org.json.JSONObject,java.util.List) -> getInt
com.parse.ParseJSONUtils$1 -> com.parse.ParseJSONUtils$1:
    org.json.JSONObject val$finalObject -> val$finalObject
    java.util.Iterator iterator() -> iterator
com.parse.ParseKeyValueCache -> com.parse.ParseKeyValueCache:
    java.lang.String TAG -> TAG
    java.lang.String DIR_NAME -> DIR_NAME
    int DEFAULT_MAX_KEY_VALUE_CACHE_BYTES -> DEFAULT_MAX_KEY_VALUE_CACHE_BYTES
    int DEFAULT_MAX_KEY_VALUE_CACHE_FILES -> DEFAULT_MAX_KEY_VALUE_CACHE_FILES
    java.lang.Object MUTEX_IO -> MUTEX_IO
    int maxKeyValueCacheBytes -> maxKeyValueCacheBytes
    int maxKeyValueCacheFiles -> maxKeyValueCacheFiles
    java.io.File directory -> directory
    void initialize(android.content.Context) -> initialize
    void initialize(java.io.File) -> initialize
    java.io.File getKeyValueCacheDir() -> getKeyValueCacheDir
    int size() -> size
    java.io.File getKeyValueCacheFile(java.lang.String) -> getKeyValueCacheFile
    long getKeyValueCacheAge(java.io.File) -> getKeyValueCacheAge
    java.io.File createKeyValueCacheFile(java.lang.String) -> createKeyValueCacheFile
    void clearKeyValueCacheDir() -> clearKeyValueCacheDir
    void saveToKeyValueCache(java.lang.String,java.lang.String) -> saveToKeyValueCache
    void clearFromKeyValueCache(java.lang.String) -> clearFromKeyValueCache
    java.lang.String loadFromKeyValueCache(java.lang.String,long) -> loadFromKeyValueCache
    org.json.JSONObject jsonFromKeyValueCache(java.lang.String,long) -> jsonFromKeyValueCache
com.parse.ParseKeyValueCache$1 -> com.parse.ParseKeyValueCache$1:
    java.lang.String val$suffix -> val$suffix
    boolean accept(java.io.File,java.lang.String) -> accept
com.parse.ParseKeyValueCache$2 -> com.parse.ParseKeyValueCache$2:
    int compare(java.io.File,java.io.File) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.parse.ParseMulticastDelegate -> com.parse.ParseMulticastDelegate:
    java.util.List callbacks -> callbacks
    void subscribe(com.parse.ParseCallback2) -> subscribe
    void unsubscribe(com.parse.ParseCallback2) -> unsubscribe
    void invoke(java.lang.Object,com.parse.ParseException) -> invoke
    void clear() -> clear
com.parse.ParseNotificationManager -> com.parse.ParseNotificationManager:
    java.lang.String TAG -> TAG
    java.util.concurrent.atomic.AtomicInteger notificationCount -> notificationCount
    boolean shouldShowNotifications -> shouldShowNotifications
    com.parse.ParseNotificationManager getInstance() -> getInstance
    void setShouldShowNotifications(boolean) -> setShouldShowNotifications
    int getNotificationCount() -> getNotificationCount
    void showNotification(android.content.Context,android.app.Notification) -> showNotification
com.parse.ParseNotificationManager$Singleton -> com.parse.ParseNotificationManager$Singleton:
    com.parse.ParseNotificationManager INSTANCE -> INSTANCE
    com.parse.ParseNotificationManager access$000() -> access$000
com.parse.ParseObject -> com.parse.ParseObject:
    java.lang.String server -> server
    java.lang.String AUTO_CLASS_NAME -> AUTO_CLASS_NAME
    java.lang.String VERSION_NAME -> VERSION_NAME
    java.lang.String KEY_OBJECT_ID -> KEY_OBJECT_ID
    java.lang.String KEY_CLASS_NAME -> KEY_CLASS_NAME
    java.lang.String KEY_ACL -> KEY_ACL
    java.lang.String KEY_CREATED_AT -> KEY_CREATED_AT
    java.lang.String KEY_UPDATED_AT -> KEY_UPDATED_AT
    java.lang.String KEY_COMPLETE -> KEY_COMPLETE
    java.lang.String KEY_OPERATIONS -> KEY_OPERATIONS
    java.lang.String KEY_IS_DELETING_EVENTUALLY -> KEY_IS_DELETING_EVENTUALLY
    java.lang.String KEY_IS_DELETING_EVENTUALLY_OLD -> KEY_IS_DELETING_EVENTUALLY_OLD
    java.util.Map classNames -> classNames
    java.util.Map objectTypes -> objectTypes
    java.lang.Object mutex -> mutex
    com.parse.TaskQueue taskQueue -> taskQueue
    com.parse.ParseObject$State state -> state
    java.util.LinkedList operationSetQueue -> operationSetQueue
    java.util.Map estimatedData -> estimatedData
    java.util.Map hashedObjects -> hashedObjects
    java.lang.String localId -> localId
    com.parse.ParseMulticastDelegate saveEvent -> saveEvent
    boolean isDeleted -> isDeleted
    int isDeletingEventually -> isDeletingEventually
    java.lang.ThreadLocal isCreatingPointerForObjectId -> isCreatingPointerForObjectId
    java.lang.String NEW_OFFLINE_OBJECT_ID_PLACEHOLDER -> NEW_OFFLINE_OBJECT_ID_PLACEHOLDER
    java.lang.String DEFAULT_PIN -> DEFAULT_PIN
    com.parse.ParseObjectController getObjectController() -> getObjectController
    com.parse.LocalIdManager getLocalIdManager() -> getLocalIdManager
    com.parse.ParseObject create(java.lang.String) -> create
    com.parse.ParseObject create(java.lang.Class) -> create
    com.parse.ParseObject createWithoutData(java.lang.String,java.lang.String) -> createWithoutData
    com.parse.ParseObject createWithoutData(java.lang.Class,java.lang.String) -> createWithoutData
    boolean isAccessible(java.lang.reflect.Member) -> isAccessible
    void registerSubclass(java.lang.Class) -> registerSubclass
    void unregisterSubclass(java.lang.Class) -> unregisterSubclass
    void unregisterSubclass(java.lang.String) -> unregisterSubclass
    bolts.Task enqueueForAll(java.util.List,bolts.Continuation) -> enqueueForAll
    void addToHashedObjects(java.lang.Object) -> addToHashedObjects
    com.parse.ParseObject from(com.parse.ParseObject$State) -> from
    com.parse.ParseObject fromJSON(org.json.JSONObject,java.lang.String,boolean) -> fromJSON
    com.parse.ParseObject fromJSON(org.json.JSONObject,java.lang.String,boolean,com.parse.ParseDecoder) -> fromJSON
    com.parse.ParseObject fromJSONPayload(org.json.JSONObject,com.parse.ParseDecoder) -> fromJSONPayload
    com.parse.ParseObject$State$Init newStateBuilder(java.lang.String) -> newStateBuilder
    com.parse.ParseObject$State getState() -> getState
    void setState(com.parse.ParseObject$State) -> setState
    void setState(com.parse.ParseObject$State,boolean) -> setState
    java.lang.String getClassName() -> getClassName
    java.util.Date getUpdatedAt() -> getUpdatedAt
    java.util.Date getCreatedAt() -> getCreatedAt
    java.util.Set keySet() -> keySet
    void copyChangesFrom(com.parse.ParseObject) -> copyChangesFrom
    void mergeFromObject(com.parse.ParseObject) -> mergeFromObject
    void revert(java.lang.String) -> revert
    void revert() -> revert
    java.util.Map collectFetchedObjects() -> collectFetchedObjects
    void build(org.json.JSONObject,com.parse.ParseDecoder) -> build
    com.parse.ParseObject$State mergeFromServer(com.parse.ParseObject$State,org.json.JSONObject,com.parse.ParseDecoder,boolean) -> mergeFromServer
    org.json.JSONObject toRest(com.parse.ParseEncoder) -> toRest
    org.json.JSONObject toRest(com.parse.ParseObject$State,java.util.List,com.parse.ParseEncoder) -> toRest
    void mergeREST(com.parse.ParseObject$State,org.json.JSONObject,com.parse.ParseDecoder) -> mergeREST
    boolean hasDirtyChildren() -> hasDirtyChildren
    boolean isDirty() -> isDirty
    boolean isDirty(boolean) -> isDirty
    boolean hasChanges() -> hasChanges
    boolean hasOutstandingOperations() -> hasOutstandingOperations
    boolean isDirty(java.lang.String) -> isDirty
    boolean isContainerObject(java.lang.String,java.lang.Object) -> isContainerObject
    void checkpointAllMutableContainers() -> checkpointAllMutableContainers
    void checkpointMutableContainer(java.lang.String,java.lang.Object) -> checkpointMutableContainer
    void checkForChangesToMutableContainer(java.lang.String,java.lang.Object) -> checkForChangesToMutableContainer
    void checkForChangesToMutableContainers() -> checkForChangesToMutableContainers
    java.lang.String getObjectId() -> getObjectId
    void setObjectId(java.lang.String) -> setObjectId
    java.lang.String getOrCreateLocalId() -> getOrCreateLocalId
    void notifyObjectIdChanged(java.lang.String,java.lang.String) -> notifyObjectIdChanged
    com.parse.ParseRESTObjectCommand currentSaveEventuallyCommand(com.parse.ParseOperationSet,com.parse.ParseEncoder,java.lang.String) -> currentSaveEventuallyCommand
    org.json.JSONObject toJSONObjectForSaving(com.parse.ParseObject$State,com.parse.ParseOperationSet,com.parse.ParseEncoder) -> toJSONObjectForSaving
    bolts.Task handleSaveResultAsync(org.json.JSONObject,com.parse.ParseOperationSet) -> handleSaveResultAsync
    bolts.Task handleSaveResultAsync(com.parse.ParseObject$State,com.parse.ParseOperationSet) -> handleSaveResultAsync
    com.parse.ParseOperationSet startSave() -> startSave
    void validateSave() -> validateSave
    void save() -> save
    bolts.Task saveInBackground() -> saveInBackground
    bolts.Task saveAsync(java.lang.String) -> saveAsync
    bolts.Task saveAsync(java.lang.String,bolts.Task) -> saveAsync
    bolts.Task saveAsync(com.parse.ParseOperationSet,java.lang.String) -> saveAsync
    void saveInBackground(com.parse.SaveCallback) -> saveInBackground
    void validateSaveEventually() -> validateSaveEventually
    void saveEventually(com.parse.SaveCallback) -> saveEventually
    bolts.Task saveEventually() -> saveEventually
    bolts.Task enqueueSaveEventuallyOperationAsync(com.parse.ParseOperationSet) -> enqueueSaveEventuallyOperationAsync
    bolts.Task handleSaveEventuallyResultAsync(org.json.JSONObject,com.parse.ParseOperationSet) -> handleSaveEventuallyResultAsync
    void updateBeforeSave() -> updateBeforeSave
    void deleteEventually(com.parse.DeleteCallback) -> deleteEventually
    bolts.Task deleteEventually() -> deleteEventually
    bolts.Task handleDeleteEventuallyResultAsync() -> handleDeleteEventuallyResultAsync
    bolts.Task handleFetchResultAsync(com.parse.ParseObject$State) -> handleFetchResultAsync
    void refresh() -> refresh
    void refreshInBackground(com.parse.RefreshCallback) -> refreshInBackground
    com.parse.ParseObject fetch() -> fetch
    bolts.Task fetchAsync(java.lang.String,bolts.Task) -> fetchAsync
    bolts.Task fetchInBackground() -> fetchInBackground
    void fetchInBackground(com.parse.GetCallback) -> fetchInBackground
    bolts.Task fetchIfNeededInBackground() -> fetchIfNeededInBackground
    com.parse.ParseObject fetchIfNeeded() -> fetchIfNeeded
    void fetchIfNeededInBackground(com.parse.GetCallback) -> fetchIfNeededInBackground
    void validateDelete() -> validateDelete
    bolts.Task deleteAsync(java.lang.String,bolts.Task) -> deleteAsync
    bolts.Task deleteAsync(java.lang.String) -> deleteAsync
    bolts.Task handleDeleteResultAsync() -> handleDeleteResultAsync
    bolts.Task deleteInBackground() -> deleteInBackground
    void delete() -> delete
    void deleteInBackground(com.parse.DeleteCallback) -> deleteInBackground
    bolts.Task deleteAllAsync(java.util.List,java.lang.String) -> deleteAllAsync
    bolts.Task deleteAllAsync(java.util.List,java.lang.String,bolts.Task) -> deleteAllAsync
    void deleteAll(java.util.List) -> deleteAll
    void deleteAllInBackground(java.util.List,com.parse.DeleteCallback) -> deleteAllInBackground
    bolts.Task deleteAllInBackground(java.util.List) -> deleteAllInBackground
    void collectDirtyChildren(java.lang.Object,java.util.Collection,java.util.Collection,java.util.Set,java.util.Set) -> collectDirtyChildren
    void collectDirtyChildren(java.lang.Object,java.util.Collection,java.util.Collection) -> collectDirtyChildren
    boolean canBeSerialized() -> canBeSerialized
    bolts.Task deepSaveAsync(java.lang.Object,java.lang.String) -> deepSaveAsync
    bolts.Task saveAllAsync(java.util.List,java.lang.String,bolts.Task) -> saveAllAsync
    void saveAll(java.util.List) -> saveAll
    void saveAllInBackground(java.util.List,com.parse.SaveCallback) -> saveAllInBackground
    bolts.Task saveAllInBackground(java.util.List) -> saveAllInBackground
    bolts.Task fetchAllIfNeededInBackground(java.util.List) -> fetchAllIfNeededInBackground
    java.util.List fetchAllIfNeeded(java.util.List) -> fetchAllIfNeeded
    void fetchAllIfNeededInBackground(java.util.List,com.parse.FindCallback) -> fetchAllIfNeededInBackground
    bolts.Task fetchAllAsync(java.util.List,boolean) -> fetchAllAsync
    bolts.Task fetchAllAsync(java.util.List,com.parse.ParseUser,boolean,bolts.Task) -> fetchAllAsync
    bolts.Task fetchAllInBackground(java.util.List) -> fetchAllInBackground
    java.util.List fetchAll(java.util.List) -> fetchAll
    void fetchAllInBackground(java.util.List,com.parse.FindCallback) -> fetchAllInBackground
    com.parse.ParseOperationSet currentOperations() -> currentOperations
    void applyOperations(com.parse.ParseOperationSet,java.util.Map) -> applyOperations
    void rebuildEstimatedData() -> rebuildEstimatedData
    void performOperation(java.lang.String,com.parse.ParseFieldOperation) -> performOperation
    void put(java.lang.String,java.lang.Object) -> put
    void performPut(java.lang.String,java.lang.Object) -> performPut
    boolean has(java.lang.String) -> has
    void increment(java.lang.String) -> increment
    void increment(java.lang.String,java.lang.Number) -> increment
    void add(java.lang.String,java.lang.Object) -> add
    void addAll(java.lang.String,java.util.Collection) -> addAll
    void addUnique(java.lang.String,java.lang.Object) -> addUnique
    void addAllUnique(java.lang.String,java.util.Collection) -> addAllUnique
    void remove(java.lang.String) -> remove
    void performRemove(java.lang.String) -> performRemove
    void removeAll(java.lang.String,java.util.Collection) -> removeAll
    void checkKeyIsMutable(java.lang.String) -> checkKeyIsMutable
    boolean isKeyMutable(java.lang.String) -> isKeyMutable
    boolean containsKey(java.lang.String) -> containsKey
    java.lang.String getString(java.lang.String) -> getString
    byte[] getBytes(java.lang.String) -> getBytes
    java.lang.Number getNumber(java.lang.String) -> getNumber
    org.json.JSONArray getJSONArray(java.lang.String) -> getJSONArray
    java.util.List getList(java.lang.String) -> getList
    java.util.Map getMap(java.lang.String) -> getMap
    org.json.JSONObject getJSONObject(java.lang.String) -> getJSONObject
    int getInt(java.lang.String) -> getInt
    double getDouble(java.lang.String) -> getDouble
    long getLong(java.lang.String) -> getLong
    boolean getBoolean(java.lang.String) -> getBoolean
    java.util.Date getDate(java.lang.String) -> getDate
    com.parse.ParseObject getParseObject(java.lang.String) -> getParseObject
    com.parse.ParseUser getParseUser(java.lang.String) -> getParseUser
    com.parse.ParseFile getParseFile(java.lang.String) -> getParseFile
    com.parse.ParseGeoPoint getParseGeoPoint(java.lang.String) -> getParseGeoPoint
    com.parse.ParseACL getACL() -> getACL
    com.parse.ParseACL getACL(boolean) -> getACL
    void setACL(com.parse.ParseACL) -> setACL
    boolean isDataAvailable() -> isDataAvailable
    boolean isDataAvailable(java.lang.String) -> isDataAvailable
    com.parse.ParseRelation getRelation(java.lang.String) -> getRelation
    java.lang.Object get(java.lang.String) -> get
    void checkGetAccess(java.lang.String) -> checkGetAccess
    boolean hasSameId(com.parse.ParseObject) -> hasSameId
    void registerSaveListener(com.parse.GetCallback) -> registerSaveListener
    void unregisterSaveListener(com.parse.GetCallback) -> unregisterSaveListener
    java.lang.String getClassName(java.lang.Class) -> getClassName
    void setDefaultValues() -> setDefaultValues
    boolean needsDefaultACL() -> needsDefaultACL
    void registerParseSubclasses() -> registerParseSubclasses
    void unregisterParseSubclasses() -> unregisterParseSubclasses
    void pinAllInBackground(java.lang.String,java.util.List,com.parse.SaveCallback) -> pinAllInBackground
    bolts.Task pinAllInBackground(java.lang.String,java.util.List) -> pinAllInBackground
    bolts.Task pinAllInBackground(java.lang.String,java.util.List,boolean) -> pinAllInBackground
    void pinAll(java.lang.String,java.util.List) -> pinAll
    void pinAllInBackground(java.util.List,com.parse.SaveCallback) -> pinAllInBackground
    bolts.Task pinAllInBackground(java.util.List) -> pinAllInBackground
    void pinAll(java.util.List) -> pinAll
    void unpinAllInBackground(java.lang.String,java.util.List,com.parse.DeleteCallback) -> unpinAllInBackground
    bolts.Task unpinAllInBackground(java.lang.String,java.util.List) -> unpinAllInBackground
    void unpinAll(java.lang.String,java.util.List) -> unpinAll
    void unpinAllInBackground(java.util.List,com.parse.DeleteCallback) -> unpinAllInBackground
    bolts.Task unpinAllInBackground(java.util.List) -> unpinAllInBackground
    void unpinAll(java.util.List) -> unpinAll
    void unpinAllInBackground(java.lang.String,com.parse.DeleteCallback) -> unpinAllInBackground
    bolts.Task unpinAllInBackground(java.lang.String) -> unpinAllInBackground
    void unpinAll(java.lang.String) -> unpinAll
    void unpinAllInBackground(com.parse.DeleteCallback) -> unpinAllInBackground
    bolts.Task unpinAllInBackground() -> unpinAllInBackground
    void unpinAll() -> unpinAll
    bolts.Task fetchFromLocalDatastoreAsync() -> fetchFromLocalDatastoreAsync
    void fetchFromLocalDatastoreInBackground(com.parse.GetCallback) -> fetchFromLocalDatastoreInBackground
    void fetchFromLocalDatastore() -> fetchFromLocalDatastore
    void pinInBackground(java.lang.String,com.parse.SaveCallback) -> pinInBackground
    bolts.Task pinInBackground(java.lang.String) -> pinInBackground
    bolts.Task pinInBackground(java.lang.String,boolean) -> pinInBackground
    void pin(java.lang.String) -> pin
    void pinInBackground(com.parse.SaveCallback) -> pinInBackground
    bolts.Task pinInBackground() -> pinInBackground
    void pin() -> pin
    void unpinInBackground(java.lang.String,com.parse.DeleteCallback) -> unpinInBackground
    bolts.Task unpinInBackground(java.lang.String) -> unpinInBackground
    void unpin(java.lang.String) -> unpin
    void unpinInBackground(com.parse.DeleteCallback) -> unpinInBackground
    bolts.Task unpinInBackground() -> unpinInBackground
    void unpin() -> unpin
    com.parse.ParseMulticastDelegate access$500(com.parse.ParseObject) -> access$500
    com.parse.ParseACL access$600(com.parse.ParseObject,boolean) -> access$600
    java.util.Map access$700(com.parse.ParseObject) -> access$700
    com.parse.ParseObjectController access$800() -> access$800
    com.parse.ParseObject$State access$900(com.parse.ParseObject) -> access$900
    bolts.Task access$1000(com.parse.ParseObject,java.lang.String,bolts.Task) -> access$1000
    bolts.Task access$1100(java.util.List,java.lang.String,bolts.Task) -> access$1100
    bolts.Task access$1200(java.util.List,java.lang.String) -> access$1200
    java.util.Map access$1300(com.parse.ParseObject) -> access$1300
    void access$1400(java.lang.Object,java.util.Collection,java.util.Collection,java.util.Set,java.util.Set) -> access$1400
    boolean access$1500(com.parse.ParseObject) -> access$1500
    bolts.Task access$1600(java.util.List,java.lang.String,bolts.Task) -> access$1600
    bolts.Task access$1700(java.lang.Object,java.lang.String) -> access$1700
    bolts.Task access$1800(java.util.List,com.parse.ParseUser,boolean,bolts.Task) -> access$1800
com.parse.ParseObject$1 -> com.parse.ParseObject$1:
    java.lang.String initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.parse.ParseObject$10 -> com.parse.ParseObject$10:
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$10$1 -> com.parse.ParseObject$10$1:
    com.parse.ParseACL val$acl -> val$acl
    com.parse.ParseUser val$user -> val$user
    com.parse.ParseObject$10 this$1 -> this$1
    java.lang.String then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$11 -> com.parse.ParseObject$11:
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$12 -> com.parse.ParseObject$12:
    com.parse.ParseOperationSet val$operations -> val$operations
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$12$1 -> com.parse.ParseObject$12$1:
    bolts.Task val$saveTask -> val$saveTask
    com.parse.ParseObject$12 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$13 -> com.parse.ParseObject$13:
    com.parse.ParseOperationSet val$operations -> val$operations
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$14 -> com.parse.ParseObject$14:
    com.parse.ParseOperationSet val$operationSet -> val$operationSet
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$15 -> com.parse.ParseObject$15:
    com.parse.ParseOperationSet val$operationSet -> val$operationSet
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$15$1 -> com.parse.ParseObject$15$1:
    com.parse.ParseObject$15 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$16 -> com.parse.ParseObject$16:
    boolean val$success -> val$success
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$17 -> com.parse.ParseObject$17:
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$18 -> com.parse.ParseObject$18:
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$19 -> com.parse.ParseObject$19:
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$2 -> com.parse.ParseObject$2:
    java.util.List val$childTasks -> val$childTasks
    bolts.Task val$fullTask -> val$fullTask
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$20 -> com.parse.ParseObject$20:
    com.parse.OfflineStore val$store -> val$store
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$21 -> com.parse.ParseObject$21:
    com.parse.ParseObject$State val$result -> val$result
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$22 -> com.parse.ParseObject$22:
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$23 -> com.parse.ParseObject$23:
    com.parse.OfflineStore val$store -> val$store
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$24 -> com.parse.ParseObject$24:
    com.parse.ParseObject this$0 -> this$0
    com.parse.ParseObject then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$25 -> com.parse.ParseObject$25:
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$26 -> com.parse.ParseObject$26:
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$27 -> com.parse.ParseObject$27:
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$27$1 -> com.parse.ParseObject$27$1:
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ParseObject$27 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$28 -> com.parse.ParseObject$28:
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$28$1 -> com.parse.ParseObject$28$1:
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ParseObject$28 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$29 -> com.parse.ParseObject$29:
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$3 -> com.parse.ParseObject$3:
    bolts.Task$TaskCompletionSource val$readyToStart -> val$readyToStart
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$30 -> com.parse.ParseObject$30:
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$31 -> com.parse.ParseObject$31:
    com.parse.OfflineStore val$store -> val$store
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$32 -> com.parse.ParseObject$32:
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$32$1 -> com.parse.ParseObject$32$1:
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ParseObject$32 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$33 -> com.parse.ParseObject$33:
    java.util.List val$uniqueObjects -> val$uniqueObjects
    java.lang.String val$sessionToken -> val$sessionToken
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$34 -> com.parse.ParseObject$34:
    java.util.List val$uniqueObjects -> val$uniqueObjects
    java.lang.String val$sessionToken -> val$sessionToken
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$34$1 -> com.parse.ParseObject$34$1:
    com.parse.ParseObject val$object -> val$object
    com.parse.ParseObject$34 this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$34$1$1 -> com.parse.ParseObject$34$1$1:
    bolts.Task val$batchTask -> val$batchTask
    com.parse.ParseObject$34$1 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$35 -> com.parse.ParseObject$35:
    java.util.List val$objects -> val$objects
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$36 -> com.parse.ParseObject$36:
    java.util.Collection val$dirtyFiles -> val$dirtyFiles
    java.util.Collection val$dirtyChildren -> val$dirtyChildren
    java.util.Set val$alreadySeen -> val$alreadySeen
    java.util.Set val$alreadySeenNew -> val$alreadySeenNew
    boolean visit(java.lang.Object) -> visit
com.parse.ParseObject$37 -> com.parse.ParseObject$37:
    bolts.Capture val$result -> val$result
    com.parse.ParseObject this$0 -> this$0
    boolean visit(java.lang.Object) -> visit
com.parse.ParseObject$38 -> com.parse.ParseObject$38:
    java.util.concurrent.atomic.AtomicBoolean val$filesComplete -> val$filesComplete
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$39 -> com.parse.ParseObject$39:
    java.util.concurrent.atomic.AtomicBoolean val$usersComplete -> val$usersComplete
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$4 -> com.parse.ParseObject$4:
    java.util.Map val$fetchedObjects -> val$fetchedObjects
    com.parse.ParseObject this$0 -> this$0
    boolean visit(java.lang.Object) -> visit
com.parse.ParseObject$40 -> com.parse.ParseObject$40:
    bolts.Capture val$remaining -> val$remaining
    java.lang.Boolean call() -> call
    java.lang.Object call() -> call
com.parse.ParseObject$41 -> com.parse.ParseObject$41:
    bolts.Capture val$remaining -> val$remaining
    java.util.concurrent.atomic.AtomicBoolean val$filesComplete -> val$filesComplete
    java.util.concurrent.atomic.AtomicBoolean val$usersComplete -> val$usersComplete
    java.lang.String val$sessionToken -> val$sessionToken
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$41$1 -> com.parse.ParseObject$41$1:
    java.util.List val$current -> val$current
    com.parse.ParseObject$41 this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$42 -> com.parse.ParseObject$42:
    java.util.List val$uniqueObjects -> val$uniqueObjects
    java.lang.String val$sessionToken -> val$sessionToken
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$42$1 -> com.parse.ParseObject$42$1:
    com.parse.ParseObject val$object -> val$object
    com.parse.ParseOperationSet val$operations -> val$operations
    com.parse.ParseObject$42 this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$42$1$1 -> com.parse.ParseObject$42$1$1:
    bolts.Task val$batchTask -> val$batchTask
    com.parse.ParseObject$42$1 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$43 -> com.parse.ParseObject$43:
    java.util.List val$objects -> val$objects
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$44 -> com.parse.ParseObject$44:
    java.util.List val$objects -> val$objects
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$44$1 -> com.parse.ParseObject$44$1:
    com.parse.ParseACL val$acl -> val$acl
    com.parse.ParseUser val$user -> val$user
    com.parse.ParseObject$44 this$0 -> this$0
    java.lang.String then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$45 -> com.parse.ParseObject$45:
    java.util.List val$objects -> val$objects
    boolean val$onlyIfNeeded -> val$onlyIfNeeded
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$45$1 -> com.parse.ParseObject$45$1:
    com.parse.ParseUser val$user -> val$user
    com.parse.ParseObject$45 this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$46 -> com.parse.ParseObject$46:
    java.util.List val$objects -> val$objects
    boolean val$onlyIfNeeded -> val$onlyIfNeeded
    java.util.List then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$47 -> com.parse.ParseObject$47:
    com.parse.ParseQuery val$query -> val$query
    com.parse.ParseUser val$user -> val$user
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$48 -> com.parse.ParseObject$48:
    com.parse.ParseObject val$object -> val$object
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$49 -> com.parse.ParseObject$49:
    java.lang.String val$name -> val$name
    java.util.List val$objects -> val$objects
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$5 -> com.parse.ParseObject$5:
    com.parse.OfflineStore val$store -> val$store
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$50 -> com.parse.ParseObject$50:
    java.lang.String val$name -> val$name
    java.util.List val$objects -> val$objects
    boolean val$includeAllChildren -> val$includeAllChildren
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$6 -> com.parse.ParseObject$6:
    com.parse.ParseObject$State val$result -> val$result
    com.parse.ParseOperationSet val$operationsBeforeSave -> val$operationsBeforeSave
    com.parse.ParseObject this$0 -> this$0
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$7 -> com.parse.ParseObject$7:
    com.parse.OfflineStore val$store -> val$store
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$8 -> com.parse.ParseObject$8:
    com.parse.ParseObject this$0 -> this$0
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$9 -> com.parse.ParseObject$9:
    com.parse.ParseObject this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseObject$State -> com.parse.ParseObject$State:
    java.lang.String className -> className
    java.lang.String objectId -> objectId
    long createdAt -> createdAt
    long updatedAt -> updatedAt
    java.util.Map serverData -> serverData
    boolean isComplete -> isComplete
    com.parse.ParseObject$State$Init newBuilder(java.lang.String) -> newBuilder
    com.parse.ParseObject$State$Init newBuilder() -> newBuilder
    java.lang.String className() -> className
    java.lang.String objectId() -> objectId
    long createdAt() -> createdAt
    long updatedAt() -> updatedAt
    boolean isComplete() -> isComplete
    java.lang.Object get(java.lang.String) -> get
    java.util.Set keySet() -> keySet
    java.lang.String toString() -> toString
com.parse.ParseObject$State$Builder -> com.parse.ParseObject$State$Builder:
    com.parse.ParseObject$State$Builder self() -> self
    com.parse.ParseObject$State build() -> build
    com.parse.ParseObject$State$Init self() -> self
com.parse.ParseObject$State$Init -> com.parse.ParseObject$State$Init:
    java.lang.String className -> className
    java.lang.String objectId -> objectId
    long createdAt -> createdAt
    long updatedAt -> updatedAt
    boolean isComplete -> isComplete
    java.util.Map serverData -> serverData
    com.parse.ParseObject$State$Init self() -> self
    com.parse.ParseObject$State build() -> build
    com.parse.ParseObject$State$Init objectId(java.lang.String) -> objectId
    com.parse.ParseObject$State$Init createdAt(java.util.Date) -> createdAt
    com.parse.ParseObject$State$Init createdAt(long) -> createdAt
    com.parse.ParseObject$State$Init updatedAt(java.util.Date) -> updatedAt
    com.parse.ParseObject$State$Init updatedAt(long) -> updatedAt
    com.parse.ParseObject$State$Init isComplete(boolean) -> isComplete
    com.parse.ParseObject$State$Init put(java.lang.String,java.lang.Object) -> put
    com.parse.ParseObject$State$Init remove(java.lang.String) -> remove
    com.parse.ParseObject$State$Init clear() -> clear
    com.parse.ParseObject$State$Init apply(com.parse.ParseObject$State) -> apply
    com.parse.ParseObject$State$Init apply(com.parse.ParseOperationSet) -> apply
    java.lang.String access$000(com.parse.ParseObject$State$Init) -> access$000
    java.lang.String access$100(com.parse.ParseObject$State$Init) -> access$100
    long access$200(com.parse.ParseObject$State$Init) -> access$200
    long access$300(com.parse.ParseObject$State$Init) -> access$300
    boolean access$400(com.parse.ParseObject$State$Init) -> access$400
com.parse.ParseObjectCoder -> com.parse.ParseObjectCoder:
    java.lang.String KEY_OBJECT_ID -> KEY_OBJECT_ID
    java.lang.String KEY_CLASS_NAME -> KEY_CLASS_NAME
    java.lang.String KEY_ACL -> KEY_ACL
    java.lang.String KEY_CREATED_AT -> KEY_CREATED_AT
    java.lang.String KEY_UPDATED_AT -> KEY_UPDATED_AT
    com.parse.ParseObjectCoder INSTANCE -> INSTANCE
    com.parse.ParseObjectCoder get() -> get
    org.json.JSONObject encode(com.parse.ParseObject$State,com.parse.ParseOperationSet,com.parse.ParseEncoder) -> encode
    com.parse.ParseObject$State$Init decode(com.parse.ParseObject$State$Init,org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseObjectController -> com.parse.ParseObjectController:
    bolts.Task fetchAsync(com.parse.ParseObject$State,java.lang.String,com.parse.ParseDecoder) -> fetchAsync
    bolts.Task saveAsync(com.parse.ParseObject$State,com.parse.ParseOperationSet,java.lang.String,com.parse.ParseDecoder) -> saveAsync
    java.util.List saveAllAsync(java.util.List,java.util.List,java.lang.String,java.util.List) -> saveAllAsync
    bolts.Task deleteAsync(com.parse.ParseObject$State,java.lang.String) -> deleteAsync
    java.util.List deleteAllAsync(java.util.List,java.lang.String) -> deleteAllAsync
com.parse.ParseObjectCurrentCoder -> com.parse.ParseObjectCurrentCoder:
    java.lang.String KEY_OBJECT_ID -> KEY_OBJECT_ID
    java.lang.String KEY_CLASS_NAME -> KEY_CLASS_NAME
    java.lang.String KEY_CREATED_AT -> KEY_CREATED_AT
    java.lang.String KEY_UPDATED_AT -> KEY_UPDATED_AT
    java.lang.String KEY_DATA -> KEY_DATA
    java.lang.String KEY_OLD_OBJECT_ID -> KEY_OLD_OBJECT_ID
    java.lang.String KEY_OLD_CREATED_AT -> KEY_OLD_CREATED_AT
    java.lang.String KEY_OLD_UPDATED_AT -> KEY_OLD_UPDATED_AT
    java.lang.String KEY_OLD_POINTERS -> KEY_OLD_POINTERS
    com.parse.ParseObjectCurrentCoder INSTANCE -> INSTANCE
    com.parse.ParseObjectCurrentCoder get() -> get
    org.json.JSONObject encode(com.parse.ParseObject$State,com.parse.ParseOperationSet,com.parse.ParseEncoder) -> encode
    com.parse.ParseObject$State$Init decode(com.parse.ParseObject$State$Init,org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseObjectCurrentController -> com.parse.ParseObjectCurrentController:
    bolts.Task setAsync(com.parse.ParseObject) -> setAsync
    bolts.Task getAsync() -> getAsync
    bolts.Task existsAsync() -> existsAsync
    boolean isCurrent(com.parse.ParseObject) -> isCurrent
    void clearFromMemory() -> clearFromMemory
    void clearFromDisk() -> clearFromDisk
com.parse.ParseObjectStore -> com.parse.ParseObjectStore:
    bolts.Task getAsync() -> getAsync
    bolts.Task setAsync(com.parse.ParseObject) -> setAsync
    bolts.Task existsAsync() -> existsAsync
    bolts.Task deleteAsync() -> deleteAsync
com.parse.ParseOkHttpClient -> com.parse.ParseOkHttpClient:
    java.lang.String OKHTTP_GET -> OKHTTP_GET
    java.lang.String OKHTTP_POST -> OKHTTP_POST
    java.lang.String OKHTTP_PUT -> OKHTTP_PUT
    java.lang.String OKHTTP_DELETE -> OKHTTP_DELETE
    com.squareup.okhttp.OkHttpClient okHttpClient -> okHttpClient
    com.parse.http.ParseHttpResponse executeInternal(com.parse.http.ParseHttpRequest) -> executeInternal
    com.parse.http.ParseHttpResponse getResponse(com.squareup.okhttp.Response) -> getResponse
    com.squareup.okhttp.Request getRequest(com.parse.http.ParseHttpRequest) -> getRequest
    com.parse.http.ParseHttpRequest getParseHttpRequest(com.squareup.okhttp.Request) -> getParseHttpRequest
    void addExternalInterceptor(com.parse.http.ParseNetworkInterceptor) -> addExternalInterceptor
    com.parse.http.ParseHttpResponse getResponse(java.lang.Object) -> getResponse
    java.lang.Object getRequest(com.parse.http.ParseHttpRequest) -> getRequest
    com.parse.http.ParseHttpRequest access$000(com.parse.ParseOkHttpClient,com.squareup.okhttp.Request) -> access$000
com.parse.ParseOkHttpClient$1 -> com.parse.ParseOkHttpClient$1:
    com.parse.http.ParseNetworkInterceptor val$parseNetworkInterceptor -> val$parseNetworkInterceptor
    com.parse.ParseOkHttpClient this$0 -> this$0
    com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor$Chain) -> intercept
com.parse.ParseOkHttpClient$1$1 -> com.parse.ParseOkHttpClient$1$1:
    com.parse.http.ParseHttpRequest val$parseRequest -> val$parseRequest
    com.squareup.okhttp.Interceptor$Chain val$okHttpChain -> val$okHttpChain
    bolts.Capture val$okHttpResponseCapture -> val$okHttpResponseCapture
    com.parse.ParseOkHttpClient$1 this$1 -> this$1
    com.parse.http.ParseHttpRequest getRequest() -> getRequest
    com.parse.http.ParseHttpResponse proceed(com.parse.http.ParseHttpRequest) -> proceed
com.parse.ParseOkHttpClient$1$2 -> com.parse.ParseOkHttpClient$1$2:
    com.parse.http.ParseHttpResponse val$parseResponse -> val$parseResponse
    com.parse.ParseOkHttpClient$1 this$1 -> this$1
    com.squareup.okhttp.MediaType contentType() -> contentType
    long contentLength() -> contentLength
    okio.BufferedSource source() -> source
com.parse.ParseOkHttpClient$2 -> com.parse.ParseOkHttpClient$2:
    int[] $SwitchMap$com$parse$http$ParseHttpRequest$Method -> $SwitchMap$com$parse$http$ParseHttpRequest$Method
com.parse.ParseOkHttpClient$ParseOkHttpRequestBody -> com.parse.ParseOkHttpClient$ParseOkHttpRequestBody:
    com.parse.http.ParseHttpBody parseBody -> parseBody
    long contentLength() -> contentLength
    com.squareup.okhttp.MediaType contentType() -> contentType
    void writeTo(okio.BufferedSink) -> writeTo
    com.parse.http.ParseHttpBody getParseHttpBody() -> getParseHttpBody
com.parse.ParseOperationSet -> com.parse.ParseOperationSet:
    long serialVersionUID -> serialVersionUID
    java.lang.String REST_KEY_IS_SAVE_EVENTUALLY -> REST_KEY_IS_SAVE_EVENTUALLY
    java.lang.String REST_KEY_UUID -> REST_KEY_UUID
    java.lang.String uuid -> uuid
    boolean isSaveEventually -> isSaveEventually
    java.lang.String getUUID() -> getUUID
    void setIsSaveEventually(boolean) -> setIsSaveEventually
    boolean isSaveEventually() -> isSaveEventually
    void mergeFrom(com.parse.ParseOperationSet) -> mergeFrom
    org.json.JSONObject toRest(com.parse.ParseEncoder) -> toRest
    com.parse.ParseOperationSet fromRest(org.json.JSONObject,com.parse.ParseDecoder) -> fromRest
com.parse.ParsePin -> com.parse.ParsePin:
    java.lang.String KEY_NAME -> KEY_NAME
    java.lang.String KEY_OBJECTS -> KEY_OBJECTS
    boolean needsDefaultACL() -> needsDefaultACL
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.util.List getObjects() -> getObjects
    void setObjects(java.util.List) -> setObjects
com.parse.ParsePinningEventuallyQueue -> com.parse.ParsePinningEventuallyQueue:
    java.lang.String TAG -> TAG
    java.util.HashMap pendingOperationSetUUIDTasks -> pendingOperationSetUUIDTasks
    com.parse.TaskQueue taskQueue -> taskQueue
    com.parse.TaskQueue operationSetTaskQueue -> operationSetTaskQueue
    java.util.ArrayList eventuallyPinUUIDQueue -> eventuallyPinUUIDQueue
    bolts.Task$TaskCompletionSource connectionTaskCompletionSource -> connectionTaskCompletionSource
    java.lang.Object connectionLock -> connectionLock
    com.parse.ConnectivityNotifier notifier -> notifier
    com.parse.ConnectivityNotifier$ConnectivityListener listener -> listener
    java.lang.Object taskQueueSyncLock -> taskQueueSyncLock
    java.util.HashMap pendingEventuallyTasks -> pendingEventuallyTasks
    java.util.HashMap uuidToOperationSet -> uuidToOperationSet
    java.util.HashMap uuidToEventuallyPin -> uuidToEventuallyPin
    void onDestroy() -> onDestroy
    void setConnected(boolean) -> setConnected
    int pendingCount() -> pendingCount
    bolts.Task pendingCountAsync() -> pendingCountAsync
    bolts.Task pendingCountAsync(bolts.Task) -> pendingCountAsync
    void pause() -> pause
    void resume() -> resume
    bolts.Task waitForConnectionAsync() -> waitForConnectionAsync
    bolts.Task enqueueEventuallyAsync(com.parse.ParseRESTCommand,com.parse.ParseObject) -> enqueueEventuallyAsync
    bolts.Task enqueueEventuallyAsync(com.parse.ParseRESTCommand,com.parse.ParseObject,bolts.Task,bolts.Task$TaskCompletionSource) -> enqueueEventuallyAsync
    bolts.Task populateQueueAsync() -> populateQueueAsync
    bolts.Task populateQueueAsync(bolts.Task) -> populateQueueAsync
    bolts.Task runEventuallyAsync(com.parse.EventuallyPin) -> runEventuallyAsync
    bolts.Task runEventuallyAsync(com.parse.EventuallyPin,bolts.Task) -> runEventuallyAsync
    bolts.Task waitForOperationSetAndEventuallyPin(com.parse.ParseOperationSet,com.parse.EventuallyPin) -> waitForOperationSetAndEventuallyPin
    bolts.Task process(com.parse.EventuallyPin,com.parse.ParseOperationSet) -> process
    void simulateReboot() -> simulateReboot
    void clear() -> clear
    bolts.Task whenAll(java.util.Collection) -> whenAll
    bolts.Task access$100(com.parse.ParsePinningEventuallyQueue,com.parse.ParseRESTCommand,com.parse.ParseObject,bolts.Task,bolts.Task$TaskCompletionSource) -> access$100
    java.util.HashMap access$200(com.parse.ParsePinningEventuallyQueue) -> access$200
    bolts.Task access$300(com.parse.ParsePinningEventuallyQueue) -> access$300
    bolts.Task access$400(com.parse.ParsePinningEventuallyQueue,bolts.Task) -> access$400
    bolts.Task access$500(com.parse.ParsePinningEventuallyQueue,com.parse.EventuallyPin) -> access$500
    java.util.ArrayList access$600(com.parse.ParsePinningEventuallyQueue) -> access$600
    bolts.Task access$700(com.parse.ParsePinningEventuallyQueue,com.parse.EventuallyPin,bolts.Task) -> access$700
    bolts.Task access$800(com.parse.ParsePinningEventuallyQueue) -> access$800
    java.lang.Object access$900(com.parse.ParsePinningEventuallyQueue) -> access$900
    java.util.HashMap access$1000(com.parse.ParsePinningEventuallyQueue) -> access$1000
    java.util.HashMap access$1100(com.parse.ParsePinningEventuallyQueue) -> access$1100
    java.util.HashMap access$1200(com.parse.ParsePinningEventuallyQueue) -> access$1200
    bolts.Task access$1300(com.parse.ParsePinningEventuallyQueue,com.parse.EventuallyPin,com.parse.ParseOperationSet) -> access$1300
com.parse.ParsePinningEventuallyQueue$1 -> com.parse.ParsePinningEventuallyQueue$1:
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    void networkConnectivityStatusChanged(android.content.Context,android.content.Intent) -> networkConnectivityStatusChanged
com.parse.ParsePinningEventuallyQueue$10 -> com.parse.ParsePinningEventuallyQueue$10:
    com.parse.EventuallyPin val$eventuallyPin -> val$eventuallyPin
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$10$1 -> com.parse.ParsePinningEventuallyQueue$10$1:
    com.parse.ParsePinningEventuallyQueue$10 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$11 -> com.parse.ParsePinningEventuallyQueue$11:
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$12 -> com.parse.ParsePinningEventuallyQueue$12:
    java.lang.String val$uuid -> val$uuid
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$13 -> com.parse.ParsePinningEventuallyQueue$13:
    com.parse.EventuallyPin val$eventuallyPin -> val$eventuallyPin
    com.parse.ParseOperationSet val$operationSet -> val$operationSet
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$13$1 -> com.parse.ParsePinningEventuallyQueue$13$1:
    int val$type -> val$type
    com.parse.ParseObject val$object -> val$object
    com.parse.ParsePinningEventuallyQueue$13 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$13$1$1 -> com.parse.ParsePinningEventuallyQueue$13$1$1:
    bolts.Task val$executeTask -> val$executeTask
    com.parse.ParsePinningEventuallyQueue$13$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$13$1$2 -> com.parse.ParsePinningEventuallyQueue$13$1$2:
    bolts.Task val$executeTask -> val$executeTask
    com.parse.ParsePinningEventuallyQueue$13$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$14 -> com.parse.ParsePinningEventuallyQueue$14:
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$14$1 -> com.parse.ParsePinningEventuallyQueue$14$1:
    com.parse.ParsePinningEventuallyQueue$14 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$14$1$1 -> com.parse.ParsePinningEventuallyQueue$14$1$1:
    com.parse.ParsePinningEventuallyQueue$14$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$15 -> com.parse.ParsePinningEventuallyQueue$15:
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$2 -> com.parse.ParsePinningEventuallyQueue$2:
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$2$1 -> com.parse.ParsePinningEventuallyQueue$2$1:
    com.parse.ParsePinningEventuallyQueue$2 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$3 -> com.parse.ParsePinningEventuallyQueue$3:
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$3$1 -> com.parse.ParsePinningEventuallyQueue$3$1:
    com.parse.ParsePinningEventuallyQueue$3 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$4 -> com.parse.ParsePinningEventuallyQueue$4:
    com.parse.ParseRESTCommand val$command -> val$command
    com.parse.ParseObject val$object -> val$object
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$5 -> com.parse.ParsePinningEventuallyQueue$5:
    com.parse.ParseObject val$object -> val$object
    com.parse.ParseRESTCommand val$command -> val$command
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$5$1 -> com.parse.ParsePinningEventuallyQueue$5$1:
    com.parse.ParsePinningEventuallyQueue$5 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$5$1$1 -> com.parse.ParsePinningEventuallyQueue$5$1$1:
    com.parse.ParsePinningEventuallyQueue$5$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$6 -> com.parse.ParsePinningEventuallyQueue$6:
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$7 -> com.parse.ParsePinningEventuallyQueue$7:
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$8 -> com.parse.ParsePinningEventuallyQueue$8:
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$9 -> com.parse.ParsePinningEventuallyQueue$9:
    com.parse.EventuallyPin val$eventuallyPin -> val$eventuallyPin
    java.lang.String val$uuid -> val$uuid
    com.parse.ParsePinningEventuallyQueue this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$9$1 -> com.parse.ParsePinningEventuallyQueue$9$1:
    com.parse.ParsePinningEventuallyQueue$9 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePinningEventuallyQueue$PauseException -> com.parse.ParsePinningEventuallyQueue$PauseException:
com.parse.ParsePlugins -> com.parse.ParsePlugins:
    java.lang.String INSTALLATION_ID_LOCATION -> INSTALLATION_ID_LOCATION
    java.lang.Object LOCK -> LOCK
    com.parse.ParsePlugins instance -> instance
    java.lang.Object lock -> lock
    java.lang.String applicationId -> applicationId
    java.lang.String clientKey -> clientKey
    com.parse.ParseHttpClient restClient -> restClient
    com.parse.InstallationId installationId -> installationId
    java.io.File parseDir -> parseDir
    java.io.File cacheDir -> cacheDir
    java.io.File filesDir -> filesDir
    void initialize(java.lang.String,java.lang.String) -> initialize
    void set(com.parse.ParsePlugins) -> set
    com.parse.ParsePlugins get() -> get
    void reset() -> reset
    java.lang.String applicationId() -> applicationId
    java.lang.String clientKey() -> clientKey
    com.parse.ParseHttpClient newHttpClient() -> newHttpClient
    com.parse.ParseHttpClient restClient() -> restClient
    java.lang.String userAgent() -> userAgent
    com.parse.InstallationId installationId() -> installationId
    java.io.File getParseDir() -> getParseDir
    java.io.File getCacheDir() -> getCacheDir
    java.io.File getFilesDir() -> getFilesDir
    java.io.File createFileDir(java.io.File) -> createFileDir
    java.lang.String access$000(com.parse.ParsePlugins) -> access$000
    java.lang.String access$100(com.parse.ParsePlugins) -> access$100
    java.io.File access$300(java.io.File) -> access$300
com.parse.ParsePlugins$1 -> com.parse.ParsePlugins$1:
    com.parse.ParsePlugins this$0 -> this$0
    com.parse.http.ParseHttpResponse intercept(com.parse.http.ParseNetworkInterceptor$Chain) -> intercept
com.parse.ParsePlugins$Android -> com.parse.ParsePlugins$Android:
    android.content.Context applicationContext -> applicationContext
    void initialize(android.content.Context,java.lang.String,java.lang.String) -> initialize
    com.parse.ParsePlugins$Android get() -> get
    android.content.Context applicationContext() -> applicationContext
    com.parse.ParseHttpClient newHttpClient() -> newHttpClient
    java.lang.String userAgent() -> userAgent
    java.io.File getParseDir() -> getParseDir
    java.io.File getCacheDir() -> getCacheDir
    java.io.File getFilesDir() -> getFilesDir
com.parse.ParsePush -> com.parse.ParsePush:
    java.lang.String KEY_DATA_MESSAGE -> KEY_DATA_MESSAGE
    java.lang.String TAG -> TAG
    com.parse.ParsePush$State$Builder builder -> builder
    com.parse.ParsePushController getPushController() -> getPushController
    com.parse.ParsePushChannelsController getPushChannelsController() -> getPushChannelsController
    void checkArgument(boolean,java.lang.Object) -> checkArgument
    bolts.Task subscribeInBackground(java.lang.String) -> subscribeInBackground
    void subscribeInBackground(java.lang.String,com.parse.SaveCallback) -> subscribeInBackground
    bolts.Task unsubscribeInBackground(java.lang.String) -> unsubscribeInBackground
    void unsubscribeInBackground(java.lang.String,com.parse.SaveCallback) -> unsubscribeInBackground
    bolts.Task sendMessageInBackground(java.lang.String,com.parse.ParseQuery) -> sendMessageInBackground
    void sendMessageInBackground(java.lang.String,com.parse.ParseQuery,com.parse.SendCallback) -> sendMessageInBackground
    bolts.Task sendDataInBackground(org.json.JSONObject,com.parse.ParseQuery) -> sendDataInBackground
    void sendDataInBackground(org.json.JSONObject,com.parse.ParseQuery,com.parse.SendCallback) -> sendDataInBackground
    void setChannel(java.lang.String) -> setChannel
    void setChannels(java.util.Collection) -> setChannels
    void setQuery(com.parse.ParseQuery) -> setQuery
    void setExpirationTime(long) -> setExpirationTime
    void setExpirationTimeInterval(long) -> setExpirationTimeInterval
    void clearExpiration() -> clearExpiration
    void setPushToIOS(boolean) -> setPushToIOS
    void setPushToAndroid(boolean) -> setPushToAndroid
    void setData(org.json.JSONObject) -> setData
    void setMessage(java.lang.String) -> setMessage
    bolts.Task sendInBackground() -> sendInBackground
    void send() -> send
    void sendInBackground(com.parse.SendCallback) -> sendInBackground
    void access$000(boolean,java.lang.Object) -> access$000
com.parse.ParsePush$1 -> com.parse.ParsePush$1:
    com.parse.ParsePush$State val$state -> val$state
    com.parse.ParsePush this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePush$State -> com.parse.ParsePush$State:
    java.util.Set channelSet -> channelSet
    com.parse.ParseQuery$State queryState -> queryState
    java.lang.Long expirationTime -> expirationTime
    java.lang.Long expirationTimeInterval -> expirationTimeInterval
    java.lang.Boolean pushToIOS -> pushToIOS
    java.lang.Boolean pushToAndroid -> pushToAndroid
    org.json.JSONObject data -> data
    java.util.Set channelSet() -> channelSet
    com.parse.ParseQuery$State queryState() -> queryState
    java.lang.Long expirationTime() -> expirationTime
    java.lang.Long expirationTimeInterval() -> expirationTimeInterval
    java.lang.Boolean pushToIOS() -> pushToIOS
    java.lang.Boolean pushToAndroid() -> pushToAndroid
    org.json.JSONObject data() -> data
com.parse.ParsePush$State$Builder -> com.parse.ParsePush$State$Builder:
    java.util.Set channelSet -> channelSet
    com.parse.ParseQuery query -> query
    java.lang.Long expirationTime -> expirationTime
    java.lang.Long expirationTimeInterval -> expirationTimeInterval
    java.lang.Boolean pushToIOS -> pushToIOS
    java.lang.Boolean pushToAndroid -> pushToAndroid
    org.json.JSONObject data -> data
    com.parse.ParsePush$State$Builder expirationTime(java.lang.Long) -> expirationTime
    com.parse.ParsePush$State$Builder expirationTimeInterval(java.lang.Long) -> expirationTimeInterval
    com.parse.ParsePush$State$Builder pushToIOS(java.lang.Boolean) -> pushToIOS
    com.parse.ParsePush$State$Builder pushToAndroid(java.lang.Boolean) -> pushToAndroid
    com.parse.ParsePush$State$Builder data(org.json.JSONObject) -> data
    com.parse.ParsePush$State$Builder channelSet(java.util.Collection) -> channelSet
    com.parse.ParsePush$State$Builder query(com.parse.ParseQuery) -> query
    com.parse.ParsePush$State build() -> build
    java.util.Set access$200(com.parse.ParsePush$State$Builder) -> access$200
    com.parse.ParseQuery access$300(com.parse.ParsePush$State$Builder) -> access$300
    java.lang.Long access$400(com.parse.ParsePush$State$Builder) -> access$400
    java.lang.Long access$500(com.parse.ParsePush$State$Builder) -> access$500
    java.lang.Boolean access$600(com.parse.ParsePush$State$Builder) -> access$600
    java.lang.Boolean access$700(com.parse.ParsePush$State$Builder) -> access$700
    org.json.JSONObject access$800(com.parse.ParsePush$State$Builder) -> access$800
com.parse.ParsePushBroadcastReceiver -> com.parse.ParsePushBroadcastReceiver:
    java.lang.String TAG -> TAG
    java.lang.String KEY_PUSH_CHANNEL -> KEY_PUSH_CHANNEL
    java.lang.String KEY_PUSH_DATA -> KEY_PUSH_DATA
    java.lang.String ACTION_PUSH_RECEIVE -> ACTION_PUSH_RECEIVE
    java.lang.String ACTION_PUSH_OPEN -> ACTION_PUSH_OPEN
    java.lang.String ACTION_PUSH_DELETE -> ACTION_PUSH_DELETE
    java.lang.String PROPERTY_PUSH_ICON -> PROPERTY_PUSH_ICON
    int SMALL_NOTIFICATION_MAX_CHARACTER_LIMIT -> SMALL_NOTIFICATION_MAX_CHARACTER_LIMIT
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void onPushReceive(android.content.Context,android.content.Intent) -> onPushReceive
    void onPushDismiss(android.content.Context,android.content.Intent) -> onPushDismiss
    void onPushOpen(android.content.Context,android.content.Intent) -> onPushOpen
    java.lang.Class getActivity(android.content.Context,android.content.Intent) -> getActivity
    int getSmallIconId(android.content.Context,android.content.Intent) -> getSmallIconId
    android.graphics.Bitmap getLargeIcon(android.content.Context,android.content.Intent) -> getLargeIcon
    org.json.JSONObject getPushData(android.content.Intent) -> getPushData
    android.app.Notification getNotification(android.content.Context,android.content.Intent) -> getNotification
com.parse.ParsePushChannelsController -> com.parse.ParsePushChannelsController:
    java.lang.String TAG -> TAG
    boolean loggedManifestError -> loggedManifestError
    com.parse.ParseCurrentInstallationController getCurrentInstallationController() -> getCurrentInstallationController
    bolts.Task subscribeInBackground(java.lang.String) -> subscribeInBackground
    bolts.Task unsubscribeInBackground(java.lang.String) -> unsubscribeInBackground
    void checkManifestAndLogErrorIfNecessary() -> checkManifestAndLogErrorIfNecessary
com.parse.ParsePushChannelsController$1 -> com.parse.ParsePushChannelsController$1:
    java.lang.String val$channel -> val$channel
    com.parse.ParsePushChannelsController this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePushChannelsController$2 -> com.parse.ParsePushChannelsController$2:
    java.lang.String val$channel -> val$channel
    com.parse.ParsePushChannelsController this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParsePushController -> com.parse.ParsePushController:
    java.lang.String DEVICE_TYPE_IOS -> DEVICE_TYPE_IOS
    java.lang.String DEVICE_TYPE_ANDROID -> DEVICE_TYPE_ANDROID
    com.parse.ParseHttpClient restClient -> restClient
    bolts.Task sendInBackground(com.parse.ParsePush$State,java.lang.String) -> sendInBackground
    com.parse.ParseRESTCommand buildRESTSendPushCommand(com.parse.ParsePush$State,java.lang.String) -> buildRESTSendPushCommand
com.parse.ParseQuery -> com.parse.ParseQuery:
    com.parse.ParseQuery$State$Builder builder -> builder
    com.parse.ParseUser user -> user
    java.lang.Object lock -> lock
    boolean isRunning -> isRunning
    bolts.Task$TaskCompletionSource cts -> cts
    com.parse.ParseQueryController getQueryController() -> getQueryController
    com.parse.ParseQuery or(java.util.List) -> or
    com.parse.ParseQuery getQuery(java.lang.Class) -> getQuery
    com.parse.ParseQuery getQuery(java.lang.String) -> getQuery
    com.parse.ParseQuery getUserQuery() -> getUserQuery
    void throwIfLDSEnabled() -> throwIfLDSEnabled
    void throwIfLDSDisabled() -> throwIfLDSDisabled
    void throwIfLDSEnabled(boolean) -> throwIfLDSEnabled
    com.parse.ParseQuery$State$Builder getBuilder() -> getBuilder
    com.parse.ParseQuery setUser(com.parse.ParseUser) -> setUser
    bolts.Task getUserAsync(com.parse.ParseQuery$State) -> getUserAsync
    void checkIfRunning() -> checkIfRunning
    void checkIfRunning(boolean) -> checkIfRunning
    void cancel() -> cancel
    java.util.List find() -> find
    com.parse.ParseObject getFirst() -> getFirst
    com.parse.ParseQuery setCachePolicy(com.parse.ParseQuery$CachePolicy) -> setCachePolicy
    com.parse.ParseQuery$CachePolicy getCachePolicy() -> getCachePolicy
    com.parse.ParseQuery fromNetwork() -> fromNetwork
    boolean isFromNetwork() -> isFromNetwork
    com.parse.ParseQuery fromLocalDatastore() -> fromLocalDatastore
    com.parse.ParseQuery fromPin() -> fromPin
    com.parse.ParseQuery fromPin(java.lang.String) -> fromPin
    com.parse.ParseQuery ignoreACLs() -> ignoreACLs
    com.parse.ParseQuery setMaxCacheAge(long) -> setMaxCacheAge
    long getMaxCacheAge() -> getMaxCacheAge
    bolts.Task doWithRunningCheck(java.util.concurrent.Callable) -> doWithRunningCheck
    bolts.Task findInBackground() -> findInBackground
    void findInBackground(com.parse.FindCallback) -> findInBackground
    bolts.Task findAsync(com.parse.ParseQuery$State) -> findAsync
    bolts.Task findAsync(com.parse.ParseQuery$State,com.parse.ParseUser,bolts.Task) -> findAsync
    bolts.Task getFirstInBackground() -> getFirstInBackground
    void getFirstInBackground(com.parse.GetCallback) -> getFirstInBackground
    bolts.Task getFirstAsync(com.parse.ParseQuery$State) -> getFirstAsync
    bolts.Task getFirstAsync(com.parse.ParseQuery$State,com.parse.ParseUser,bolts.Task) -> getFirstAsync
    int count() -> count
    bolts.Task countInBackground() -> countInBackground
    void countInBackground(com.parse.CountCallback) -> countInBackground
    bolts.Task countAsync(com.parse.ParseQuery$State) -> countAsync
    bolts.Task countAsync(com.parse.ParseQuery$State,com.parse.ParseUser,bolts.Task) -> countAsync
    com.parse.ParseObject get(java.lang.String) -> get
    boolean hasCachedResult() -> hasCachedResult
    void clearCachedResult() -> clearCachedResult
    void clearAllCachedResults() -> clearAllCachedResults
    bolts.Task getInBackground(java.lang.String) -> getInBackground
    void getInBackground(java.lang.String,com.parse.GetCallback) -> getInBackground
    bolts.Task doCacheThenNetwork(com.parse.ParseQuery$State,com.parse.ParseCallback2,com.parse.ParseQuery$CacheThenNetworkCallable) -> doCacheThenNetwork
    com.parse.ParseQuery whereEqualTo(java.lang.String,java.lang.Object) -> whereEqualTo
    com.parse.ParseQuery whereLessThan(java.lang.String,java.lang.Object) -> whereLessThan
    com.parse.ParseQuery whereNotEqualTo(java.lang.String,java.lang.Object) -> whereNotEqualTo
    com.parse.ParseQuery whereGreaterThan(java.lang.String,java.lang.Object) -> whereGreaterThan
    com.parse.ParseQuery whereLessThanOrEqualTo(java.lang.String,java.lang.Object) -> whereLessThanOrEqualTo
    com.parse.ParseQuery whereGreaterThanOrEqualTo(java.lang.String,java.lang.Object) -> whereGreaterThanOrEqualTo
    com.parse.ParseQuery whereContainedIn(java.lang.String,java.util.Collection) -> whereContainedIn
    com.parse.ParseQuery whereContainsAll(java.lang.String,java.util.Collection) -> whereContainsAll
    com.parse.ParseQuery whereMatchesQuery(java.lang.String,com.parse.ParseQuery) -> whereMatchesQuery
    com.parse.ParseQuery whereDoesNotMatchQuery(java.lang.String,com.parse.ParseQuery) -> whereDoesNotMatchQuery
    com.parse.ParseQuery whereMatchesKeyInQuery(java.lang.String,java.lang.String,com.parse.ParseQuery) -> whereMatchesKeyInQuery
    com.parse.ParseQuery whereDoesNotMatchKeyInQuery(java.lang.String,java.lang.String,com.parse.ParseQuery) -> whereDoesNotMatchKeyInQuery
    com.parse.ParseQuery whereNotContainedIn(java.lang.String,java.util.Collection) -> whereNotContainedIn
    com.parse.ParseQuery whereNear(java.lang.String,com.parse.ParseGeoPoint) -> whereNear
    com.parse.ParseQuery whereWithinMiles(java.lang.String,com.parse.ParseGeoPoint,double) -> whereWithinMiles
    com.parse.ParseQuery whereWithinKilometers(java.lang.String,com.parse.ParseGeoPoint,double) -> whereWithinKilometers
    com.parse.ParseQuery whereWithinRadians(java.lang.String,com.parse.ParseGeoPoint,double) -> whereWithinRadians
    com.parse.ParseQuery whereWithinGeoBox(java.lang.String,com.parse.ParseGeoPoint,com.parse.ParseGeoPoint) -> whereWithinGeoBox
    com.parse.ParseQuery whereMatches(java.lang.String,java.lang.String) -> whereMatches
    com.parse.ParseQuery whereMatches(java.lang.String,java.lang.String,java.lang.String) -> whereMatches
    com.parse.ParseQuery whereContains(java.lang.String,java.lang.String) -> whereContains
    com.parse.ParseQuery whereStartsWith(java.lang.String,java.lang.String) -> whereStartsWith
    com.parse.ParseQuery whereEndsWith(java.lang.String,java.lang.String) -> whereEndsWith
    com.parse.ParseQuery include(java.lang.String) -> include
    com.parse.ParseQuery selectKeys(java.util.Collection) -> selectKeys
    com.parse.ParseQuery whereExists(java.lang.String) -> whereExists
    com.parse.ParseQuery whereDoesNotExist(java.lang.String) -> whereDoesNotExist
    com.parse.ParseQuery orderByAscending(java.lang.String) -> orderByAscending
    com.parse.ParseQuery addAscendingOrder(java.lang.String) -> addAscendingOrder
    com.parse.ParseQuery orderByDescending(java.lang.String) -> orderByDescending
    com.parse.ParseQuery addDescendingOrder(java.lang.String) -> addDescendingOrder
    com.parse.ParseQuery setLimit(int) -> setLimit
    int getLimit() -> getLimit
    com.parse.ParseQuery setSkip(int) -> setSkip
    int getSkip() -> getSkip
    java.lang.String getClassName() -> getClassName
    com.parse.ParseQuery setTrace(boolean) -> setTrace
    void access$000() -> access$000
    void access$100() -> access$100
    java.lang.Object access$1700(com.parse.ParseQuery) -> access$1700
    boolean access$1802(com.parse.ParseQuery,boolean) -> access$1802
    bolts.Task$TaskCompletionSource access$1900(com.parse.ParseQuery) -> access$1900
    bolts.Task$TaskCompletionSource access$1902(com.parse.ParseQuery,bolts.Task$TaskCompletionSource) -> access$1902
    bolts.Task access$2000(com.parse.ParseQuery,com.parse.ParseQuery$State,com.parse.ParseUser,bolts.Task) -> access$2000
    bolts.Task access$2100(com.parse.ParseQuery,com.parse.ParseQuery$State,com.parse.ParseUser,bolts.Task) -> access$2100
com.parse.ParseQuery$1 -> com.parse.ParseQuery$1:
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseQuery$10 -> com.parse.ParseQuery$10:
    com.parse.ParseQuery$State val$state -> val$state
    com.parse.ParseQuery$CacheThenNetworkCallable val$delegate -> val$delegate
    com.parse.ParseCallback2 val$callback -> val$callback
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$10$1 -> com.parse.ParseQuery$10$1:
    com.parse.ParseQuery$10 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseQuery$10$1$1 -> com.parse.ParseQuery$10$1$1:
    com.parse.ParseQuery$State val$networkState -> val$networkState
    com.parse.ParseUser val$user -> val$user
    com.parse.ParseQuery$10$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseQuery$2 -> com.parse.ParseQuery$2:
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task call(com.parse.ParseQuery$State,com.parse.ParseUser,bolts.Task) -> call
    java.lang.Object call(com.parse.ParseQuery$State,com.parse.ParseUser,bolts.Task) -> call
com.parse.ParseQuery$3 -> com.parse.ParseQuery$3:
    com.parse.ParseQuery$State val$state -> val$state
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$3$1 -> com.parse.ParseQuery$3$1:
    com.parse.ParseQuery$3 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseQuery$4 -> com.parse.ParseQuery$4:
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task call(com.parse.ParseQuery$State,com.parse.ParseUser,bolts.Task) -> call
    java.lang.Object call(com.parse.ParseQuery$State,com.parse.ParseUser,bolts.Task) -> call
com.parse.ParseQuery$5 -> com.parse.ParseQuery$5:
    com.parse.ParseQuery$State val$state -> val$state
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$5$1 -> com.parse.ParseQuery$5$1:
    com.parse.ParseQuery$5 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseQuery$6 -> com.parse.ParseQuery$6:
    com.parse.CountCallback val$callback -> val$callback
    com.parse.ParseQuery this$0 -> this$0
    void done(java.lang.Integer,com.parse.ParseException) -> done
    void done(java.lang.Object,java.lang.Throwable) -> done
com.parse.ParseQuery$7 -> com.parse.ParseQuery$7:
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task call(com.parse.ParseQuery$State,com.parse.ParseUser,bolts.Task) -> call
    java.lang.Object call(com.parse.ParseQuery$State,com.parse.ParseUser,bolts.Task) -> call
com.parse.ParseQuery$8 -> com.parse.ParseQuery$8:
    com.parse.ParseQuery$State val$state -> val$state
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task call() -> call
    java.lang.Object call() -> call
com.parse.ParseQuery$8$1 -> com.parse.ParseQuery$8$1:
    com.parse.ParseQuery$8 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseQuery$9 -> com.parse.ParseQuery$9:
    com.parse.ParseQuery this$0 -> this$0
    bolts.Task call(com.parse.ParseQuery$State,com.parse.ParseUser,bolts.Task) -> call
    java.lang.Object call(com.parse.ParseQuery$State,com.parse.ParseUser,bolts.Task) -> call
com.parse.ParseQuery$CachePolicy -> com.parse.ParseQuery$CachePolicy:
    com.parse.ParseQuery$CachePolicy IGNORE_CACHE -> IGNORE_CACHE
    com.parse.ParseQuery$CachePolicy CACHE_ONLY -> CACHE_ONLY
    com.parse.ParseQuery$CachePolicy NETWORK_ONLY -> NETWORK_ONLY
    com.parse.ParseQuery$CachePolicy CACHE_ELSE_NETWORK -> CACHE_ELSE_NETWORK
    com.parse.ParseQuery$CachePolicy NETWORK_ELSE_CACHE -> NETWORK_ELSE_CACHE
    com.parse.ParseQuery$CachePolicy CACHE_THEN_NETWORK -> CACHE_THEN_NETWORK
    com.parse.ParseQuery$CachePolicy[] $VALUES -> $VALUES
    com.parse.ParseQuery$CachePolicy[] values() -> values
    com.parse.ParseQuery$CachePolicy valueOf(java.lang.String) -> valueOf
com.parse.ParseQuery$CacheThenNetworkCallable -> com.parse.ParseQuery$CacheThenNetworkCallable:
    java.lang.Object call(com.parse.ParseQuery$State,com.parse.ParseUser,bolts.Task) -> call
com.parse.ParseQuery$KeyConstraints -> com.parse.ParseQuery$KeyConstraints:
com.parse.ParseQuery$QueryConstraints -> com.parse.ParseQuery$QueryConstraints:
com.parse.ParseQuery$RelationConstraint -> com.parse.ParseQuery$RelationConstraint:
    java.lang.String key -> key
    com.parse.ParseObject object -> object
    java.lang.String getKey() -> getKey
    com.parse.ParseObject getObject() -> getObject
    com.parse.ParseRelation getRelation() -> getRelation
    org.json.JSONObject encode(com.parse.ParseEncoder) -> encode
com.parse.ParseQuery$State -> com.parse.ParseQuery$State:
    java.lang.String className -> className
    com.parse.ParseQuery$QueryConstraints where -> where
    java.util.Set include -> include
    java.util.Set selectedKeys -> selectedKeys
    int limit -> limit
    int skip -> skip
    java.util.List order -> order
    java.util.Map extraOptions -> extraOptions
    boolean trace -> trace
    com.parse.ParseQuery$CachePolicy cachePolicy -> cachePolicy
    long maxCacheAge -> maxCacheAge
    boolean isFromLocalDatastore -> isFromLocalDatastore
    java.lang.String pinName -> pinName
    boolean ignoreACLs -> ignoreACLs
    java.lang.String className() -> className
    com.parse.ParseQuery$QueryConstraints constraints() -> constraints
    java.util.Set includes() -> includes
    java.util.Set selectedKeys() -> selectedKeys
    int limit() -> limit
    int skip() -> skip
    java.util.List order() -> order
    java.util.Map extraOptions() -> extraOptions
    boolean isTracingEnabled() -> isTracingEnabled
    com.parse.ParseQuery$CachePolicy cachePolicy() -> cachePolicy
    long maxCacheAge() -> maxCacheAge
    boolean isFromLocalDatastore() -> isFromLocalDatastore
    java.lang.String pinName() -> pinName
    boolean ignoreACLs() -> ignoreACLs
    org.json.JSONObject toJSON(com.parse.ParseEncoder) -> toJSON
    java.lang.String toString() -> toString
com.parse.ParseQuery$State$Builder -> com.parse.ParseQuery$State$Builder:
    java.lang.String className -> className
    com.parse.ParseQuery$QueryConstraints where -> where
    java.util.Set includes -> includes
    java.util.Set selectedKeys -> selectedKeys
    int limit -> limit
    int skip -> skip
    java.util.List order -> order
    java.util.Map extraOptions -> extraOptions
    boolean trace -> trace
    com.parse.ParseQuery$CachePolicy cachePolicy -> cachePolicy
    long maxCacheAge -> maxCacheAge
    boolean isFromLocalDatastore -> isFromLocalDatastore
    java.lang.String pinName -> pinName
    boolean ignoreACLs -> ignoreACLs
    com.parse.ParseQuery$State$Builder or(java.util.List) -> or
    java.lang.String getClassName() -> getClassName
    com.parse.ParseQuery$State$Builder whereEqualTo(java.lang.String,java.lang.Object) -> whereEqualTo
    com.parse.ParseQuery$State$Builder whereDoesNotMatchKeyInQuery(java.lang.String,java.lang.String,com.parse.ParseQuery$State$Builder) -> whereDoesNotMatchKeyInQuery
    com.parse.ParseQuery$State$Builder whereMatchesKeyInQuery(java.lang.String,java.lang.String,com.parse.ParseQuery$State$Builder) -> whereMatchesKeyInQuery
    com.parse.ParseQuery$State$Builder whereDoesNotMatchQuery(java.lang.String,com.parse.ParseQuery$State$Builder) -> whereDoesNotMatchQuery
    com.parse.ParseQuery$State$Builder whereMatchesQuery(java.lang.String,com.parse.ParseQuery$State$Builder) -> whereMatchesQuery
    com.parse.ParseQuery$State$Builder whereNear(java.lang.String,com.parse.ParseGeoPoint) -> whereNear
    com.parse.ParseQuery$State$Builder maxDistance(java.lang.String,double) -> maxDistance
    com.parse.ParseQuery$State$Builder whereWithin(java.lang.String,com.parse.ParseGeoPoint,com.parse.ParseGeoPoint) -> whereWithin
    com.parse.ParseQuery$State$Builder addCondition(java.lang.String,java.lang.String,java.util.Collection) -> addCondition
    com.parse.ParseQuery$State$Builder addCondition(java.lang.String,java.lang.String,java.lang.Object) -> addCondition
    com.parse.ParseQuery$State$Builder addConditionInternal(java.lang.String,java.lang.String,java.lang.Object) -> addConditionInternal
    com.parse.ParseQuery$State$Builder whereRelatedTo(com.parse.ParseObject,java.lang.String) -> whereRelatedTo
    com.parse.ParseQuery$State$Builder whereSatifiesAnyOf(java.util.List) -> whereSatifiesAnyOf
    com.parse.ParseQuery$State$Builder whereObjectIdEquals(java.lang.String) -> whereObjectIdEquals
    com.parse.ParseQuery$State$Builder setOrder(java.lang.String) -> setOrder
    com.parse.ParseQuery$State$Builder addOrder(java.lang.String) -> addOrder
    com.parse.ParseQuery$State$Builder orderByAscending(java.lang.String) -> orderByAscending
    com.parse.ParseQuery$State$Builder addAscendingOrder(java.lang.String) -> addAscendingOrder
    com.parse.ParseQuery$State$Builder orderByDescending(java.lang.String) -> orderByDescending
    com.parse.ParseQuery$State$Builder addDescendingOrder(java.lang.String) -> addDescendingOrder
    com.parse.ParseQuery$State$Builder include(java.lang.String) -> include
    com.parse.ParseQuery$State$Builder selectKeys(java.util.Collection) -> selectKeys
    int getLimit() -> getLimit
    com.parse.ParseQuery$State$Builder setLimit(int) -> setLimit
    int getSkip() -> getSkip
    com.parse.ParseQuery$State$Builder setSkip(int) -> setSkip
    com.parse.ParseQuery$State$Builder redirectClassNameForKey(java.lang.String) -> redirectClassNameForKey
    com.parse.ParseQuery$State$Builder setTracingEnabled(boolean) -> setTracingEnabled
    com.parse.ParseQuery$CachePolicy getCachePolicy() -> getCachePolicy
    com.parse.ParseQuery$State$Builder setCachePolicy(com.parse.ParseQuery$CachePolicy) -> setCachePolicy
    long getMaxCacheAge() -> getMaxCacheAge
    com.parse.ParseQuery$State$Builder setMaxCacheAge(long) -> setMaxCacheAge
    boolean isFromNetwork() -> isFromNetwork
    com.parse.ParseQuery$State$Builder fromNetwork() -> fromNetwork
    com.parse.ParseQuery$State$Builder fromLocalDatastore() -> fromLocalDatastore
    boolean isFromLocalDatstore() -> isFromLocalDatstore
    com.parse.ParseQuery$State$Builder fromPin() -> fromPin
    com.parse.ParseQuery$State$Builder fromPin(java.lang.String) -> fromPin
    com.parse.ParseQuery$State$Builder ignoreACLs() -> ignoreACLs
    com.parse.ParseQuery$State build() -> build
    java.lang.String access$300(com.parse.ParseQuery$State$Builder) -> access$300
    com.parse.ParseQuery$QueryConstraints access$400(com.parse.ParseQuery$State$Builder) -> access$400
    java.util.Set access$500(com.parse.ParseQuery$State$Builder) -> access$500
    java.util.Set access$600(com.parse.ParseQuery$State$Builder) -> access$600
    int access$700(com.parse.ParseQuery$State$Builder) -> access$700
    int access$800(com.parse.ParseQuery$State$Builder) -> access$800
    java.util.List access$900(com.parse.ParseQuery$State$Builder) -> access$900
    java.util.Map access$1000(com.parse.ParseQuery$State$Builder) -> access$1000
    boolean access$1100(com.parse.ParseQuery$State$Builder) -> access$1100
    com.parse.ParseQuery$CachePolicy access$1200(com.parse.ParseQuery$State$Builder) -> access$1200
    long access$1300(com.parse.ParseQuery$State$Builder) -> access$1300
    boolean access$1400(com.parse.ParseQuery$State$Builder) -> access$1400
    java.lang.String access$1500(com.parse.ParseQuery$State$Builder) -> access$1500
    boolean access$1600(com.parse.ParseQuery$State$Builder) -> access$1600
com.parse.ParseQueryController -> com.parse.ParseQueryController:
    bolts.Task findAsync(com.parse.ParseQuery$State,com.parse.ParseUser,bolts.Task) -> findAsync
    bolts.Task countAsync(com.parse.ParseQuery$State,com.parse.ParseUser,bolts.Task) -> countAsync
    bolts.Task getFirstAsync(com.parse.ParseQuery$State,com.parse.ParseUser,bolts.Task) -> getFirstAsync
com.parse.ParseRESTAnalyticsCommand -> com.parse.ParseRESTAnalyticsCommand:
    java.lang.String EVENT_APP_OPENED -> EVENT_APP_OPENED
    com.parse.ParseRESTAnalyticsCommand trackAppOpenedCommand(java.lang.String,java.lang.String) -> trackAppOpenedCommand
    com.parse.ParseRESTAnalyticsCommand trackEventCommand(java.lang.String,org.json.JSONObject,java.lang.String) -> trackEventCommand
    com.parse.ParseRESTAnalyticsCommand trackEventCommand(java.lang.String,java.util.Map,java.lang.String) -> trackEventCommand
com.parse.ParseRESTCloudCommand -> com.parse.ParseRESTCloudCommand:
    com.parse.ParseRESTCloudCommand callFunctionCommand(java.lang.String,java.util.Map,java.lang.String) -> callFunctionCommand
com.parse.ParseRESTCommand -> com.parse.ParseRESTCommand:
    java.lang.String HEADER_APPLICATION_ID -> HEADER_APPLICATION_ID
    java.lang.String HEADER_CLIENT_KEY -> HEADER_CLIENT_KEY
    java.lang.String HEADER_CLIENT_VERSION -> HEADER_CLIENT_VERSION
    java.lang.String HEADER_APP_BUILD_VERSION -> HEADER_APP_BUILD_VERSION
    java.lang.String HEADER_APP_DISPLAY_VERSION -> HEADER_APP_DISPLAY_VERSION
    java.lang.String HEADER_OS_VERSION -> HEADER_OS_VERSION
    java.lang.String HEADER_INSTALLATION_ID -> HEADER_INSTALLATION_ID
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String HEADER_SESSION_TOKEN -> HEADER_SESSION_TOKEN
    java.lang.String HEADER_MASTER_KEY -> HEADER_MASTER_KEY
    java.lang.String PARAMETER_METHOD_OVERRIDE -> PARAMETER_METHOD_OVERRIDE
    java.lang.String sessionToken -> sessionToken
    java.lang.String installationId -> installationId
    java.lang.String masterKey -> masterKey
    java.lang.String httpPath -> httpPath
    org.json.JSONObject jsonParameters -> jsonParameters
    java.lang.String operationSetUUID -> operationSetUUID
    java.lang.String localId -> localId
    com.parse.LocalIdManager getLocalIdManager() -> getLocalIdManager
    com.parse.ParseRESTCommand fromJSONObject(org.json.JSONObject) -> fromJSONObject
    void enableRetrying() -> enableRetrying
    java.lang.String createUrl(java.lang.String) -> createUrl
    void addAdditionalHeaders(com.parse.http.ParseHttpRequest$Builder) -> addAdditionalHeaders
    com.parse.http.ParseHttpRequest newRequest(com.parse.http.ParseHttpRequest$Method,java.lang.String,com.parse.ProgressCallback) -> newRequest
    com.parse.http.ParseHttpBody newBody(com.parse.ProgressCallback) -> newBody
    bolts.Task executeAsync(com.parse.ParseHttpClient,com.parse.ProgressCallback,com.parse.ProgressCallback,bolts.Task) -> executeAsync
    bolts.Task onResponseAsync(com.parse.http.ParseHttpResponse,com.parse.ProgressCallback) -> onResponseAsync
    java.lang.String getCacheKey() -> getCacheKey
    java.lang.String toDeterministicString(java.lang.Object) -> toDeterministicString
    void addToStringer(org.json.JSONStringer,java.lang.Object) -> addToStringer
    boolean isValidCommandJSONObject(org.json.JSONObject) -> isValidCommandJSONObject
    boolean isValidOldFormatCommandJSONObject(org.json.JSONObject) -> isValidOldFormatCommandJSONObject
    org.json.JSONObject toJSONObject() -> toJSONObject
    java.lang.String getSessionToken() -> getSessionToken
    java.lang.String getOperationSetUUID() -> getOperationSetUUID
    void setOperationSetUUID(java.lang.String) -> setOperationSetUUID
    void setLocalId(java.lang.String) -> setLocalId
    java.lang.String getLocalId() -> getLocalId
    void maybeChangeServerOperation() -> maybeChangeServerOperation
    void resolveLocalIds() -> resolveLocalIds
    void retainLocalIds() -> retainLocalIds
    void releaseLocalIds() -> releaseLocalIds
    void getLocalPointersIn(java.lang.Object,java.util.ArrayList) -> getLocalPointersIn
com.parse.ParseRESTCommand$Builder -> com.parse.ParseRESTCommand$Builder:
    com.parse.ParseRESTCommand$Builder self() -> self
    com.parse.ParseRESTCommand build() -> build
    com.parse.ParseRESTCommand$Init self() -> self
com.parse.ParseRESTCommand$Init -> com.parse.ParseRESTCommand$Init:
    java.lang.String sessionToken -> sessionToken
    java.lang.String installationId -> installationId
    java.lang.String masterKey -> masterKey
    com.parse.http.ParseHttpRequest$Method method -> method
    java.lang.String httpPath -> httpPath
    org.json.JSONObject jsonParameters -> jsonParameters
    java.lang.String operationSetUUID -> operationSetUUID
    java.lang.String localId -> localId
    com.parse.ParseRESTCommand$Init self() -> self
    com.parse.ParseRESTCommand$Init sessionToken(java.lang.String) -> sessionToken
    com.parse.ParseRESTCommand$Init installationId(java.lang.String) -> installationId
    com.parse.ParseRESTCommand$Init masterKey(java.lang.String) -> masterKey
    com.parse.ParseRESTCommand$Init method(com.parse.http.ParseHttpRequest$Method) -> method
    com.parse.ParseRESTCommand$Init httpPath(java.lang.String) -> httpPath
    com.parse.ParseRESTCommand$Init jsonParameters(org.json.JSONObject) -> jsonParameters
    com.parse.ParseRESTCommand$Init operationSetUUID(java.lang.String) -> operationSetUUID
    com.parse.ParseRESTCommand$Init localId(java.lang.String) -> localId
    com.parse.http.ParseHttpRequest$Method access$000(com.parse.ParseRESTCommand$Init) -> access$000
    java.lang.String access$100(com.parse.ParseRESTCommand$Init) -> access$100
    java.lang.String access$200(com.parse.ParseRESTCommand$Init) -> access$200
    java.lang.String access$300(com.parse.ParseRESTCommand$Init) -> access$300
    org.json.JSONObject access$400(com.parse.ParseRESTCommand$Init) -> access$400
    java.lang.String access$500(com.parse.ParseRESTCommand$Init) -> access$500
    java.lang.String access$600(com.parse.ParseRESTCommand$Init) -> access$600
com.parse.ParseRESTConfigCommand -> com.parse.ParseRESTConfigCommand:
    com.parse.ParseRESTConfigCommand fetchConfigCommand(java.lang.String) -> fetchConfigCommand
    com.parse.ParseRESTConfigCommand updateConfigCommand(java.util.Map,java.lang.String) -> updateConfigCommand
com.parse.ParseRESTFileCommand -> com.parse.ParseRESTFileCommand:
    byte[] data -> data
    java.lang.String contentType -> contentType
    java.io.File file -> file
    com.parse.http.ParseHttpBody newBody(com.parse.ProgressCallback) -> newBody
com.parse.ParseRESTFileCommand$Builder -> com.parse.ParseRESTFileCommand$Builder:
    byte[] data -> data
    java.lang.String contentType -> contentType
    java.io.File file -> file
    com.parse.ParseRESTFileCommand$Builder fileName(java.lang.String) -> fileName
    com.parse.ParseRESTFileCommand$Builder data(byte[]) -> data
    com.parse.ParseRESTFileCommand$Builder contentType(java.lang.String) -> contentType
    com.parse.ParseRESTFileCommand$Builder file(java.io.File) -> file
    com.parse.ParseRESTFileCommand$Builder self() -> self
    com.parse.ParseRESTFileCommand build() -> build
    com.parse.ParseRESTCommand$Init self() -> self
    java.io.File access$000(com.parse.ParseRESTFileCommand$Builder) -> access$000
    byte[] access$100(com.parse.ParseRESTFileCommand$Builder) -> access$100
    java.lang.String access$200(com.parse.ParseRESTFileCommand$Builder) -> access$200
com.parse.ParseRESTObjectBatchCommand -> com.parse.ParseRESTObjectBatchCommand:
    int COMMAND_OBJECT_BATCH_MAX_SIZE -> COMMAND_OBJECT_BATCH_MAX_SIZE
    java.lang.String KEY_RESULTS -> KEY_RESULTS
    java.util.List executeBatch(com.parse.ParseHttpClient,java.util.List,java.lang.String) -> executeBatch
    bolts.Task onResponseAsync(com.parse.http.ParseHttpResponse,com.parse.ProgressCallback) -> onResponseAsync
com.parse.ParseRESTObjectBatchCommand$1 -> com.parse.ParseRESTObjectBatchCommand$1:
    int val$batchSize -> val$batchSize
    java.util.List val$tcss -> val$tcss
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseRESTObjectCommand -> com.parse.ParseRESTObjectCommand:
    com.parse.ParseRESTObjectCommand getObjectCommand(java.lang.String,java.lang.String,java.lang.String) -> getObjectCommand
    com.parse.ParseRESTObjectCommand saveObjectCommand(com.parse.ParseObject$State,org.json.JSONObject,java.lang.String) -> saveObjectCommand
    com.parse.ParseRESTObjectCommand createObjectCommand(java.lang.String,org.json.JSONObject,java.lang.String) -> createObjectCommand
    com.parse.ParseRESTObjectCommand updateObjectCommand(java.lang.String,java.lang.String,org.json.JSONObject,java.lang.String) -> updateObjectCommand
    com.parse.ParseRESTObjectCommand deleteObjectCommand(com.parse.ParseObject$State,java.lang.String) -> deleteObjectCommand
com.parse.ParseRESTPushCommand -> com.parse.ParseRESTPushCommand:
    java.lang.String KEY_CHANNELS -> KEY_CHANNELS
    java.lang.String KEY_WHERE -> KEY_WHERE
    java.lang.String KEY_DEVICE_TYPE -> KEY_DEVICE_TYPE
    java.lang.String KEY_EXPIRATION_TIME -> KEY_EXPIRATION_TIME
    java.lang.String KEY_EXPIRATION_INTERVAL -> KEY_EXPIRATION_INTERVAL
    java.lang.String KEY_DATA -> KEY_DATA
    com.parse.ParseRESTPushCommand sendPushCommand(com.parse.ParseQuery$State,java.util.Set,java.lang.String,java.lang.Long,java.lang.Long,org.json.JSONObject,java.lang.String) -> sendPushCommand
com.parse.ParseRESTQueryCommand -> com.parse.ParseRESTQueryCommand:
    com.parse.ParseRESTQueryCommand findCommand(com.parse.ParseQuery$State,java.lang.String) -> findCommand
    com.parse.ParseRESTQueryCommand countCommand(com.parse.ParseQuery$State,java.lang.String) -> countCommand
    java.util.Map encode(com.parse.ParseQuery$State,boolean) -> encode
com.parse.ParseRESTSessionCommand -> com.parse.ParseRESTSessionCommand:
    com.parse.ParseRESTSessionCommand getCurrentSessionCommand(java.lang.String) -> getCurrentSessionCommand
    com.parse.ParseRESTSessionCommand revoke(java.lang.String) -> revoke
    com.parse.ParseRESTSessionCommand upgradeToRevocableSessionCommand(java.lang.String) -> upgradeToRevocableSessionCommand
com.parse.ParseRESTUserCommand -> com.parse.ParseRESTUserCommand:
    java.lang.String HEADER_REVOCABLE_SESSION -> HEADER_REVOCABLE_SESSION
    java.lang.String HEADER_TRUE -> HEADER_TRUE
    boolean isRevocableSessionEnabled -> isRevocableSessionEnabled
    int statusCode -> statusCode
    com.parse.ParseRESTUserCommand getCurrentUserCommand(java.lang.String) -> getCurrentUserCommand
    com.parse.ParseRESTUserCommand signUpUserCommand(org.json.JSONObject,java.lang.String,boolean) -> signUpUserCommand
    com.parse.ParseRESTUserCommand logInUserCommand(java.lang.String,java.lang.String,boolean) -> logInUserCommand
    com.parse.ParseRESTUserCommand serviceLogInUserCommand(java.lang.String,java.util.Map,boolean) -> serviceLogInUserCommand
    com.parse.ParseRESTUserCommand serviceLogInUserCommand(org.json.JSONObject,java.lang.String,boolean) -> serviceLogInUserCommand
    com.parse.ParseRESTUserCommand resetPasswordResetCommand(java.lang.String) -> resetPasswordResetCommand
    int getStatusCode() -> getStatusCode
    void addAdditionalHeaders(com.parse.http.ParseHttpRequest$Builder) -> addAdditionalHeaders
    bolts.Task onResponseAsync(com.parse.http.ParseHttpResponse,com.parse.ProgressCallback) -> onResponseAsync
com.parse.ParseRelation -> com.parse.ParseRelation:
    java.lang.Object mutex -> mutex
    java.lang.ref.WeakReference parent -> parent
    java.lang.String parentObjectId -> parentObjectId
    java.lang.String parentClassName -> parentClassName
    java.lang.String key -> key
    java.lang.String targetClass -> targetClass
    java.util.Set knownObjects -> knownObjects
    void ensureParentAndKey(com.parse.ParseObject,java.lang.String) -> ensureParentAndKey
    void add(com.parse.ParseObject) -> add
    void remove(com.parse.ParseObject) -> remove
    com.parse.ParseQuery getQuery() -> getQuery
    org.json.JSONObject encodeToJSON(com.parse.ParseEncoder) -> encodeToJSON
    java.lang.String getTargetClass() -> getTargetClass
    void setTargetClass(java.lang.String) -> setTargetClass
    void addKnownObject(com.parse.ParseObject) -> addKnownObject
    void removeKnownObject(com.parse.ParseObject) -> removeKnownObject
    boolean hasKnownObject(com.parse.ParseObject) -> hasKnownObject
    com.parse.ParseObject getParent() -> getParent
    java.lang.String getKey() -> getKey
    java.util.Set getKnownObjects() -> getKnownObjects
com.parse.ParseRelationOperation -> com.parse.ParseRelationOperation:
    java.lang.String targetClass -> targetClass
    java.util.Set relationsToAdd -> relationsToAdd
    java.util.Set relationsToRemove -> relationsToRemove
    void addParseObjectToSet(com.parse.ParseObject,java.util.Set) -> addParseObjectToSet
    void addAllParseObjectsToSet(java.util.Collection,java.util.Set) -> addAllParseObjectsToSet
    void removeParseObjectFromSet(com.parse.ParseObject,java.util.Set) -> removeParseObjectFromSet
    void removeAllParseObjectsFromSet(java.util.Collection,java.util.Set) -> removeAllParseObjectsFromSet
    java.lang.String getTargetClass() -> getTargetClass
    org.json.JSONArray convertSetToArray(java.util.Set,com.parse.ParseEncoder) -> convertSetToArray
    org.json.JSONObject encode(com.parse.ParseEncoder) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,java.lang.String) -> apply
    java.lang.Object encode(com.parse.ParseEncoder) -> encode
com.parse.ParseRemoveOperation -> com.parse.ParseRemoveOperation:
    java.util.HashSet objects -> objects
    org.json.JSONObject encode(com.parse.ParseEncoder) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,java.lang.String) -> apply
    java.lang.Object encode(com.parse.ParseEncoder) -> encode
com.parse.ParseRequest -> com.parse.ParseRequest:
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    int CPU_COUNT -> CPU_COUNT
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAX_POOL_SIZE -> MAX_POOL_SIZE
    long KEEP_ALIVE_TIME -> KEEP_ALIVE_TIME
    int MAX_QUEUE_SIZE -> MAX_QUEUE_SIZE
    java.util.concurrent.ExecutorService NETWORK_EXECUTOR -> NETWORK_EXECUTOR
    int DEFAULT_MAX_RETRIES -> DEFAULT_MAX_RETRIES
    long DEFAULT_INITIAL_RETRY_DELAY -> DEFAULT_INITIAL_RETRY_DELAY
    long defaultInitialRetryDelay -> defaultInitialRetryDelay
    com.parse.ParseHttpClient defaultClient -> defaultClient
    int maxRetries -> maxRetries
    com.parse.http.ParseHttpRequest$Method method -> method
    java.lang.String url -> url
    java.util.concurrent.ThreadPoolExecutor newThreadPoolExecutor(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory) -> newThreadPoolExecutor
    void setDefaultClient(com.parse.ParseHttpClient) -> setDefaultClient
    com.parse.ParseHttpClient getDefaultClient() -> getDefaultClient
    void setDefaultInitialRetryDelay(long) -> setDefaultInitialRetryDelay
    long getDefaultInitialRetryDelay() -> getDefaultInitialRetryDelay
    void setMaxRetries(int) -> setMaxRetries
    com.parse.http.ParseHttpBody newBody(com.parse.ProgressCallback) -> newBody
    com.parse.http.ParseHttpRequest newRequest(com.parse.http.ParseHttpRequest$Method,java.lang.String,com.parse.ProgressCallback) -> newRequest
    bolts.Task sendOneRequestAsync(com.parse.ParseHttpClient,com.parse.http.ParseHttpRequest,com.parse.ProgressCallback) -> sendOneRequestAsync
    bolts.Task onResponseAsync(com.parse.http.ParseHttpResponse,com.parse.ProgressCallback) -> onResponseAsync
    bolts.Task executeAsync() -> executeAsync
    bolts.Task executeAsync(com.parse.ProgressCallback,com.parse.ProgressCallback,bolts.Task) -> executeAsync
    bolts.Task executeAsync(com.parse.ParseHttpClient) -> executeAsync
    bolts.Task executeAsync(com.parse.ParseHttpClient,bolts.Task) -> executeAsync
    bolts.Task executeAsync(com.parse.ParseHttpClient,com.parse.ProgressCallback,com.parse.ProgressCallback) -> executeAsync
    bolts.Task executeAsync(com.parse.ParseHttpClient,com.parse.ProgressCallback,com.parse.ProgressCallback,bolts.Task) -> executeAsync
    bolts.Task executeAsync(com.parse.ParseHttpClient,com.parse.http.ParseHttpRequest,com.parse.ProgressCallback,bolts.Task) -> executeAsync
    bolts.Task executeAsync(com.parse.ParseHttpClient,com.parse.http.ParseHttpRequest,int,long,com.parse.ProgressCallback,bolts.Task) -> executeAsync
    com.parse.ParseException newPermanentException(int,java.lang.String) -> newPermanentException
    com.parse.ParseException newTemporaryException(int,java.lang.String) -> newTemporaryException
    com.parse.ParseException newTemporaryException(java.lang.String,java.lang.Throwable) -> newTemporaryException
    int access$000(com.parse.ParseRequest) -> access$000
    bolts.Task access$100(com.parse.ParseRequest,com.parse.ParseHttpClient,com.parse.http.ParseHttpRequest,int,long,com.parse.ProgressCallback,bolts.Task) -> access$100
com.parse.ParseRequest$1 -> com.parse.ParseRequest$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.parse.ParseRequest$2 -> com.parse.ParseRequest$2:
    com.parse.ParseRequest this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseRequest$3 -> com.parse.ParseRequest$3:
    com.parse.ParseHttpClient val$client -> val$client
    com.parse.http.ParseHttpRequest val$request -> val$request
    com.parse.ProgressCallback val$downloadProgressCallback -> val$downloadProgressCallback
    com.parse.ParseRequest this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseRequest$4 -> com.parse.ParseRequest$4:
    bolts.Task val$cancellationToken -> val$cancellationToken
    int val$attemptsMade -> val$attemptsMade
    long val$delay -> val$delay
    com.parse.ParseHttpClient val$client -> val$client
    com.parse.http.ParseHttpRequest val$request -> val$request
    com.parse.ProgressCallback val$downloadProgressCallback -> val$downloadProgressCallback
    com.parse.ParseRequest this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseRequest$4$1 -> com.parse.ParseRequest$4$1:
    bolts.Task$TaskCompletionSource val$retryTask -> val$retryTask
    com.parse.ParseRequest$4 this$1 -> this$1
    void run() -> run
com.parse.ParseRequest$4$1$1 -> com.parse.ParseRequest$4$1$1:
    com.parse.ParseRequest$4$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseRequest$5 -> com.parse.ParseRequest$5:
    int[] $SwitchMap$com$parse$http$ParseHttpRequest$Method -> $SwitchMap$com$parse$http$ParseHttpRequest$Method
com.parse.ParseRequest$ParseRequestException -> com.parse.ParseRequest$ParseRequestException:
    boolean isPermanentFailure -> isPermanentFailure
com.parse.ParseRole -> com.parse.ParseRole:
    java.util.regex.Pattern NAME_PATTERN -> NAME_PATTERN
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    com.parse.ParseRelation getUsers() -> getUsers
    com.parse.ParseRelation getRoles() -> getRoles
    void validateSave() -> validateSave
    void put(java.lang.String,java.lang.Object) -> put
    com.parse.ParseQuery getQuery() -> getQuery
com.parse.ParseSQLiteCursor -> com.parse.ParseSQLiteCursor:
    android.database.Cursor cursor -> cursor
    java.util.concurrent.Executor executor -> executor
    android.database.Cursor create(android.database.Cursor,java.util.concurrent.Executor) -> create
    int getCount() -> getCount
    int getPosition() -> getPosition
    boolean move(int) -> move
    boolean moveToPosition(int) -> moveToPosition
    boolean moveToFirst() -> moveToFirst
    boolean moveToLast() -> moveToLast
    boolean moveToNext() -> moveToNext
    boolean moveToPrevious() -> moveToPrevious
    boolean isFirst() -> isFirst
    boolean isLast() -> isLast
    boolean isBeforeFirst() -> isBeforeFirst
    boolean isAfterLast() -> isAfterLast
    int getColumnIndex(java.lang.String) -> getColumnIndex
    int getColumnIndexOrThrow(java.lang.String) -> getColumnIndexOrThrow
    java.lang.String getColumnName(int) -> getColumnName
    java.lang.String[] getColumnNames() -> getColumnNames
    int getColumnCount() -> getColumnCount
    byte[] getBlob(int) -> getBlob
    java.lang.String getString(int) -> getString
    void copyStringToBuffer(int,android.database.CharArrayBuffer) -> copyStringToBuffer
    short getShort(int) -> getShort
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    float getFloat(int) -> getFloat
    double getDouble(int) -> getDouble
    int getType(int) -> getType
    boolean isNull(int) -> isNull
    void deactivate() -> deactivate
    boolean requery() -> requery
    void close() -> close
    boolean isClosed() -> isClosed
    void registerContentObserver(android.database.ContentObserver) -> registerContentObserver
    void unregisterContentObserver(android.database.ContentObserver) -> unregisterContentObserver
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    void setNotificationUri(android.content.ContentResolver,android.net.Uri) -> setNotificationUri
    android.net.Uri getNotificationUri() -> getNotificationUri
    boolean getWantsAllOnMoveCalls() -> getWantsAllOnMoveCalls
    android.os.Bundle getExtras() -> getExtras
    android.os.Bundle respond(android.os.Bundle) -> respond
    android.database.Cursor access$000(com.parse.ParseSQLiteCursor) -> access$000
com.parse.ParseSQLiteCursor$1 -> com.parse.ParseSQLiteCursor$1:
    com.parse.ParseSQLiteCursor this$0 -> this$0
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.parse.ParseSQLiteDatabase -> com.parse.ParseSQLiteDatabase:
    java.util.concurrent.ExecutorService dbExecutor -> dbExecutor
    com.parse.TaskQueue taskQueue -> taskQueue
    android.database.sqlite.SQLiteDatabase db -> db
    bolts.Task current -> current
    java.lang.Object currentLock -> currentLock
    bolts.Task$TaskCompletionSource tcs -> tcs
    int openFlags -> openFlags
    bolts.Task openDatabaseAsync(android.database.sqlite.SQLiteOpenHelper,int) -> openDatabaseAsync
    bolts.Task isReadOnlyAsync() -> isReadOnlyAsync
    bolts.Task isOpenAsync() -> isOpenAsync
    boolean inTransaction() -> inTransaction
    bolts.Task open(android.database.sqlite.SQLiteOpenHelper) -> open
    bolts.Task beginTransactionAsync() -> beginTransactionAsync
    bolts.Task setTransactionSuccessfulAsync() -> setTransactionSuccessfulAsync
    bolts.Task endTransactionAsync() -> endTransactionAsync
    bolts.Task closeAsync() -> closeAsync
    bolts.Task queryAsync(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[]) -> queryAsync
    bolts.Task insertWithOnConflict(java.lang.String,android.content.ContentValues,int) -> insertWithOnConflict
    bolts.Task insertOrThrowAsync(java.lang.String,android.content.ContentValues) -> insertOrThrowAsync
    bolts.Task updateAsync(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]) -> updateAsync
    bolts.Task deleteAsync(java.lang.String,java.lang.String,java.lang.String[]) -> deleteAsync
    bolts.Task rawQueryAsync(java.lang.String,java.lang.String[]) -> rawQueryAsync
    java.lang.Object access$000(com.parse.ParseSQLiteDatabase) -> access$000
    bolts.Task access$102(com.parse.ParseSQLiteDatabase,bolts.Task) -> access$102
    bolts.Task$TaskCompletionSource access$200(com.parse.ParseSQLiteDatabase) -> access$200
    android.database.sqlite.SQLiteDatabase access$300(com.parse.ParseSQLiteDatabase) -> access$300
    android.database.sqlite.SQLiteDatabase access$302(com.parse.ParseSQLiteDatabase,android.database.sqlite.SQLiteDatabase) -> access$302
    int access$400(com.parse.ParseSQLiteDatabase) -> access$400
    java.util.concurrent.ExecutorService access$500() -> access$500
com.parse.ParseSQLiteDatabase$1 -> com.parse.ParseSQLiteDatabase$1:
    com.parse.ParseSQLiteDatabase val$db -> val$db
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$10 -> com.parse.ParseSQLiteDatabase$10:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$11 -> com.parse.ParseSQLiteDatabase$11:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$12 -> com.parse.ParseSQLiteDatabase$12:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$13 -> com.parse.ParseSQLiteDatabase$13:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$14 -> com.parse.ParseSQLiteDatabase$14:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$15 -> com.parse.ParseSQLiteDatabase$15:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    android.database.Cursor then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$16 -> com.parse.ParseSQLiteDatabase$16:
    java.lang.String val$table -> val$table
    java.lang.String[] val$select -> val$select
    java.lang.String val$where -> val$where
    java.lang.String[] val$args -> val$args
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    android.database.Cursor then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$17 -> com.parse.ParseSQLiteDatabase$17:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$18 -> com.parse.ParseSQLiteDatabase$18:
    java.lang.String val$table -> val$table
    android.content.ContentValues val$values -> val$values
    int val$conflictAlgorithm -> val$conflictAlgorithm
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    java.lang.Long then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$19 -> com.parse.ParseSQLiteDatabase$19:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$2 -> com.parse.ParseSQLiteDatabase$2:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$20 -> com.parse.ParseSQLiteDatabase$20:
    java.lang.String val$table -> val$table
    android.content.ContentValues val$values -> val$values
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    java.lang.Long then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$21 -> com.parse.ParseSQLiteDatabase$21:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$22 -> com.parse.ParseSQLiteDatabase$22:
    java.lang.String val$table -> val$table
    android.content.ContentValues val$values -> val$values
    java.lang.String val$where -> val$where
    java.lang.String[] val$args -> val$args
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    java.lang.Integer then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$23 -> com.parse.ParseSQLiteDatabase$23:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$24 -> com.parse.ParseSQLiteDatabase$24:
    java.lang.String val$table -> val$table
    java.lang.String val$where -> val$where
    java.lang.String[] val$args -> val$args
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    java.lang.Integer then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$25 -> com.parse.ParseSQLiteDatabase$25:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$26 -> com.parse.ParseSQLiteDatabase$26:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    android.database.Cursor then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$27 -> com.parse.ParseSQLiteDatabase$27:
    java.lang.String val$sql -> val$sql
    java.lang.String[] val$args -> val$args
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    android.database.Cursor then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$28 -> com.parse.ParseSQLiteDatabase$28:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$3 -> com.parse.ParseSQLiteDatabase$3:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    java.lang.Boolean then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$4 -> com.parse.ParseSQLiteDatabase$4:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    java.lang.Boolean then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$5 -> com.parse.ParseSQLiteDatabase$5:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$6 -> com.parse.ParseSQLiteDatabase$6:
    android.database.sqlite.SQLiteOpenHelper val$helper -> val$helper
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    android.database.sqlite.SQLiteDatabase then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$7 -> com.parse.ParseSQLiteDatabase$7:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$8 -> com.parse.ParseSQLiteDatabase$8:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteDatabase$9 -> com.parse.ParseSQLiteDatabase$9:
    com.parse.ParseSQLiteDatabase this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSQLiteOpenHelper -> com.parse.ParseSQLiteOpenHelper:
    android.database.sqlite.SQLiteOpenHelper helper -> helper
    bolts.Task getReadableDatabaseAsync() -> getReadableDatabaseAsync
    bolts.Task getWritableDatabaseAsync() -> getWritableDatabaseAsync
    bolts.Task getDatabaseAsync(boolean) -> getDatabaseAsync
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.parse.ParseSQLiteOpenHelper$1 -> com.parse.ParseSQLiteOpenHelper$1:
    com.parse.ParseSQLiteOpenHelper this$0 -> this$0
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.parse.ParseSession -> com.parse.ParseSession:
    java.lang.String KEY_SESSION_TOKEN -> KEY_SESSION_TOKEN
    java.lang.String KEY_CREATED_WITH -> KEY_CREATED_WITH
    java.lang.String KEY_RESTRICTED -> KEY_RESTRICTED
    java.lang.String KEY_USER -> KEY_USER
    java.lang.String KEY_EXPIRES_AT -> KEY_EXPIRES_AT
    java.lang.String KEY_INSTALLATION_ID -> KEY_INSTALLATION_ID
    java.util.List READ_ONLY_KEYS -> READ_ONLY_KEYS
    com.parse.ParseSessionController getSessionController() -> getSessionController
    bolts.Task getCurrentSessionInBackground() -> getCurrentSessionInBackground
    void getCurrentSessionInBackground(com.parse.GetCallback) -> getCurrentSessionInBackground
    bolts.Task revokeAsync(java.lang.String) -> revokeAsync
    bolts.Task upgradeToRevocableSessionAsync(java.lang.String) -> upgradeToRevocableSessionAsync
    boolean isRevocableSessionToken(java.lang.String) -> isRevocableSessionToken
    com.parse.ParseQuery getQuery() -> getQuery
    boolean needsDefaultACL() -> needsDefaultACL
    boolean isKeyMutable(java.lang.String) -> isKeyMutable
    java.lang.String getSessionToken() -> getSessionToken
    com.parse.ParseSessionController access$000() -> access$000
com.parse.ParseSession$1 -> com.parse.ParseSession$1:
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSession$1$1 -> com.parse.ParseSession$1$1:
    com.parse.ParseSession$1 this$0 -> this$0
    com.parse.ParseSession then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSession$2 -> com.parse.ParseSession$2:
    java.lang.String then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseSessionController -> com.parse.ParseSessionController:
    bolts.Task getSessionAsync(java.lang.String) -> getSessionAsync
    bolts.Task revokeAsync(java.lang.String) -> revokeAsync
    bolts.Task upgradeToRevocable(java.lang.String) -> upgradeToRevocable
com.parse.ParseSetOperation -> com.parse.ParseSetOperation:
    java.lang.Object value -> value
    java.lang.Object getValue() -> getValue
    java.lang.Object encode(com.parse.ParseEncoder) -> encode
    com.parse.ParseFieldOperation mergeWithPrevious(com.parse.ParseFieldOperation) -> mergeWithPrevious
    java.lang.Object apply(java.lang.Object,java.lang.String) -> apply
com.parse.ParseTaskUtils -> com.parse.ParseTaskUtils:
    java.lang.Object wait(bolts.Task) -> wait
    bolts.Task callbackOnMainThreadAsync(bolts.Task,com.parse.ParseCallback1) -> callbackOnMainThreadAsync
    bolts.Task callbackOnMainThreadAsync(bolts.Task,com.parse.ParseCallback1,boolean) -> callbackOnMainThreadAsync
    bolts.Task callbackOnMainThreadAsync(bolts.Task,com.parse.ParseCallback2) -> callbackOnMainThreadAsync
    bolts.Task callbackOnMainThreadAsync(bolts.Task,com.parse.ParseCallback2,boolean) -> callbackOnMainThreadAsync
com.parse.ParseTaskUtils$1 -> com.parse.ParseTaskUtils$1:
    com.parse.ParseCallback1 val$callback -> val$callback
    void done(java.lang.Void,com.parse.ParseException) -> done
    void done(java.lang.Object,java.lang.Throwable) -> done
com.parse.ParseTaskUtils$2 -> com.parse.ParseTaskUtils$2:
    boolean val$reportCancellation -> val$reportCancellation
    bolts.Task$TaskCompletionSource val$tcs -> val$tcs
    com.parse.ParseCallback2 val$callback -> val$callback
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseTaskUtils$2$1 -> com.parse.ParseTaskUtils$2$1:
    bolts.Task val$task -> val$task
    com.parse.ParseTaskUtils$2 this$0 -> this$0
    void run() -> run
com.parse.ParseTextUtils -> com.parse.ParseTextUtils:
    java.lang.String join(java.lang.CharSequence,java.lang.Iterable) -> join
    boolean isEmpty(java.lang.CharSequence) -> isEmpty
    boolean equals(java.lang.CharSequence,java.lang.CharSequence) -> equals
com.parse.ParseTraverser -> com.parse.ParseTraverser:
    boolean traverseParseObjects -> traverseParseObjects
    boolean yieldRoot -> yieldRoot
    boolean visit(java.lang.Object) -> visit
    void traverseInternal(java.lang.Object,boolean,java.util.IdentityHashMap) -> traverseInternal
    com.parse.ParseTraverser setTraverseParseObjects(boolean) -> setTraverseParseObjects
    com.parse.ParseTraverser setYieldRoot(boolean) -> setYieldRoot
    void traverse(java.lang.Object) -> traverse
com.parse.ParseURLConnectionHttpClient -> com.parse.ParseURLConnectionHttpClient:
    java.lang.String ACCEPT_ENCODING_HEADER -> ACCEPT_ENCODING_HEADER
    java.lang.String GZIP_ENCODING -> GZIP_ENCODING
    java.lang.String CONTENT_LENGTH_HEADER -> CONTENT_LENGTH_HEADER
    java.lang.String CONTENT_TYPE_HEADER -> CONTENT_TYPE_HEADER
    int socketOperationTimeout -> socketOperationTimeout
    com.parse.http.ParseHttpResponse executeInternal(com.parse.http.ParseHttpRequest) -> executeInternal
    java.net.HttpURLConnection getRequest(com.parse.http.ParseHttpRequest) -> getRequest
    com.parse.http.ParseHttpResponse getResponse(java.net.HttpURLConnection) -> getResponse
    com.parse.http.ParseHttpResponse getResponse(java.lang.Object) -> getResponse
    java.lang.Object getRequest(com.parse.http.ParseHttpRequest) -> getRequest
com.parse.ParseUser -> com.parse.ParseUser:
    java.lang.String KEY_SESSION_TOKEN -> KEY_SESSION_TOKEN
    java.lang.String KEY_AUTH_DATA -> KEY_AUTH_DATA
    java.lang.String KEY_USERNAME -> KEY_USERNAME
    java.lang.String KEY_PASSWORD -> KEY_PASSWORD
    java.lang.String KEY_EMAIL -> KEY_EMAIL
    java.util.List READ_ONLY_KEYS -> READ_ONLY_KEYS
    boolean isCurrentUser -> isCurrentUser
    java.lang.Object isAutoUserEnabledMutex -> isAutoUserEnabledMutex
    boolean autoUserEnabled -> autoUserEnabled
    com.parse.ParseQuery getQuery() -> getQuery
    com.parse.ParseUserController getUserController() -> getUserController
    com.parse.ParseCurrentUserController getCurrentUserController() -> getCurrentUserController
    com.parse.ParseAuthenticationManager getAuthenticationManager() -> getAuthenticationManager
    boolean needsDefaultACL() -> needsDefaultACL
    boolean isKeyMutable(java.lang.String) -> isKeyMutable
    com.parse.ParseUser$State$Builder newStateBuilder(java.lang.String) -> newStateBuilder
    com.parse.ParseUser$State getState() -> getState
    boolean isLazy() -> isLazy
    boolean isContainerObject(java.lang.String,java.lang.Object) -> isContainerObject
    boolean isAuthenticated() -> isAuthenticated
    void remove(java.lang.String) -> remove
    org.json.JSONObject toRest(com.parse.ParseObject$State,java.util.List,com.parse.ParseEncoder) -> toRest
    bolts.Task cleanUpAuthDataAsync() -> cleanUpAuthDataAsync
    bolts.Task handleSaveResultAsync(com.parse.ParseObject$State,com.parse.ParseOperationSet) -> handleSaveResultAsync
    void validateSaveEventually() -> validateSaveEventually
    boolean isCurrentUser() -> isCurrentUser
    void setIsCurrentUser(boolean) -> setIsCurrentUser
    java.lang.String getSessionToken() -> getSessionToken
    bolts.Task setSessionTokenInBackground(java.lang.String) -> setSessionTokenInBackground
    java.util.Map getAuthData() -> getAuthData
    java.util.Map getAuthData(java.lang.String) -> getAuthData
    void putAuthData(java.lang.String,java.util.Map) -> putAuthData
    void removeAuthData(java.lang.String) -> removeAuthData
    void setUsername(java.lang.String) -> setUsername
    java.lang.String getUsername() -> getUsername
    void setPassword(java.lang.String) -> setPassword
    java.lang.String getPassword() -> getPassword
    void setEmail(java.lang.String) -> setEmail
    java.lang.String getEmail() -> getEmail
    boolean isNew() -> isNew
    void put(java.lang.String,java.lang.Object) -> put
    void stripAnonymity() -> stripAnonymity
    void restoreAnonymity(java.util.Map) -> restoreAnonymity
    void validateSave() -> validateSave
    bolts.Task saveAsync(java.lang.String,bolts.Task) -> saveAsync
    bolts.Task saveAsync(java.lang.String,boolean,bolts.Task) -> saveAsync
    void setState(com.parse.ParseObject$State) -> setState
    void validateDelete() -> validateDelete
    com.parse.ParseUser fetch() -> fetch
    bolts.Task fetchAsync(java.lang.String,bolts.Task) -> fetchAsync
    bolts.Task signUpInBackground() -> signUpInBackground
    bolts.Task signUpAsync(bolts.Task) -> signUpAsync
    void signUp() -> signUp
    void signUpInBackground(com.parse.SignUpCallback) -> signUpInBackground
    bolts.Task logInInBackground(java.lang.String,java.lang.String) -> logInInBackground
    com.parse.ParseUser logIn(java.lang.String,java.lang.String) -> logIn
    void logInInBackground(java.lang.String,java.lang.String,com.parse.LogInCallback) -> logInInBackground
    bolts.Task becomeInBackground(java.lang.String) -> becomeInBackground
    com.parse.ParseUser become(java.lang.String) -> become
    void becomeInBackground(java.lang.String,com.parse.LogInCallback) -> becomeInBackground
    bolts.Task getCurrentUserAsync() -> getCurrentUserAsync
    com.parse.ParseUser getCurrentUser() -> getCurrentUser
    com.parse.ParseUser getCurrentUser(boolean) -> getCurrentUser
    java.lang.String getCurrentSessionToken() -> getCurrentSessionToken
    bolts.Task getCurrentSessionTokenAsync() -> getCurrentSessionTokenAsync
    bolts.Task saveCurrentUserAsync(com.parse.ParseUser) -> saveCurrentUserAsync
    bolts.Task pinCurrentUserIfNeededAsync(com.parse.ParseUser) -> pinCurrentUserIfNeededAsync
    bolts.Task logOutInBackground() -> logOutInBackground
    void logOutInBackground(com.parse.LogOutCallback) -> logOutInBackground
    void logOut() -> logOut
    bolts.Task logOutAsync() -> logOutAsync
    bolts.Task logOutAsync(boolean) -> logOutAsync
    bolts.Task requestPasswordResetInBackground(java.lang.String) -> requestPasswordResetInBackground
    void requestPasswordReset(java.lang.String) -> requestPasswordReset
    void requestPasswordResetInBackground(java.lang.String,com.parse.RequestPasswordResetCallback) -> requestPasswordResetInBackground
    com.parse.ParseUser fetchIfNeeded() -> fetchIfNeeded
    void registerAuthenticationCallback(java.lang.String,com.parse.AuthenticationCallback) -> registerAuthenticationCallback
    bolts.Task logInWithInBackground(java.lang.String,java.util.Map) -> logInWithInBackground
    boolean isLinked(java.lang.String) -> isLinked
    bolts.Task synchronizeAllAuthDataAsync() -> synchronizeAllAuthDataAsync
    bolts.Task synchronizeAuthDataAsync(java.lang.String) -> synchronizeAuthDataAsync
    bolts.Task synchronizeAuthDataAsync(com.parse.ParseAuthenticationManager,java.lang.String,java.util.Map) -> synchronizeAuthDataAsync
    bolts.Task linkWithAsync(java.lang.String,java.util.Map,bolts.Task,java.lang.String) -> linkWithAsync
    bolts.Task linkWithAsync(java.lang.String,java.util.Map,java.lang.String) -> linkWithAsync
    bolts.Task linkWithInBackground(java.lang.String,java.util.Map) -> linkWithInBackground
    bolts.Task unlinkFromInBackground(java.lang.String) -> unlinkFromInBackground
    bolts.Task resolveLazinessAsync(bolts.Task) -> resolveLazinessAsync
    bolts.Task fetchFromLocalDatastoreAsync() -> fetchFromLocalDatastoreAsync
    void enableAutomaticUser() -> enableAutomaticUser
    void disableAutomaticUser() -> disableAutomaticUser
    boolean isAutomaticUserEnabled() -> isAutomaticUserEnabled
    bolts.Task enableRevocableSessionInBackground() -> enableRevocableSessionInBackground
    bolts.Task upgradeToRevocableSessionAsync() -> upgradeToRevocableSessionAsync
    bolts.Task upgradeToRevocableSessionAsync(bolts.Task) -> upgradeToRevocableSessionAsync
    com.parse.ParseObject fetchIfNeeded() -> fetchIfNeeded
    com.parse.ParseObject fetch() -> fetch
    com.parse.ParseObject$State getState() -> getState
    com.parse.ParseObject$State$Init newStateBuilder(java.lang.String) -> newStateBuilder
    bolts.Task access$200(com.parse.ParseUser) -> access$200
    void access$300(com.parse.ParseUser,java.util.Map) -> access$300
    java.util.Map access$400(com.parse.ParseUser,java.lang.String) -> access$400
    void access$500(com.parse.ParseUser,java.lang.String) -> access$500
    void access$600(com.parse.ParseUser) -> access$600
    bolts.Task access$700(com.parse.ParseUser,java.lang.String,java.util.Map,bolts.Task,java.lang.String) -> access$700
    bolts.Task access$800(com.parse.ParseUser,bolts.Task) -> access$800
    bolts.Task access$900(com.parse.ParseUser,java.lang.String) -> access$900
com.parse.ParseUser$1 -> com.parse.ParseUser$1:
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$10 -> com.parse.ParseUser$10:
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$10$1 -> com.parse.ParseUser$10$1:
    com.parse.ParseUser val$user -> val$user
    com.parse.ParseUser$10 this$0 -> this$0
    com.parse.ParseUser then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$11 -> com.parse.ParseUser$11:
    java.lang.String val$authType -> val$authType
    java.util.Map val$authData -> val$authData
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$11$1 -> com.parse.ParseUser$11$1:
    com.parse.ParseUser$11 this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$11$1$1 -> com.parse.ParseUser$11$1$1:
    com.parse.ParseUser val$user -> val$user
    com.parse.ParseUser$11$1 this$1 -> this$1
    com.parse.ParseUser then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$12 -> com.parse.ParseUser$12:
    java.lang.String val$authType -> val$authType
    java.util.Map val$authData -> val$authData
    bolts.Continuation val$logInWithTask -> val$logInWithTask
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$12$1 -> com.parse.ParseUser$12$1:
    com.parse.ParseUser val$user -> val$user
    java.util.Map val$oldAnonymousData -> val$oldAnonymousData
    com.parse.ParseUser$12 this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$12$1$1 -> com.parse.ParseUser$12$1$1:
    com.parse.ParseUser$12$1 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$12$1$2 -> com.parse.ParseUser$12$1$2:
    com.parse.ParseUser$12$1 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$12$2 -> com.parse.ParseUser$12$2:
    com.parse.ParseUser val$user -> val$user
    com.parse.ParseUser$12 this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$13 -> com.parse.ParseUser$13:
    java.lang.String val$authType -> val$authType
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$14 -> com.parse.ParseUser$14:
    java.util.Map val$oldAnonymousData -> val$oldAnonymousData
    java.lang.String val$authType -> val$authType
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$15 -> com.parse.ParseUser$15:
    java.lang.String val$authType -> val$authType
    java.util.Map val$authData -> val$authData
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$16 -> com.parse.ParseUser$16:
    com.parse.ParseOperationSet val$operations -> val$operations
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$16$1 -> com.parse.ParseUser$16$1:
    com.parse.ParseUser$16 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$16$1$1 -> com.parse.ParseUser$16$1$1:
    com.parse.ParseUser$State val$result -> val$result
    com.parse.ParseUser$16$1 this$2 -> this$2
    com.parse.ParseUser$State then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$16$1$2 -> com.parse.ParseUser$16$1$2:
    com.parse.ParseUser$16$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$17 -> com.parse.ParseUser$17:
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$18 -> com.parse.ParseUser$18:
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$19 -> com.parse.ParseUser$19:
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$2 -> com.parse.ParseUser$2:
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$20 -> com.parse.ParseUser$20:
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$3 -> com.parse.ParseUser$3:
    com.parse.ParseUser this$0 -> this$0
    com.parse.ParseObject then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$4 -> com.parse.ParseUser$4:
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$5 -> com.parse.ParseUser$5:
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$6 -> com.parse.ParseUser$6:
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$7 -> com.parse.ParseUser$7:
    com.parse.ParseUser val$user -> val$user
    java.lang.String val$oldUsername -> val$oldUsername
    java.lang.String val$oldPassword -> val$oldPassword
    java.util.Map val$anonymousData -> val$anonymousData
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$8 -> com.parse.ParseUser$8:
    com.parse.ParseOperationSet val$operations -> val$operations
    java.lang.String val$sessionToken -> val$sessionToken
    com.parse.ParseUser this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$8$1 -> com.parse.ParseUser$8$1:
    com.parse.ParseUser$8 this$1 -> this$1
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$8$1$1 -> com.parse.ParseUser$8$1$1:
    bolts.Task val$signUpTask -> val$signUpTask
    com.parse.ParseUser$8$1 this$2 -> this$2
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$9 -> com.parse.ParseUser$9:
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$9$1 -> com.parse.ParseUser$9$1:
    com.parse.ParseUser val$newCurrent -> val$newCurrent
    com.parse.ParseUser$9 this$0 -> this$0
    com.parse.ParseUser then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.ParseUser$State -> com.parse.ParseUser$State:
    boolean isNew -> isNew
    com.parse.ParseUser$State$Builder newBuilder() -> newBuilder
    java.lang.String sessionToken() -> sessionToken
    java.util.Map authData() -> authData
    boolean isNew() -> isNew
    com.parse.ParseObject$State$Init newBuilder() -> newBuilder
com.parse.ParseUser$State$Builder -> com.parse.ParseUser$State$Builder:
    boolean isNew -> isNew
    com.parse.ParseUser$State$Builder self() -> self
    com.parse.ParseUser$State build() -> build
    com.parse.ParseUser$State$Builder apply(com.parse.ParseObject$State) -> apply
    com.parse.ParseUser$State$Builder sessionToken(java.lang.String) -> sessionToken
    com.parse.ParseUser$State$Builder authData(java.util.Map) -> authData
    com.parse.ParseUser$State$Builder putAuthData(java.lang.String,java.util.Map) -> putAuthData
    com.parse.ParseUser$State$Builder isNew(boolean) -> isNew
    com.parse.ParseObject$State$Init apply(com.parse.ParseObject$State) -> apply
    com.parse.ParseObject$State build() -> build
    com.parse.ParseObject$State$Init self() -> self
    boolean access$100(com.parse.ParseUser$State$Builder) -> access$100
com.parse.ParseUserController -> com.parse.ParseUserController:
    bolts.Task signUpAsync(com.parse.ParseObject$State,com.parse.ParseOperationSet,java.lang.String) -> signUpAsync
    bolts.Task logInAsync(java.lang.String,java.lang.String) -> logInAsync
    bolts.Task logInAsync(com.parse.ParseUser$State,com.parse.ParseOperationSet) -> logInAsync
    bolts.Task logInAsync(java.lang.String,java.util.Map) -> logInAsync
    bolts.Task getUserAsync(java.lang.String) -> getUserAsync
    bolts.Task requestPasswordResetAsync(java.lang.String) -> requestPasswordResetAsync
com.parse.ParseUserCurrentCoder -> com.parse.ParseUserCurrentCoder:
    java.lang.String KEY_AUTH_DATA -> KEY_AUTH_DATA
    java.lang.String KEY_SESSION_TOKEN -> KEY_SESSION_TOKEN
    com.parse.ParseUserCurrentCoder INSTANCE -> INSTANCE
    com.parse.ParseUserCurrentCoder get() -> get
    org.json.JSONObject encode(com.parse.ParseObject$State,com.parse.ParseOperationSet,com.parse.ParseEncoder) -> encode
    com.parse.ParseObject$State$Init decode(com.parse.ParseObject$State$Init,org.json.JSONObject,com.parse.ParseDecoder) -> decode
com.parse.ParseWakeLock -> com.parse.ParseWakeLock:
    java.lang.String TAG -> TAG
    boolean hasWakeLockPermission -> hasWakeLockPermission
    android.os.PowerManager$WakeLock wakeLock -> wakeLock
    com.parse.ParseWakeLock acquireNewWakeLock(android.content.Context,int,java.lang.String,long) -> acquireNewWakeLock
    void release() -> release
com.parse.PointerEncoder -> com.parse.PointerEncoder:
    com.parse.PointerEncoder INSTANCE -> INSTANCE
    com.parse.PointerEncoder get() -> get
    org.json.JSONObject encodeRelatedObject(com.parse.ParseObject) -> encodeRelatedObject
com.parse.PointerOrLocalIdEncoder -> com.parse.PointerOrLocalIdEncoder:
    com.parse.PointerOrLocalIdEncoder INSTANCE -> INSTANCE
    com.parse.PointerOrLocalIdEncoder get() -> get
    org.json.JSONObject encodeRelatedObject(com.parse.ParseObject) -> encodeRelatedObject
com.parse.ProcFileReader -> com.parse.ProcFileReader:
    java.lang.Class TAG -> TAG
    int CANNOT_DETERMINE_OPEN_FDS -> CANNOT_DETERMINE_OPEN_FDS
    int SECURITY_EXCEPTION -> SECURITY_EXCEPTION
    int getOpenFDCount() -> getOpenFDCount
    com.parse.ProcFileReader$OpenFDLimits getOpenFDLimits() -> getOpenFDLimits
com.parse.ProcFileReader$OpenFDLimits -> com.parse.ProcFileReader$OpenFDLimits:
    java.lang.String softLimit -> softLimit
    java.lang.String hardLimit -> hardLimit
com.parse.ProgressCallback -> com.parse.ProgressCallback:
    void done(java.lang.Integer) -> done
com.parse.ProxyService -> com.parse.ProxyService:
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
com.parse.PushHistory -> com.parse.PushHistory:
    java.lang.String TAG -> TAG
    int maxHistoryLength -> maxHistoryLength
    java.util.PriorityQueue entries -> entries
    java.util.HashSet pushIds -> pushIds
    java.lang.String lastTime -> lastTime
    org.json.JSONObject toJSON() -> toJSON
    java.lang.String getLastReceivedTimestamp() -> getLastReceivedTimestamp
    void setLastReceivedTimestamp(java.lang.String) -> setLastReceivedTimestamp
    boolean tryInsertPush(java.lang.String,java.lang.String) -> tryInsertPush
com.parse.PushHistory$Entry -> com.parse.PushHistory$Entry:
    java.lang.String pushId -> pushId
    java.lang.String timestamp -> timestamp
    int compareTo(com.parse.PushHistory$Entry) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
com.parse.PushRouter -> com.parse.PushRouter:
    java.lang.String TAG -> TAG
    java.lang.String LEGACY_STATE_LOCATION -> LEGACY_STATE_LOCATION
    java.lang.String STATE_LOCATION -> STATE_LOCATION
    int MAX_HISTORY_LENGTH -> MAX_HISTORY_LENGTH
    com.parse.PushRouter instance -> instance
    java.io.File diskState -> diskState
    com.parse.PushHistory history -> history
    com.parse.PushRouter getInstance() -> getInstance
    void resetInstance() -> resetInstance
    com.parse.PushRouter pushRouterFromState(java.io.File,java.io.File,int) -> pushRouterFromState
    org.json.JSONObject readJSONFileQuietly(java.io.File) -> readJSONFileQuietly
    org.json.JSONObject toJSON() -> toJSON
    void saveStateToDisk() -> saveStateToDisk
    java.lang.String getLastReceivedTimestamp() -> getLastReceivedTimestamp
    boolean handlePush(java.lang.String,java.lang.String,java.lang.String,org.json.JSONObject) -> handlePush
com.parse.PushService -> com.parse.PushService:
    java.lang.String TAG -> TAG
    java.lang.String ACTION_START_IF_REQUIRED -> ACTION_START_IF_REQUIRED
    boolean loggedStartError -> loggedStartError
    java.util.List serviceLifecycleCallbacks -> serviceLifecycleCallbacks
    com.parse.ProxyService proxy -> proxy
    void registerServiceLifecycleCallbacks(com.parse.PushService$ServiceLifecycleCallbacks) -> registerServiceLifecycleCallbacks
    void unregisterServiceLifecycleCallbacks(com.parse.PushService$ServiceLifecycleCallbacks) -> unregisterServiceLifecycleCallbacks
    void dispatchOnServiceCreated(android.app.Service) -> dispatchOnServiceCreated
    void dispatchOnServiceDestroyed(android.app.Service) -> dispatchOnServiceDestroyed
    java.lang.Object[] collectServiceLifecycleCallbacks() -> collectServiceLifecycleCallbacks
    void startServiceIfRequired(android.content.Context) -> startServiceIfRequired
    void stopServiceIfRequired(android.content.Context) -> stopServiceIfRequired
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
com.parse.PushService$1 -> com.parse.PushService$1:
    int[] $SwitchMap$com$parse$PushType -> $SwitchMap$com$parse$PushType
com.parse.PushService$ServiceLifecycleCallbacks -> com.parse.PushService$ServiceLifecycleCallbacks:
    void onServiceCreated(android.app.Service) -> onServiceCreated
    void onServiceDestroyed(android.app.Service) -> onServiceDestroyed
com.parse.PushType -> com.parse.PushType:
    com.parse.PushType NONE -> NONE
    com.parse.PushType PPNS -> PPNS
    com.parse.PushType GCM -> GCM
    java.lang.String pushType -> pushType
    com.parse.PushType[] $VALUES -> $VALUES
    com.parse.PushType[] values() -> values
    com.parse.PushType valueOf(java.lang.String) -> valueOf
    com.parse.PushType fromString(java.lang.String) -> fromString
    java.lang.String toString() -> toString
com.parse.ReflectionCollector -> com.parse.ReflectionCollector:
    java.lang.String collectConstants(java.lang.Class) -> collectConstants
    java.lang.String collectStaticGettersResults(java.lang.Class) -> collectStaticGettersResults
com.parse.RefreshCallback -> com.parse.RefreshCallback:
    void done(com.parse.ParseObject,com.parse.ParseException) -> done
com.parse.ReportField -> com.parse.ReportField:
    com.parse.ReportField REPORT_ID -> REPORT_ID
    com.parse.ReportField ANDROID_ID -> ANDROID_ID
    com.parse.ReportField UID -> UID
    com.parse.ReportField APP_VERSION_CODE -> APP_VERSION_CODE
    com.parse.ReportField APP_VERSION_NAME -> APP_VERSION_NAME
    com.parse.ReportField PACKAGE_NAME -> PACKAGE_NAME
    com.parse.ReportField FILE_PATH -> FILE_PATH
    com.parse.ReportField PHONE_MODEL -> PHONE_MODEL
    com.parse.ReportField ANDROID_VERSION -> ANDROID_VERSION
    com.parse.ReportField OS_VERSION -> OS_VERSION
    com.parse.ReportField IS_CYANOGENMOD -> IS_CYANOGENMOD
    com.parse.ReportField BUILD -> BUILD
    com.parse.ReportField BRAND -> BRAND
    com.parse.ReportField PRODUCT -> PRODUCT
    com.parse.ReportField TOTAL_MEM_SIZE -> TOTAL_MEM_SIZE
    com.parse.ReportField AVAILABLE_MEM_SIZE -> AVAILABLE_MEM_SIZE
    com.parse.ReportField CUSTOM_DATA -> CUSTOM_DATA
    com.parse.ReportField STACK_TRACE -> STACK_TRACE
    com.parse.ReportField CRASH_CONFIGURATION -> CRASH_CONFIGURATION
    com.parse.ReportField DISPLAY -> DISPLAY
    com.parse.ReportField USER_APP_START_DATE -> USER_APP_START_DATE
    com.parse.ReportField USER_CRASH_DATE -> USER_CRASH_DATE
    com.parse.ReportField DUMPSYS_MEMINFO -> DUMPSYS_MEMINFO
    com.parse.ReportField DROPBOX -> DROPBOX
    com.parse.ReportField LOGCAT -> LOGCAT
    com.parse.ReportField EVENTSLOG -> EVENTSLOG
    com.parse.ReportField RADIOLOG -> RADIOLOG
    com.parse.ReportField IS_SILENT -> IS_SILENT
    com.parse.ReportField DEVICE_ID -> DEVICE_ID
    com.parse.ReportField INSTALLATION_ID -> INSTALLATION_ID
    com.parse.ReportField USER_EMAIL -> USER_EMAIL
    com.parse.ReportField DEVICE_FEATURES -> DEVICE_FEATURES
    com.parse.ReportField ENVIRONMENT -> ENVIRONMENT
    com.parse.ReportField SETTINGS_SYSTEM -> SETTINGS_SYSTEM
    com.parse.ReportField SETTINGS_SECURE -> SETTINGS_SECURE
    com.parse.ReportField PROCESS_NAME -> PROCESS_NAME
    com.parse.ReportField PROCESS_NAME_BY_AMS -> PROCESS_NAME_BY_AMS
    com.parse.ReportField UPLOADED_BY_PROCESS -> UPLOADED_BY_PROCESS
    com.parse.ReportField ACTIVITY_LOG -> ACTIVITY_LOG
    com.parse.ReportField ACRA_INTERNAL -> ACRA_INTERNAL
    com.parse.ReportField PROCESS_UPTIME -> PROCESS_UPTIME
    com.parse.ReportField DEVICE_UPTIME -> DEVICE_UPTIME
    com.parse.ReportField JAIL_BROKEN -> JAIL_BROKEN
    com.parse.ReportField ACRA_REPORT_FILENAME -> ACRA_REPORT_FILENAME
    com.parse.ReportField EXCEPTION_CAUSE -> EXCEPTION_CAUSE
    com.parse.ReportField REPORT_LOAD_THROW -> REPORT_LOAD_THROW
    com.parse.ReportField MINIDUMP -> MINIDUMP
    com.parse.ReportField OPEN_FD_COUNT -> OPEN_FD_COUNT
    com.parse.ReportField OPEN_FD_SOFT_LIMIT -> OPEN_FD_SOFT_LIMIT
    com.parse.ReportField OPEN_FD_HARD_LIMIT -> OPEN_FD_HARD_LIMIT
    com.parse.ReportField APP_INSTALL_TIME -> APP_INSTALL_TIME
    com.parse.ReportField APP_UPGRADE_TIME -> APP_UPGRADE_TIME
    com.parse.ReportField SERIAL -> SERIAL
    com.parse.ReportField IS_LOW_RAM_DEVICE -> IS_LOW_RAM_DEVICE
    com.parse.ReportField SIGQUIT -> SIGQUIT
    com.parse.ReportField LARGE_MEM_HEAP -> LARGE_MEM_HEAP
    com.parse.ReportField ANDROID_RUNTIME -> ANDROID_RUNTIME
    com.parse.ReportField[] $VALUES -> $VALUES
    com.parse.ReportField[] values() -> values
    com.parse.ReportField valueOf(java.lang.String) -> valueOf
com.parse.ReportSender -> com.parse.ReportSender:
    void send(com.parse.CrashReportData) -> send
com.parse.ReportSenderException -> com.parse.ReportSenderException:
com.parse.ReportsCrashes -> com.parse.ReportsCrashes:
    boolean includeDropBoxSystemTags() -> includeDropBoxSystemTags
    java.lang.String[] additionalDropBoxTags() -> additionalDropBoxTags
    int dropboxCollectionMinutes() -> dropboxCollectionMinutes
    java.lang.String[] logcatArguments() -> logcatArguments
    java.lang.String formPostFormat() -> formPostFormat
    int socketTimeout() -> socketTimeout
    boolean checkSSLCertsOnCrashReport() -> checkSSLCertsOnCrashReport
    android.content.Context getApplicationContext() -> getApplicationContext
com.parse.RequestPasswordResetCallback -> com.parse.RequestPasswordResetCallback:
    void done(com.parse.ParseException) -> done
com.parse.SSLConnectionProvider -> com.parse.SSLConnectionProvider:
    java.net.HttpURLConnection getConnection(java.net.URL) -> getConnection
    java.net.HttpURLConnection initializeConnectionParameters(java.net.HttpURLConnection) -> initializeConnectionParameters
com.parse.SaveCallback -> com.parse.SaveCallback:
    void done(com.parse.ParseException) -> done
com.parse.SendCallback -> com.parse.SendCallback:
    void done(com.parse.ParseException) -> done
com.parse.ServiceUtils -> com.parse.ServiceUtils:
    java.lang.String TAG -> TAG
    java.lang.String WAKE_LOCK_EXTRA -> WAKE_LOCK_EXTRA
    android.util.SparseArray wakeLocks -> wakeLocks
    int wakeLockId -> wakeLockId
    boolean runIntentInService(android.content.Context,android.content.Intent,java.lang.Class) -> runIntentInService
    boolean runWakefulIntentInService(android.content.Context,android.content.Intent,java.lang.Class) -> runWakefulIntentInService
    void completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
com.parse.SettingsCollector -> com.parse.SettingsCollector:
    java.lang.String collectSystemSettings(android.content.Context) -> collectSystemSettings
    java.lang.String collectSecureSettings(android.content.Context) -> collectSecureSettings
    boolean isAuthorized(java.lang.reflect.Field) -> isAuthorized
com.parse.SignUpCallback -> com.parse.SignUpCallback:
    void done(com.parse.ParseException) -> done
com.parse.SimpleTraceLogger -> com.parse.SimpleTraceLogger:
    java.lang.String TAG -> TAG
    int NO_LIMIT -> NO_LIMIT
    int mTraceCountLimit -> mTraceCountLimit
    java.util.Queue mTrace -> mTrace
    void append(java.lang.String,java.lang.Object[]) -> append
    void append(java.lang.String) -> append
    java.lang.String toString() -> toString
    java.lang.String toString(int) -> toString
    void clear() -> clear
com.parse.SimpleTraceLogger$TraceLogLine -> com.parse.SimpleTraceLogger$TraceLogLine:
    java.lang.String trace -> trace
    long time -> time
    java.lang.String toString() -> toString
com.parse.TaskQueue -> com.parse.TaskQueue:
    bolts.Task tail -> tail
    java.util.concurrent.locks.Lock lock -> lock
    bolts.Task getTaskToAwait() -> getTaskToAwait
    bolts.Task enqueue(bolts.Continuation) -> enqueue
    bolts.Continuation waitFor(bolts.Task) -> waitFor
    java.util.concurrent.locks.Lock getLock() -> getLock
    void waitUntilFinished() -> waitUntilFinished
com.parse.TaskQueue$1 -> com.parse.TaskQueue$1:
    com.parse.TaskQueue this$0 -> this$0
    java.lang.Void then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.TaskQueue$2 -> com.parse.TaskQueue$2:
    bolts.Task val$toAwait -> val$toAwait
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.TaskQueue$2$1 -> com.parse.TaskQueue$2$1:
    bolts.Task val$task -> val$task
    com.parse.TaskQueue$2 this$0 -> this$0
    bolts.Task then(bolts.Task) -> then
    java.lang.Object then(bolts.Task) -> then
com.parse.TaskStackBuilderHelper -> com.parse.TaskStackBuilderHelper:
    void startActivities(android.content.Context,java.lang.Class,android.content.Intent) -> startActivities
com.parse.TrustEveryoneTrustManager -> com.parse.TrustEveryoneTrustManager:
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.parse.UnsafeConnectionProvider -> com.parse.UnsafeConnectionProvider:
    java.net.HttpURLConnection getConnection(java.net.URL) -> getConnection
    java.net.HttpURLConnection initializeConnectionParameters(java.net.HttpURLConnection) -> initializeConnectionParameters
com.parse.UnsafeConnectionProvider$1 -> com.parse.UnsafeConnectionProvider$1:
    com.parse.UnsafeConnectionProvider this$0 -> this$0
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.parse.WeakValueHashMap -> com.parse.WeakValueHashMap:
    java.util.HashMap map -> map
    void put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    void remove(java.lang.Object) -> remove
    void clear() -> clear
com.parse.http.ParseHttpBody -> com.parse.http.ParseHttpBody:
    java.lang.String contentType -> contentType
    long contentLength -> contentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    long getContentLength() -> getContentLength
    java.lang.String getContentType() -> getContentType
com.parse.http.ParseHttpRequest -> com.parse.http.ParseHttpRequest:
    java.lang.String url -> url
    com.parse.http.ParseHttpRequest$Method method -> method
    java.util.Map headers -> headers
    com.parse.http.ParseHttpBody body -> body
    java.lang.String getUrl() -> getUrl
    com.parse.http.ParseHttpRequest$Method getMethod() -> getMethod
    java.util.Map getAllHeaders() -> getAllHeaders
    java.lang.String getHeader(java.lang.String) -> getHeader
    com.parse.http.ParseHttpBody getBody() -> getBody
    java.lang.String access$000(com.parse.http.ParseHttpRequest) -> access$000
    com.parse.http.ParseHttpRequest$Method access$100(com.parse.http.ParseHttpRequest) -> access$100
    java.util.Map access$200(com.parse.http.ParseHttpRequest) -> access$200
    com.parse.http.ParseHttpBody access$300(com.parse.http.ParseHttpRequest) -> access$300
com.parse.http.ParseHttpRequest$1 -> com.parse.http.ParseHttpRequest$1:
    int[] $SwitchMap$com$parse$http$ParseHttpRequest$Method -> $SwitchMap$com$parse$http$ParseHttpRequest$Method
com.parse.http.ParseHttpRequest$Builder -> com.parse.http.ParseHttpRequest$Builder:
    java.lang.String url -> url
    com.parse.http.ParseHttpRequest$Method method -> method
    java.util.Map headers -> headers
    com.parse.http.ParseHttpBody body -> body
    com.parse.http.ParseHttpRequest$Builder setUrl(java.lang.String) -> setUrl
    com.parse.http.ParseHttpRequest$Builder setMethod(com.parse.http.ParseHttpRequest$Method) -> setMethod
    com.parse.http.ParseHttpRequest$Builder setBody(com.parse.http.ParseHttpBody) -> setBody
    com.parse.http.ParseHttpRequest$Builder addHeader(java.lang.String,java.lang.String) -> addHeader
    com.parse.http.ParseHttpRequest$Builder addHeaders(java.util.Map) -> addHeaders
    com.parse.http.ParseHttpRequest$Builder setHeaders(java.util.Map) -> setHeaders
    com.parse.http.ParseHttpRequest build() -> build
    java.lang.String access$500(com.parse.http.ParseHttpRequest$Builder) -> access$500
    com.parse.http.ParseHttpRequest$Method access$600(com.parse.http.ParseHttpRequest$Builder) -> access$600
    java.util.Map access$700(com.parse.http.ParseHttpRequest$Builder) -> access$700
    com.parse.http.ParseHttpBody access$800(com.parse.http.ParseHttpRequest$Builder) -> access$800
com.parse.http.ParseHttpRequest$Method -> com.parse.http.ParseHttpRequest$Method:
    com.parse.http.ParseHttpRequest$Method GET -> GET
    com.parse.http.ParseHttpRequest$Method POST -> POST
    com.parse.http.ParseHttpRequest$Method PUT -> PUT
    com.parse.http.ParseHttpRequest$Method DELETE -> DELETE
    com.parse.http.ParseHttpRequest$Method[] $VALUES -> $VALUES
    com.parse.http.ParseHttpRequest$Method[] values() -> values
    com.parse.http.ParseHttpRequest$Method valueOf(java.lang.String) -> valueOf
    com.parse.http.ParseHttpRequest$Method fromString(java.lang.String) -> fromString
    java.lang.String toString() -> toString
com.parse.http.ParseHttpResponse -> com.parse.http.ParseHttpResponse:
    int statusCode -> statusCode
    java.io.InputStream content -> content
    long totalSize -> totalSize
    java.lang.String reasonPhrase -> reasonPhrase
    java.util.Map headers -> headers
    java.lang.String contentType -> contentType
    int getStatusCode() -> getStatusCode
    java.io.InputStream getContent() -> getContent
    long getTotalSize() -> getTotalSize
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.String getContentType() -> getContentType
    java.lang.String getHeader(java.lang.String) -> getHeader
    java.util.Map getAllHeaders() -> getAllHeaders
com.parse.http.ParseHttpResponse$1 -> com.parse.http.ParseHttpResponse$1:
com.parse.http.ParseHttpResponse$Builder -> com.parse.http.ParseHttpResponse$Builder:
    int statusCode -> statusCode
    java.io.InputStream content -> content
    long totalSize -> totalSize
    java.lang.String reasonPhrase -> reasonPhrase
    java.util.Map headers -> headers
    java.lang.String contentType -> contentType
    com.parse.http.ParseHttpResponse$Builder setStatusCode(int) -> setStatusCode
    com.parse.http.ParseHttpResponse$Builder setContent(java.io.InputStream) -> setContent
    com.parse.http.ParseHttpResponse$Builder setTotalSize(long) -> setTotalSize
    com.parse.http.ParseHttpResponse$Builder setReasonPhrase(java.lang.String) -> setReasonPhrase
    com.parse.http.ParseHttpResponse$Builder setHeaders(java.util.Map) -> setHeaders
    com.parse.http.ParseHttpResponse$Builder addHeaders(java.util.Map) -> addHeaders
    com.parse.http.ParseHttpResponse$Builder addHeader(java.lang.String,java.lang.String) -> addHeader
    com.parse.http.ParseHttpResponse$Builder setContentType(java.lang.String) -> setContentType
    com.parse.http.ParseHttpResponse build() -> build
    int access$100(com.parse.http.ParseHttpResponse$Builder) -> access$100
    java.io.InputStream access$200(com.parse.http.ParseHttpResponse$Builder) -> access$200
    long access$300(com.parse.http.ParseHttpResponse$Builder) -> access$300
    java.lang.String access$400(com.parse.http.ParseHttpResponse$Builder) -> access$400
    java.util.Map access$500(com.parse.http.ParseHttpResponse$Builder) -> access$500
    java.lang.String access$600(com.parse.http.ParseHttpResponse$Builder) -> access$600
com.parse.http.ParseNetworkInterceptor -> com.parse.http.ParseNetworkInterceptor:
    com.parse.http.ParseHttpResponse intercept(com.parse.http.ParseNetworkInterceptor$Chain) -> intercept
com.parse.http.ParseNetworkInterceptor$Chain -> com.parse.http.ParseNetworkInterceptor$Chain:
    com.parse.http.ParseHttpRequest getRequest() -> getRequest
    com.parse.http.ParseHttpResponse proceed(com.parse.http.ParseHttpRequest) -> proceed
